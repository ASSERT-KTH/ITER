bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnName    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
2	[BUG]  [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnName  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnName  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnName	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnName    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
3	[BUG]  [BUGGY]  AssertionFailedError.make(t,  enclosingFnName,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError.make(t,  enclosingFnName,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError.make(t,  enclosingFnName,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnName    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
4	[BUG]  [BUGGY]  AssertionFailedError.make(t,  enclosingFnName,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError.make(t,  enclosingFnName,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError.make(t,  enclosingFnName,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnName    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
5	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeUtil.isValidPropertyName(methodName))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeUtil.isValidPropertyName(methodName))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
6	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
7	[BUG]  [BUGGY]  ||  expr!=  null)  {  for(Node  arg  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  expr!=  null)  {  for(Node  arg  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  expr!=  null)  {  for(Node  arg  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
8	[BUG]  [BUGGY]  ||  expr!=  null)  {  for(Node  arg  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  expr!=  null)  {  for(Node  arg  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  expr!=  null)  {  for(Node  arg  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Preconditions.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Preconditions.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  Preconditions.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
10	[BUG]  [BUGGY]  if(methodName!=  null  ||  methodName.length()  ==  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  ||  methodName.length()  ==  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  ||  methodName.length()  ==  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }	  if(methodName!=    null    &&    methodName.length()    ==    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
11	[BUG]  [BUGGY]  ||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false	  ||    methodName.equals(   "provide       "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  ||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true	  ||    methodName.equals(   "provide       "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  parent.replaceChild(n,  expr);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent.replaceChild(n,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent.replaceChild(n,  expr);	  if(isExpr)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
14	[BUG]  [BUGGY]  if(explicit)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(explicit)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(explicit)  {  return  false;  }	  if(isExpr)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
15	[BUG]  [BUGGY]  if(explicitNode)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(explicitNode)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(explicitNode)  {  return  false;  }	  if(isExpr)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
16	[BUG]  [BUGGY]  parent.replaceChild(expr,  expr);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent.replaceChild(expr,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent.replaceChild(expr,  expr);	  if(isExpr)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
17	[BUG]  [BUGGY]  ||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  ||    methodName.equals(   "provide       "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
18	[BUG]  [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isExpression)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isExpression)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isExpression)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(expr.getType()    ==    Token.EXPR_RESULT)    {    if(!isExpr)    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
19	[BUG]  [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isFunctionDeclaration)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isFunctionDeclaration)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isFunctionDeclaration)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(expr.getType()    ==    Token.EXPR_RESULT)    {    if(!isExpr)    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
20	[BUG]  [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part),  methodName);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part),  methodName);  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part),  methodName);  return  false;  }	  if(expr.getType()    ==    Token.EXPR_RESULT)    {    if(!isExpr)    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
21	[BUG]  [BUGGY]  Context.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  Context.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
22	[BUG]  [BUGGY]  if(expr!=  null  ||  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null  ||  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null  ||  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }	  if(expr!=    null    &&    expr.getType()    ==    Token.EXPR_RESULT)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
23	[BUG]  [BUGGY]  if(expr  ==  null  &&  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null  &&  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null  &&  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }	  if(expr!=    null    &&    expr.getType()    ==    Token.EXPR_RESULT)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
24	[BUG]  [BUGGY]  if(expr  ==  null  &&  expr.getType()!=  Token.EXPR_RESULT)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null  &&  expr.getType()!=  Token.EXPR_RESULT)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null  &&  expr.getType()!=  Token.EXPR_RESULT)  {  return  false;  }	  if(expr!=    null    &&    expr.getType()    ==    Token.EXPR_RESULT)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
25	[BUG]  [BUGGY]  if(expr!=  null  ||  expr.getType()!=  Token.EXPR_RESULT)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null  ||  expr.getType()!=  Token.EXPR_RESULT)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null  ||  expr.getType()!=  Token.EXPR_RESULT)  {  return  false;  }	  if(expr    ==    null    ||    expr.getType()!=    Token.EXPR_RESULT)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
26	[BUG]  [BUGGY]  if(expr!=  null  &&  expr.getType()!=  Token.EXPR_RESULT)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null  &&  expr.getType()!=  Token.EXPR_RESULT)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null  &&  expr.getType()!=  Token.EXPR_RESULT)  {  return  false;  }	  if(expr    ==    null    ||    expr.getType()!=    Token.EXPR_RESULT)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Preconditions.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Preconditions.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }	  Preconditions.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unrecognized  method  name: "  +  methodName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  throw  new  IllegalStateException( "Unrecognized  method  name: "  +  methodName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	throw  new  IllegalStateException( "Unrecognized  method  name: "  +  methodName);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unrecognized  module: "  +  methodName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  throw  new  IllegalStateException( "Unrecognized  module: "  +  methodName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	throw  new  IllegalStateException( "Unrecognized  module: "  +  methodName);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  ||  methodName.equals( "provided "))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.equals( "provided "))  {  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.equals( "provided "))  {  return  false;	  ||    methodName.equals(   "provide       "))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  parent  ==  null  ||  expr  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent  ==  null  ||  expr  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent  ==  null  ||  expr  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(expr    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
33	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(expr    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
34	[BUG]  [BUGGY]  parent  ==  null  &&  expr  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent  ==  null  &&  expr  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent  ==  null  &&  expr  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(expr    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
35	[BUG]  [BUGGY]  parent  ==  null  &&  expr!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent  ==  null  &&  expr!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent  ==  null  &&  expr!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(expr    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
36	[BUG]  [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnNameNode));  return  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnNameNode));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnNameNode));  return  false;	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
37	[BUG]  [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnNameNode));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnNameNode));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnNameNode));	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
38	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(methodName));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(methodName));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Throwables.throw  new  IllegalArgumentException( " "));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  if(methodName  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName  ==  null)  {  return  false;  }	  if(methodName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  parent!=  null  &&  methodName!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent!=  null  &&  methodName!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent!=  null  &&  methodName!=  null)  {  return  false;  }	  if(methodName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
43	[BUG]  [BUGGY]  ||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }	  ||    methodName.equals(   "provide       "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
44	[BUG]  [BUGGY]  if(methodName  ==  null  ||  methodName.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName  ==  null  ||  methodName.length()  ==  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName  ==  null  ||  methodName.length()  ==  0)  {  return  false;  }	  if(methodName!=    null    &&    methodName.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
45	[BUG]  [BUGGY]  if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }	  if(methodName!=    null    &&    methodName.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
46	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  expr);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  expr);	  NodeTraversal.traverse(compiler,    t,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg);	  NodeTraversal.traverse(compiler,    t,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  if(expr!=  null  ||  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null  ||  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null  ||  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }	  if(expr!=    null    &&    expr.getType()    ==    Token.REQUIRE)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
49	[BUG]  [BUGGY]  if(expr  ==  null  &&  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null  &&  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null  &&  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }	  if(expr!=    null    &&    expr.getType()    ==    Token.REQUIRE)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
50	[BUG]  [BUGGY]  if(expr  ==  null  &&  expr.getType()!=  Token.REQUIRE)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null  &&  expr.getType()!=  Token.REQUIRE)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null  &&  expr.getType()!=  Token.REQUIRE)  {  return  false;  }	  if(expr!=    null    &&    expr.getType()    ==    Token.REQUIRE)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
51	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  expr);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  methodName,  expr);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  expr);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  expr);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  AssertionFailedError.make(t,  enclosingFnNameNode,  methodName));  return  false  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError.make(t,  enclosingFnNameNode,  methodName));  return  false  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError.make(t,  enclosingFnNameNode,  methodName));  return  false	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
55	[BUG]  [BUGGY]  AssertionFailedError.make(t,  enclosingFnNameNode,  methodName));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError.make(t,  enclosingFnNameNode,  methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError.make(t,  enclosingFnNameNode,  methodName));	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
56	[BUG]  [BUGGY]  AssertionFailedError.error(t,  enclosingFnNameNode.getString());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError.error(t,  enclosingFnNameNode.getString());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError.error(t,  enclosingFnNameNode.getString());	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
57	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  sourceFile);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  sourceFile);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  methodName,  sourceFile);	  NodeTraversal.traverse(compiler,    t,    sourceFile,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  sourceFile,  methodName,  arg);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  sourceFile,  methodName,  arg);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  sourceFile,  methodName,  arg);	  NodeTraversal.traverse(compiler,    t,    sourceFile,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  sourceFile,  methodName,  expr);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  t,  sourceFile,  methodName,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  t,  sourceFile,  methodName,  expr);	  NodeTraversal.traverse(compiler,    t,    sourceFile,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  sourceFile,  methodName,  explicit);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  t,  sourceFile,  methodName,  explicit);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  t,  sourceFile,  methodName,  explicit);	  NodeTraversal.traverse(compiler,    t,    sourceFile,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
61	[BUG]  [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnNameNode));  return  true;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnNameNode));  return  true;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Node  enclosingFnNameNode  =  arg.getFirstChild().getNext();  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingFnNameNode));  return  true;	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false	  Preconditions.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;	  Preconditions.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
64	[BUG]  [BUGGY]  parent  ==  null  &&  expr  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent  ==  null  &&  expr  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent  ==  null  &&  expr  ==  null)  {  return  false;  }	  parent    ==    null    ||    expr    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  ||  methodName.length()  ==  0)  {  return  false;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.length()  ==  0)  {  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.length()  ==  0)  {  return  false;	  ||    methodName.length()    ==    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  ||  methodName.length()!=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.length()!=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.length()!=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  ||    methodName.length()    ==    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  ||  methodName.length()  ==  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.length()  ==  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.length()  ==  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));	  ||    methodName.length()    ==    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
68	[BUG]  [BUGGY]  if(methodName!=  null  ||  methodName.length()!=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  ||  methodName.length()!=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  ||  methodName.length()!=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(methodName    ==    null    ||    methodName.length()!=    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
69	[BUG]  [BUGGY]  Node  expr  =  arg.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Node  expr  =  arg.getFirstChild().getNext();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Node  expr  =  arg.getFirstChild().getNext();	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    arg));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
70	[BUG]  [BUGGY]  AssertionFailedError.error(t,  methodName,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError.error(t,  methodName,  null);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError.error(t,  methodName,  null);	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    arg));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
71	[BUG]  [BUGGY]  AssertionFailedError.error(t,  methodName,  arg);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError.error(t,  methodName,  arg);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError.error(t,  methodName,  arg);	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    arg));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
72	[BUG]  [BUGGY]  Context.checkState(arg.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.checkState(arg.getType()  ==  Token.FUNCTION);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.checkState(arg.getType()  ==  Token.FUNCTION);	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    arg));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
73	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unrecognized  method  name: "  +  methodName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unrecognized  method  name: "  +  methodName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Throwables.throw  new  IllegalArgumentException( "Unrecognized  method  name: "  +  methodName);	  throw    new    IllegalArgumentException(   "Unrecognized    method    name:   "    +    methodName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
74	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unrecognized  method  name: "  +  methodName,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Unrecognized  method  name: "  +  methodName,  t);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	throw  new  IllegalArgumentException( "Unrecognized  method  name: "  +  methodName,  t);	  throw    new    IllegalArgumentException(   "Unrecognized    method    name:   "    +    methodName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
75	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unrecognized  method  name: "  +  methodName,  arg);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Unrecognized  method  name: "  +  methodName,  arg);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	throw  new  IllegalArgumentException( "Unrecognized  method  name: "  +  methodName,  arg);	  throw    new    IllegalArgumentException(   "Unrecognized    method    name:   "    +    methodName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
76	[BUG]  [BUGGY]  Context.checkState(arg.getType()  ==  Token.REQUIRE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.checkState(arg.getType()  ==  Token.REQUIRE);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.checkState(arg.getType()  ==  Token.REQUIRE);	  if(expr    ==    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    arg));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(methodName!=    null    &&    methodName.length()    ==    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
78	[BUG]  [BUGGY]  if(expr  ==  null  &&  explicit)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null  &&  explicit)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null  &&  explicit)  {  return  false;  }	  if(expr    ==    null    ||    explicit)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
79	[BUG]  [BUGGY]  if(expr!=  null  ||  explicit)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null  ||  explicit)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null  ||  explicit)  {  return  false;  }	  if(expr    ==    null    ||    explicit)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
80	[BUG]  [BUGGY]  parent  ==  null  ||  explicit)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent  ==  null  ||  explicit)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent  ==  null  ||  explicit)  {  return  false;  }	  if(expr    ==    null    ||    explicit)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
81	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  this);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  methodName,  this);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this,  methodName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this,  methodName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  arg,  this,  methodName);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
83	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  null);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  arg,  null);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
84	[BUG]  [BUGGY]  Context.traverse(compiler,  arg,  this);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.traverse(compiler,  arg,  this);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.traverse(compiler,  arg,  this);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
85	[BUG]  [BUGGY]  ||  methodName.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.length()  ==  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.length()  ==  0)  {  return  false;  }	  if(methodName!=    null    ||    methodName.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
86	[BUG]  [BUGGY]  if(methodName  ==  null  ||  methodName.length()!=  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName  ==  null  ||  methodName.length()!=  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName  ==  null  ||  methodName.length()!=  0)  {  return  false;  }	  if(methodName!=    null    ||    methodName.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
87	[BUG]  [BUGGY]  Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return	  Context.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
88	[BUG]  [BUGGY]  Context.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.checkState(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }	  Context.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
89	[BUG]  [BUGGY]  if(methodName.equals( "provide ")&&  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName.equals( "provide ")&&  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName.equals( "provide ")&&  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true	  if(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
90	[BUG]  [BUGGY]  expr!=  null  &&  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  expr!=  null  &&  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	expr!=  null  &&  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }	  if(expr!=    null    &&    expr.getType()    ==    Token.REQUIRE)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
91	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ". ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( ". ");  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Throwables.throw  new  IllegalArgumentException( ". ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
92	[BUG]  [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t,  enclosingFnName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t,  enclosingFnName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError  error  =  new  AssertionFailedError(t,  enclosingFnName);	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnName    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
93	[BUG]  [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName);	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnName    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
94	[BUG]  [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName,  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName,  null);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName,  null);	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnName    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
95	[BUG]  [BUGGY]  parent  ==  null  ||  expr!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent  ==  null  ||  expr!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent  ==  null  ||  expr!=  null)  {  return  false;  }	  parent    ==    null    ||    expr    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
96	[BUG]  [BUGGY]  if(expr  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
97	[BUG]  [BUGGY]  Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true	  Context.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
98	[BUG]  [BUGGY]  if(methodName!=  null  ||!methodName.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  ||!methodName.isEmpty())  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  ||!methodName.isEmpty())  {  return  false;  }	  if(methodName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
99	[BUG]  [BUGGY]  if(methodName!=  null  ||!methodName.equals(arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  ||!methodName.equals(arg))  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  ||!methodName.equals(arg))  {  return  false;  }	  if(methodName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
100	[BUG]  [BUGGY]  if(expr)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr)  {  return  false;  }	  if(isExpr)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
101	[BUG]  [BUGGY]  if(isExpr  ||  explicit)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(isExpr  ||  explicit)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(isExpr  ||  explicit)  {  return  false;  }	  if(isExpr)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
102	[BUG]  [BUGGY]  if(!isExpr)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(!isExpr)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(!isExpr)  {  return  false;  }	  if(isExpr)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
103	[BUG]  [BUGGY]  Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return	  Preconditions.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
104	[BUG]  [BUGGY]  Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }	  Preconditions.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
105	[BUG]  [BUGGY]  ||  methodName.equals( "provide "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.equals( "provide "))  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.equals( "provide "))  {  return  false;  }	  ||    methodName.equals(   "provide       "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
106	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  sourceName,  error);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  t,  sourceName,  error);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  t,  sourceName,  error);	  NodeTraversal.traverse(compiler,    t,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
107	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  exportedVariables);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  exportedVariables);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  exportedVariables);	  NodeTraversal.traverse(compiler,    t,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
108	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  expr);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  arg,  expr);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
109	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this,  expr);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  arg,  this,  expr);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
110	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  arg);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  this,  arg);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  this,  arg);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
111	[BUG]  [BUGGY]  if(methodName!=  null  &&  methodName.length()  >=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  &&  methodName.length()  >=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  &&  methodName.length()  >=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(methodName!=    null    &&    methodName.length()    ==    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
112	[BUG]  [BUGGY]  Context.checkState(arg.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.checkState(arg.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.checkState(arg.getType()  ==  Token.EXPR_RESULT);	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
113	[BUG]  [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getParent();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Node  enclosingFnNameNode  =  arg.getFirstChild().getParent();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Node  enclosingFnNameNode  =  arg.getFirstChild().getParent();	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
114	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  for(Node  arg  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  for(Node  arg  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeUtil.isValidPropertyName(arg))  {  for(Node  arg  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
115	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NULL_ARGUMENT_ERROR,  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NULL_ARGUMENT_ERROR,  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NULL_ARGUMENT_ERROR,	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
116	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERR  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERR  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERR	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
117	[BUG]  [BUGGY]  if(expr!=  null  &&  explicit)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null  &&  explicit)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null  &&  explicit)  {  return  false;  }	  if(expr    ==    null    ||    explicit)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
118	[BUG]  [BUGGY]  if(expr  ==  null  ||  expr.hasChildren())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null  ||  expr.hasChildren())  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null  ||  expr.hasChildren())  {  return  false;  }	  if(expr    ==    null    ||    explicit)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
119	[BUG]  [BUGGY]  if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }	  if(methodName!=    null    &&    methodName.length()    ==    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
120	[BUG]  [BUGGY]  Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }	  Context.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
121	[BUG]  [BUGGY]  Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false	  Context.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
122	[BUG]  [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(expr    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
123	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredError(t,  methodName,  expr);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  aughtExceptionHandler.throwAsIgnoredError(t,  methodName,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	aughtExceptionHandler.throwAsIgnoredError(t,  methodName,  expr);	  if(expr    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
124	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSyntheticError(t,  methodName,  expr);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  aughtExceptionHandler.throwAsSyntheticError(t,  methodName,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	aughtExceptionHandler.throwAsSyntheticError(t,  methodName,  expr);	  if(expr    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
125	[BUG]  [BUGGY]  if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingF  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingF  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingF	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
126	[BUG]  [BUGGY]  if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  enclosingFnNameNodes.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROV  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  enclosingFnNameNodes.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROV  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  enclosingFnNameNodes.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROV	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
127	[BUG]  [BUGGY]  if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  enclosingFnNameNodes.get(0))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingF  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  enclosingFnNameNodes.get(0))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingF  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  enclosingFnNameNodes.get(0))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosingF	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
128	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  t);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  t);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  arg,  t);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
129	[BUG]  [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName,  arg);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName,  arg);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName,  arg);	  if(expr    ==    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    arg));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Preconditions.checkState(methodName.equals( "provide ")||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));	  Preconditions.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
131	[BUG]  [BUGGY]  AssertionFailedError  t  =  exportedVariables.get(arg);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError  t  =  exportedVariables.get(arg);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError  t  =  exportedVariables.get(arg);	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
132	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  sourceFile,  methodName,  expr);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  sourceFile,  methodName,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  sourceFile,  methodName,  expr);	  NodeTraversal.traverse(compiler,    t,    sourceFile,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
133	[BUG]  [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isExported)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isExported)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isExported)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(expr.getType()    ==    Token.EXPR_RESULT)    {    if(!isExpr)    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
134	[BUG]  [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isFunction)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isFunction)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr.getType()  ==  Token.EXPR_RESULT)  {  if(!isFunction)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(expr.getType()    ==    Token.EXPR_RESULT)    {    if(!isExpr)    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
135	[BUG]  [BUGGY]  ||  methodName.equals( "provider "))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.equals( "provider "))  {  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.equals( "provider "))  {  return  false;	  ||    methodName.equals(   "provide       "))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
136	[BUG]  [BUGGY]  allowNonExportedVariables(expr)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  allowNonExportedVariables(expr)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	allowNonExportedVariables(expr)  {  throw  new  IllegalArgumentException( " ");  }	  if(expr    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
137	[BUG]  [BUGGY]  parent  ==  null  ||  explicit)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent  ==  null  ||  explicit)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent  ==  null  ||  explicit)  {  throw  new  IllegalArgumentException( " ");  }	  if(expr    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
138	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  return  false;  }	  parent!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
139	[BUG]  [BUGGY]  if(expr  ==  null  ||  expr.getType()!=  Token.EXPR_RESULT)return  false;  if(!isExpr)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null  ||  expr.getType()!=  Token.EXPR_RESULT)return  false;  if(!isExpr)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null  ||  expr.getType()!=  Token.EXPR_RESULT)return  false;  if(!isExpr)  {  return  false;  }	  if(expr    ==    null)return    false;    if(!isExpr)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
140	[BUG]  [BUGGY]  ||  methodName.equals( "provider "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.equals( "provider "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.equals( "provider "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true;  }	  ||    methodName.equals(   "provide       "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(methodName.equals( "provider ")||  methodName.equals( "provider "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Preconditions.checkState(methodName.equals( "provider ")||  methodName.equals( "provider "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Preconditions.checkState(methodName.equals( "provider ")||  methodName.equals( "provider "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  Preconditions.checkState(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
142	[BUG]  [BUGGY]  if(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName.equals( "provided ")||  methodName.equals( "provided "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  true	  if(methodName.equals(   "provide   ")||    methodName.equals(   "provide   "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
143	[BUG]  [BUGGY]  Node  parent  ==  null  ||  expr  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Node  parent  ==  null  ||  expr  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Node  parent  ==  null  ||  expr  ==  null)  {  return  false;  }	  parent    ==    null    ||    expr    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
144	[BUG]  [BUGGY]  AssertionFailedError  error  =(AssertionFailedError)arg.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError  error  =(AssertionFailedError)arg.getFirstChild().getNext();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError  error  =(AssertionFailedError)arg.getFirstChild().getNext();	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    arg));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
145	[BUG]  [BUGGY]  AssertionFailedError  t  =  enclosingFnNameNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError  t  =  enclosingFnNameNode.getFirstChild();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError  t  =  enclosingFnNameNode.getFirstChild();	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
146	[BUG]  [BUGGY]  if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclo  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclo  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclo	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
147	[BUG]  [BUGGY]  if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosing  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosing  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  enclosing	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
148	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  methodName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  n,  methodName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  n,  methodName);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
149	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  expr);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  expr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  expr);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
150	[BUG]  [BUGGY]  ||  methodName.equals( "provide "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.equals( "provide "))  {  return  true;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.equals( "provide "))  {  return  true;	  ||    methodName.equals(   "provide       "))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
151	[BUG]  [BUGGY]  if(methodName!=  null  ||  methodName.length()  >=  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  ||  methodName.length()  >=  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  ||  methodName.length()  >=  0)  {  return  false;  }	  if(methodName!=    null    ||    methodName.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
152	[BUG]  [BUGGY]  ||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  part));  return  true  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  part));  return  true  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.equals( "provide "))  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  part));  return  true	  ||    methodName.equals(   "provide       "))    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
153	[BUG]  [BUGGY]  Context.checkState(arg.getFirstChild().getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Context.checkState(arg.getFirstChild().getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Context.checkState(arg.getFirstChild().getType()  ==  Token.EXPR_RESULT);	  if(expr    ==    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    arg));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
154	[BUG]  [BUGGY]  if(methodName!=  null  &&  methodName.equals( " "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  &&  methodName.equals( " "))  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  &&  methodName.equals( " "))  {  return  false;  }	  if(methodName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
155	[BUG]  [BUGGY]  if(expr  ==  null  ||  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null  ||  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null  ||  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }	  if(expr!=    null    &&    expr.getType()    ==    Token.REQUIRE)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
156	[BUG]  [BUGGY]  if(methodName!=  null  &&  methodName.length()!=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  &&  methodName.length()!=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  &&  methodName.length()!=  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(methodName    ==    null    ||    methodName.length()!=    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
157	[BUG]  [BUGGY]  if(methodName!=  null  &&  methodName.length()!=  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  &&  methodName.length()!=  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  &&  methodName.length()!=  0)  {  return  false;  }	  if(methodName    ==    null    ||    methodName.length()!=    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
158	[BUG]  [BUGGY]  if(expr  ==  null  ||  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null  ||  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null  ||  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }	  if(expr    ==    null    ||    expr.getType()!=    Token.EXPR_RESULT)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
159	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
160	[BUG]  [BUGGY]  ||  methodName.length()  ==  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  ||  methodName.length()  ==  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	||  methodName.length()  ==  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  part));  return  false;  }	  ||    methodName.length()    ==    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
161	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  sourceFile,  methodName,  isExpr);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  t,  sourceFile,  methodName,  isExpr);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  t,  sourceFile,  methodName,  isExpr);	  NodeTraversal.traverse(compiler,    t,    sourceFile,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
162	[BUG]  [BUGGY]  if(expr  ==  null  ||  explicitNode)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr  ==  null  ||  explicitNode)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr  ==  null  ||  explicitNode)  {  return  false;  }	  if(expr    ==    null    ||    explicit)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
163	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  explicit);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  explicit);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  explicit);	  NodeTraversal.traverse(compiler,    t,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
164	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  this);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  this);	  NodeTraversal.traverse(compiler,    t,    methodName);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
165	[BUG]  [BUGGY]  if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  part));  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  part));  return  true  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(methodName!=  null  &&  methodName.length()  >  0)  {  return  false;  }  else  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  part));  return  true	  if(methodName!=    null    &&    methodName.length()    ==    0)    {    return    false;    }    else    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
166	[BUG]  [BUGGY]  if(enclosingFnNameNode!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERR  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(enclosingFnNameNode!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERR  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(enclosingFnNameNode!=  null)  {  for(Node  enclosingFnNameNode  :  arg.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERR	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
167	[BUG]  [BUGGY]  if(enclosingFnNameNode!=  null)  {  for(Node  enclosingFnNameNode  :  enclosingFnNameNode.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVAL  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(enclosingFnNameNode!=  null)  {  for(Node  enclosingFnNameNode  :  enclosingFnNameNode.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVAL  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(enclosingFnNameNode!=  null)  {  for(Node  enclosingFnNameNode  :  enclosingFnNameNode.getFirstChild().getNext())  {  compiler.report(t.makeError(arg,  INVAL	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnNameNode));    return    false    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
168	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  t,  this);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  t,  this);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
169	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this,  explicit);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this,  explicit);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeTraversal.traverse(compiler,  arg,  this,  explicit);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
170	[BUG]  [BUGGY]  if(expr.getType()!=  Token.EXPR_RESULT)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr.getType()!=  Token.EXPR_RESULT)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr.getType()!=  Token.EXPR_RESULT)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(expr.getType()    ==    Token.EXPR_RESULT)    {    if(!isExpr)    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
171	[BUG]  [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT  ||  explicit)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT  ||  explicit)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr.getType()  ==  Token.EXPR_RESULT  ||  explicit)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(expr.getType()    ==    Token.EXPR_RESULT)    {    if(!isExpr)    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
172	[BUG]  [BUGGY]  if(expr.getType()!=  Token.EXPR_RESULT)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part),  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr.getType()!=  Token.EXPR_RESULT)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part),  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr.getType()!=  Token.EXPR_RESULT)  {  if(!isExpr)  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part),  return  false;  }	  if(expr.getType()    ==    Token.EXPR_RESULT)    {    if(!isExpr)    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
173	[BUG]  [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT  &&!methodName.equals( "provide "))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  if(expr.getType()  ==  Token.EXPR_RESULT  &&!methodName.equals( "provide "))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	if(expr.getType()  ==  Token.EXPR_RESULT  &&!methodName.equals( "provide "))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }	  if(expr.getType()    ==    Token.EXPR_RESULT)    {    if(!isExpr)    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    part));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
174	[BUG]  [BUGGY]  AssertionFailedError  t  =  enclosingFnName.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError  t  =  enclosingFnName.getFirstChild();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError  t  =  enclosingFnName.getFirstChild();	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnName    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
175	[BUG]  [BUGGY]  AssertionFailedError  error  =  enclosingFnName.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  AssertionFailedError  error  =  enclosingFnName.getFirstChild().getNext();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	AssertionFailedError  error  =  enclosingFnName.getFirstChild().getNext();	  if(expr!=    null)    {    for(Node    enclosingFnNameNode    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    INVALID_PROVIDE_ERROR,    enclosingFnName    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
176	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(arg,  explicit))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeUtil.isValidPropertyName(arg,  explicit))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeUtil.isValidPropertyName(arg,  explicit))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
177	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
178	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }      [BUGGY]  NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	NodeUtil.isValidPropertyName(arg))  {  compiler.report(t.makeError(arg,  NON_STRING_PASSED_TO_SET_CSS_NAME	  if(expr!=    null)    {    for(Node    arg    :    arg.getFirstChild().getNext())    {    compiler.report(t.makeError(arg,    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
