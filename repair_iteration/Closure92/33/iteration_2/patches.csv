bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  FUNCTION_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  FUNCTION_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  FUNCTION_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    FUNCTION_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
2	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  FUNCTION_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  FUNCTION_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  FUNCTION_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    FUNCTION_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
3	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  methodName;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  methodName;	  DiagnosticType    diagnostic    =    desiredType?    DUPLICATE_NAMESPACE_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName);	  DiagnosticType    diagnostic    =    desiredType?    DUPLICATE_NAMESPACE_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  moduleGraph);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  moduleGraph);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  moduleGraph);	  NodeTraversal.traverse(compiler,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  typeDecl);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  typeDecl);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  typeDecl);	  NodeTraversal.traverse(compiler,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  scopeRoot);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  scopeRoot);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  scopeRoot);	  NodeTraversal.traverse(compiler,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    MISSING_PROVIDE_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
9	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    MISSING_PROVIDE_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
10	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType  +  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType  +  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType  +  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    MISSING_PROVIDE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
11	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType  +  methodName;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType  +  methodName;	  DiagnosticType    diagnostic    =    MISSING_PROVIDE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
12	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR  +  methodName;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR  +  methodName;	  DiagnosticType    diagnostic    =    MISSING_PROVIDE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
13	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR  +  methodName;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR  +  methodName;	  DiagnosticType    diagnostic    =    MISSING_PROVIDE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
14	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  DUPLICATE_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    arg.getCurrentType();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
15	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  DEFAULT_TYPE;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  DEFAULT_TYPE;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  DEFAULT_TYPE;	  DiagnosticType    diagnostic    =    arg.getCurrentType();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
16	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  null;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  null;	  DiagnosticType    diagnostic    =    arg.getCurrentType();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
17	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  moduleGraph.getNativeType(JSModuleGraph.UNKNOWN_TYPE);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  moduleGraph.getNativeType(JSModuleGraph.UNKNOWN_TYPE);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  moduleGraph.getNativeType(JSModuleGraph.UNKNOWN_TYPE);	  DiagnosticType    diagnostic    =    t.getNativeType(JSModuleGraph.UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  t.getNativeType(JSModuleGraph.UNKNOWN_TYPE,  desiredType);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  t.getNativeType(JSModuleGraph.UNKNOWN_TYPE,  desiredType);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  t.getNativeType(JSModuleGraph.UNKNOWN_TYPE,  desiredType);	  DiagnosticType    diagnostic    =    t.getNativeType(JSModuleGraph.UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  t.getNativeType(JSModuleGraph.UNKNOWN_TYPE,  methodName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  t.getNativeType(JSModuleGraph.UNKNOWN_TYPE,  methodName);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  t.getNativeType(JSModuleGraph.UNKNOWN_TYPE,  methodName);	  DiagnosticType    diagnostic    =    t.getNativeType(JSModuleGraph.UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
21	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
22	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
23	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType  &&  methodName.getType()!=  arg.getType();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType  &&  methodName.getType()!=  arg.getType();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType  &&  methodName.getType()!=  arg.getType();	  DiagnosticType    diagnostic    =    desiredType    ||    methodName.getType()!=    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName  ||  desiredType!=  arg.getType();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName  ||  desiredType!=  arg.getType();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName  ||  desiredType!=  arg.getType();	  DiagnosticType    diagnostic    =    desiredType    ||    methodName.getType()!=    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType  ||  methodName.getType()  ==  arg.getType();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType  ||  methodName.getType()  ==  arg.getType();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType  ||  methodName.getType()  ==  arg.getType();	  DiagnosticType    diagnostic    =    desiredType    ||    methodName.getType()!=    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType  +  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType  +  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType  +  DUPLICATE_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    DUPLICATE_NAMESPACE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  DUPLICATE_NAMESPACE_ERROR  +  methodName;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  DUPLICATE_NAMESPACE_ERROR  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  DUPLICATE_NAMESPACE_ERROR  +  methodName;	  DiagnosticType    diagnostic    =    DUPLICATE_NAMESPACE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR  +  methodName,  desiredType;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR  +  methodName,  desiredType;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR  +  methodName,  desiredType;	  DiagnosticType    diagnostic    =    DUPLICATE_NAMESPACE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_PROVIDE_ERROR  :  DUPLICATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_PROVIDE_ERROR  :  DUPLICATE_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  INVALID_PROVIDE_ERROR  :  DUPLICATE_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
30	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  INVALID_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
31	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_PROVIDE_ERROR  :  NON_STRING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_PROVIDE_ERROR  :  NON_STRING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  INVALID_PROVIDE_ERROR  :  NON_STRING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
32	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  DUPLICATE_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  DEFAULT_TYPE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  DEFAULT_TYPE;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  DEFAULT_TYPE;	  DiagnosticType    diagnostic    =    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  NON_STRING_PASSED_TO_SET_CSS;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  NON_STRING_PASSED_TO_SET_CSS;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  NON_STRING_PASSED_TO_SET_CSS;	  DiagnosticType    diagnostic    =    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  null;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  null;	  DiagnosticType    diagnostic    =    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_PROVIDE_ERROR  :  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_PROVIDE_ERROR  :  LATE_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_PROVIDE_ERROR  :  LATE_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
37	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  LATE_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  LATE_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  LATE_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
38	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_ARGUMENT_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_ARGUMENT_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  NON_STRING_ARGUMENT_ERROR  :  DUPLICATE_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    NON_STRING_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
39	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_ARGUMENT_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_ARGUMENT_ERROR;	  DiagnosticType    diagnostic    =    NON_STRING_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
40	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_ARGUMENT_ERROR  :  INVALID_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_ARGUMENT_ERROR  :  INVALID_ARGUMENT_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  NON_STRING_ARGUMENT_ERROR  :  INVALID_ARGUMENT_ERROR;	  DiagnosticType    diagnostic    =    NON_STRING_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
41	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_ERROR;	  DiagnosticType    diagnostic    =    NON_STRING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
42	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  NON_STRING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    NON_STRING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
43	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  NON_STRING_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  NON_STRING_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  NON_STRING_ERROR;	  DiagnosticType    diagnostic    =    NON_STRING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
44	[BUG]  [BUGGY]  Node  arg  =  arg.getNext();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  Node  arg  =  arg.getNext();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	Node  arg  =  arg.getNext();	  Node    arg    =    methodName.getNext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  Node  arg  =  t.getNext();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  Node  arg  =  t.getNext();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	Node  arg  =  t.getNext();	  Node    arg    =    methodName.getNext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  methodName,  arg,  desiredType);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  methodName,  arg,  desiredType);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  desiredType,  methodName,  arg,  desiredType);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg,  methodName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg,  methodName);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  desiredType,  arg,  methodName);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  DUPLICATE_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
49	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  INVALID_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  INVALID_ARGUMENT_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  INVALID_ARGUMENT_ERROR;	  DiagnosticType    diagnostic    =    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
50	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  INVALID_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  INVALID_ARGUMENT_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  INVALID_ARGUMENT_ERROR;	  DiagnosticType    diagnostic    =    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
51	[BUG]  [BUGGY]  Node  arg  =  methodName.removeLastChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  Node  arg  =  methodName.removeLastChild();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	Node  arg  =  methodName.removeLastChild();	  Node    arg    =    methodName.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
52	[BUG]  [BUGGY]  Node  arg  =  methodName.replaceChild(t,  arg);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  Node  arg  =  methodName.replaceChild(t,  arg);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	Node  arg  =  methodName.replaceChild(t,  arg);	  Node    arg    =    methodName.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  methodName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  methodName);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  desiredType,  methodName);	  NodeTraversal.traverse(compiler,    t,    methodName,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  preferredType,  methodName,  desiredType);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  preferredType,  methodName,  desiredType);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  preferredType,  methodName,  desiredType);	  NodeTraversal.traverse(compiler,    t,    methodName,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
55	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET  :  NON_STRING_PASSED;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET  :  NON_STRING_PASSED;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET  :  NON_STRING_PASSED;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
56	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
57	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
58	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType  +  BASE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType  +  BASE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType  +  BASE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    BASE_CLASS_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
59	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  BASE_CLASS_ERROR  +  methodName;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  BASE_CLASS_ERROR  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  BASE_CLASS_ERROR  +  methodName;	  DiagnosticType    diagnostic    =    BASE_CLASS_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
60	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName  +  BASE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName  +  BASE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName  +  BASE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    BASE_CLASS_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
61	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType  ||  methodName.equals(arg.getString());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType  ||  methodName.equals(arg.getString());  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType  ||  methodName.equals(arg.getString());	  DiagnosticType    diagnostic    =    desiredType    &&    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName  &&  desiredType.equals(arg.getString());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName  &&  desiredType.equals(arg.getString());  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName  &&  desiredType.equals(arg.getString());	  DiagnosticType    diagnostic    =    desiredType    &&    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType  &&  methodName.equals(arg.getNext());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType  &&  methodName.equals(arg.getNext());  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType  &&  methodName.equals(arg.getNext());	  DiagnosticType    diagnostic    =    desiredType    &&    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName.getCurrentType()  ||  arg.getType()!=  desiredType;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName.getCurrentType()  ||  arg.getType()!=  desiredType;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName.getCurrentType()  ||  arg.getType()!=  desiredType;	  DiagnosticType    diagnostic    =    t.getCurrentType()    ||    methodName.getType()!=    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
65	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  t.getCurrentType()  ||  methodName.getType()  ==  desiredType;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  t.getCurrentType()  ||  methodName.getType()  ==  desiredType;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  t.getCurrentType()  ||  methodName.getType()  ==  desiredType;	  DiagnosticType    diagnostic    =    t.getCurrentType()    ||    methodName.getType()!=    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
66	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  t.getCurrentType()  &&  methodName.getType()!=  desiredType;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  t.getCurrentType()  &&  methodName.getType()!=  desiredType;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  t.getCurrentType()  &&  methodName.getType()!=  desiredType;	  DiagnosticType    diagnostic    =    t.getCurrentType()    ||    methodName.getType()!=    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
67	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  t.getMask();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  t.getMask();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  t.getMask();	  DiagnosticType    diagnostic    =    methodName;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_PROVIDE_ERROR  :  DUPLICATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_PROVIDE_ERROR  :  DUPLICATE_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_PROVIDE_ERROR  :  DUPLICATE_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    DUPLICATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
69	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName.getCurrentNodeType();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName.getCurrentNodeType();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName.getCurrentNodeType();	  DiagnosticType    diagnostic    =    t.getCurrentNodeType();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
70	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  t.getCurrentNodeType()  ||  methodName.getType()!=  desiredType;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  t.getCurrentNodeType()  ||  methodName.getType()!=  desiredType;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  t.getCurrentNodeType()  ||  methodName.getType()!=  desiredType;	  DiagnosticType    diagnostic    =    t.getCurrentNodeType();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
71	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  arg,  desiredType);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  Context.traverse(compiler,  methodName,  arg,  desiredType);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	Context.traverse(compiler,  methodName,  arg,  desiredType);	  NodeTraversal.traverse(compiler,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  desiredType,  methodName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  desiredType,  methodName);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  arg,  desiredType,  methodName);	  NodeTraversal.traverse(compiler,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  t.getModuleGraph(methodName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  JSModuleGraph  moduleGraph  =  t.getModuleGraph(methodName);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	JSModuleGraph  moduleGraph  =  t.getModuleGraph(methodName);	  JSModuleGraph    moduleGraph    =    t.getModuleGraph();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
74	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  FUNCTION_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  FUNCTION_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  FUNCTION_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    BASE_CLASS_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
75	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  BASE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  BASE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  BASE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    BASE_CLASS_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
76	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR?  BASE_CLASS_ERROR  :  BASE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR?  BASE_CLASS_ERROR  :  BASE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR?  BASE_CLASS_ERROR  :  BASE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    BASE_CLASS_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
77	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  null;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  null;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  null;	  DiagnosticType    diagnostic    =    arg.getNext();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
78	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DUPLICATE_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    arg.getNext();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
79	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DEFAULT_TYPE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DEFAULT_TYPE;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DEFAULT_TYPE;	  DiagnosticType    diagnostic    =    arg.getNext();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
80	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DEFAULT_NOT_OBJECT;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DEFAULT_NOT_OBJECT;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DEFAULT_NOT_OBJECT;	  DiagnosticType    diagnostic    =    arg.getNext();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
81	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  DUPLICATE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  DUPLICATE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  DUPLICATE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    DUPLICATE_CLASS_ERROR    :    DUPLICATE_CLASS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
82	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_CLASS_ERROR  :  BASE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_CLASS_ERROR  :  BASE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_CLASS_ERROR  :  BASE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    DUPLICATE_CLASS_ERROR    :    DUPLICATE_CLASS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  methodName  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  methodName  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  methodName  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
84	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName.getRawType();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName.getRawType();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName.getRawType();	  DiagnosticType    diagnostic    =    methodName.getCurrentType();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
85	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  INVALID_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  INVALID_ARGUMENT_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  INVALID_ARGUMENT_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    BASE_CLASS_ERROR    :    BASE_CLASS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
86	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName.getType();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName.getType();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName.getType();	  DiagnosticType    diagnostic    =    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
87	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  BASE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  BASE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  BASE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
88	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  t.getCurrentNodeType()  +  methodName;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  t.getCurrentNodeType()  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  t.getCurrentNodeType()  +  methodName;	  DiagnosticType    diagnostic    =    t.getCurrentNodeType();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
89	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName?  DUPLICATE_CLASS_ERROR  :  DUPLICATE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName?  DUPLICATE_CLASS_ERROR  :  DUPLICATE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName?  DUPLICATE_CLASS_ERROR  :  DUPLICATE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    DUPLICATE_CLASS_ERROR    :    DUPLICATE_CLASS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
90	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName?  desiredType  :  DUPLICATE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName?  desiredType  :  DUPLICATE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName?  desiredType  :  DUPLICATE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    DUPLICATE_CLASS_ERROR    :    DUPLICATE_CLASS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
91	[BUG]  [BUGGY]  Node  arg  =  t.getScope().removeFirstChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  Node  arg  =  t.getScope().removeFirstChild();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	Node  arg  =  t.getScope().removeFirstChild();	  Node    arg    =    methodName.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
92	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName?  BASE_CLASS_ERROR  :  BASE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName?  BASE_CLASS_ERROR  :  BASE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName?  BASE_CLASS_ERROR  :  BASE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    BASE_CLASS_ERROR    :    BASE_CLASS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
93	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName?  desiredType  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName?  desiredType  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName?  desiredType  :  DUPLICATE_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
94	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
95	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  t.getNativeType(JSModuleGraph.UNKNOWN_TYPE,  preferredType);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  t.getNativeType(JSModuleGraph.UNKNOWN_TYPE,  preferredType);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  t.getNativeType(JSModuleGraph.UNKNOWN_TYPE,  preferredType);	  DiagnosticType    diagnostic    =    t.getNativeType(JSModuleGraph.UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
96	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  desiredType);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  desiredType);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName,  desiredType);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
97	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  NON_STRING;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  NON_STRING;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  NON_STRING;	  DiagnosticType    diagnostic    =    DUPLICATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
98	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName.getNext();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName.getNext();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName.getNext();	  DiagnosticType    diagnostic    =    arg.getNext();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
99	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DUPLICATE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DUPLICATE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  DUPLICATE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    arg.getNext();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
100	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName?  desiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName?  desiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName?  desiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
101	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  +  methodName;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  +  methodName;	  DiagnosticType    diagnostic    =    desiredType?    DUPLICATE_NAMESPACE_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
102	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName.equals(arg.getString());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName.equals(arg.getString());  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName.equals(arg.getString());	  DiagnosticType    diagnostic    =    desiredType    &&    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
103	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName  ||  desiredType.equals(arg.getString());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName  ||  desiredType.equals(arg.getString());  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName  ||  desiredType.equals(arg.getString());	  DiagnosticType    diagnostic    =    desiredType    &&    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
104	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  requiredType;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  requiredType;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  requiredType;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
105	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  DUPLICATE_NAMESPACE_ERROR  +  methodName;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  DUPLICATE_NAMESPACE_ERROR  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  DUPLICATE_NAMESPACE_ERROR  +  methodName;	  DiagnosticType    diagnostic    =    BASE_CLASS_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
106	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  requiredLevel);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  requiredLevel);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  requiredLevel);	  NodeTraversal.traverse(compiler,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
107	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  t.getModule(methodName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  JSModuleGraph  moduleGraph  =  t.getModule(methodName);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	JSModuleGraph  moduleGraph  =  t.getModule(methodName);	  JSModuleGraph    moduleGraph    =    t.getModule();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
108	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  t.getModuleCompiler();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  JSModuleGraph  moduleGraph  =  t.getModuleCompiler();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	JSModuleGraph  moduleGraph  =  t.getModuleCompiler();	  JSModuleGraph    moduleGraph    =    t.getModule();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
109	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName  ||  arg.getType()!=  desiredType;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName  ||  arg.getType()!=  desiredType;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName  ||  arg.getType()!=  desiredType;	  DiagnosticType    diagnostic    =    desiredType    ||    methodName.getType()!=    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
110	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  arg.getType()  ||  methodName.getType()!=  desiredType;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  arg.getType()  ||  methodName.getType()!=  desiredType;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  arg.getType()  ||  methodName.getType()!=  desiredType;	  DiagnosticType    diagnostic    =    desiredType    ||    methodName.getType()!=    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
111	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName  +  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName  +  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName  +  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    MISSING_PROVIDE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
112	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  MISSING_PROVIDE_ERROR  +  arg.getType();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  MISSING_PROVIDE_ERROR  +  arg.getType();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  MISSING_PROVIDE_ERROR  +  arg.getType();	  DiagnosticType    diagnostic    =    MISSING_PROVIDE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
113	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  INVALID_ARGUMENT_ERROR  +  methodName;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  INVALID_ARGUMENT_ERROR  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  INVALID_ARGUMENT_ERROR  +  methodName;	  DiagnosticType    diagnostic    =    DUPLICATE_NAMESPACE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
114	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR  +  arg.getType();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR  +  arg.getType();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR  +  arg.getType();	  DiagnosticType    diagnostic    =    DUPLICATE_NAMESPACE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
115	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName?  BASE_CLASS_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName?  BASE_CLASS_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName?  BASE_CLASS_ERROR  :  DUPLICATE_NAMESPACE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    BASE_CLASS_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
116	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  FUNCTION_NAMESPACE_ERROR  :  BASE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  FUNCTION_NAMESPACE_ERROR  :  BASE_CLASS_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  FUNCTION_NAMESPACE_ERROR  :  BASE_CLASS_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    BASE_CLASS_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
117	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  methodName,  desiredType);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  methodName,  desiredType);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  desiredType,  methodName,  desiredType);	  NodeTraversal.traverse(compiler,    t,    methodName,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
118	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName?  MISSING_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName?  MISSING_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName?  MISSING_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    MISSING_PROVIDE_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
119	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName?  desiredType  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName?  desiredType  :  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName?  desiredType  :  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    MISSING_PROVIDE_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
120	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName  ||  desiredType?  MISSING_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName  ||  desiredType?  MISSING_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName  ||  desiredType?  MISSING_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    MISSING_PROVIDE_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
121	[BUG]  [BUGGY]  Node  arg  =  methodName.getParent();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  Node  arg  =  methodName.getParent();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	Node  arg  =  methodName.getParent();	  Node    arg    =    methodName.getNext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
122	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methods,  arg,  desiredType);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methods,  arg,  desiredType);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  methods,  arg,  desiredType);	  NodeTraversal.traverse(compiler,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
123	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName);	  NodeTraversal.traverse(compiler,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
124	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName?  BASE_CLASS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName?  BASE_CLASS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName?  BASE_CLASS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    BASE_CLASS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
125	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  desiredType,  requiredLevel);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  desiredType,  requiredLevel);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  desiredType,  requiredLevel);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
126	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  desiredType,  typeDecl);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  desiredType,  typeDecl);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  desiredType,  typeDecl);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
127	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  INVALID_ARGUMENT_ERROR  :  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
128	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  INVALID_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  INVALID_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    BASE_CLASS_ERROR    :    BASE_CLASS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
129	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  INVALID_PROVIDE_ERROR  +  methodName;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  INVALID_PROVIDE_ERROR  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  INVALID_PROVIDE_ERROR  +  methodName;	  DiagnosticType    diagnostic    =    DUPLICATE_NAMESPACE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
130	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName.restrictByNotNullOrUndefined();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName.restrictByNotNullOrUndefined();	  DiagnosticType    diagnostic    =    methodName.getCurrentType();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
131	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  methodName;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  methodName;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
132	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  INVALID_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  INVALID_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
133	[BUG]  [BUGGY]  Node  arg  =  t.getScopeRoot();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  Node  arg  =  t.getScopeRoot();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	Node  arg  =  t.getScopeRoot();	  Node    arg    =    methodName.getNext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
134	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR?  desiredType  :  methodName;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR?  desiredType  :  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR?  desiredType  :  methodName;	  DiagnosticType    diagnostic    =    methodName;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
135	[BUG]  [BUGGY]  Node  arg  =  t.getScopeRoot().getParent();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  Node  arg  =  t.getScopeRoot().getParent();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	Node  arg  =  t.getScopeRoot().getParent();	  Node    arg    =    methodName.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
136	[BUG]  [BUGGY]  Node  arg  =  t.getScopeRoot().removeFirstChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  Node  arg  =  t.getScopeRoot().removeFirstChild();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	Node  arg  =  t.getScopeRoot().removeFirstChild();	  Node    arg    =    methodName.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
137	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  INVALID_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  INVALID_ARGUMENT_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  INVALID_ARGUMENT_ERROR;	  DiagnosticType    diagnostic    =    arg.getType();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
138	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_CLASS_ERROR  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_CLASS_ERROR  :  INVALID_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  DUPLICATE_CLASS_ERROR  :  INVALID_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    DUPLICATE_CLASS_ERROR    :    DUPLICATE_CLASS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
139	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  t.getModule()  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  t.getModule()  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  t.getModule()  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
140	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getType()  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
141	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  methodName;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  BASE_CLASS_ERROR  :  methodName;	  DiagnosticType    diagnostic    =    desiredType?    BASE_CLASS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
142	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  methodName.isQuotedType()?  desiredType  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  methodName.isQuotedType()?  desiredType  :  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  methodName.isQuotedType()?  desiredType  :  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    desiredType?    MISSING_PROVIDE_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
143	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  MISSING_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  MISSING_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    arg.getCurrentType();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
144	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  INVALID_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  INVALID_ARGUMENT_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getCurrentType()  :  INVALID_ARGUMENT_ERROR;	  DiagnosticType    diagnostic    =    arg.getCurrentType();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
145	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  diagnostic,  desiredType);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  diagnostic,  desiredType);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  arg,  diagnostic,  desiredType);	  NodeTraversal.traverse(compiler,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
146	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  desiredType;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  desiredType;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  desiredType;	  DiagnosticType    diagnostic    =    desiredType?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
147	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
148	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET  :  methodName;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET  :  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  NON_STRING_PASSED_TO_SET  :  methodName;	  DiagnosticType    diagnostic    =    NON_STRING_PASSED;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
149	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  LATE_PROVIDE_ERROR  +  methodName;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  LATE_PROVIDE_ERROR  +  methodName;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  LATE_PROVIDE_ERROR  +  methodName;	  DiagnosticType    diagnostic    =    MISSING_PROVIDE_ERROR    +    methodName;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
150	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  LATE_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  MISSING_PROVIDE_ERROR  :  LATE_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
151	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  MISSING_PROVIDE_ERROR?  desiredType  :  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  MISSING_PROVIDE_ERROR?  desiredType  :  LATE_PROVIDE_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  MISSING_PROVIDE_ERROR?  desiredType  :  LATE_PROVIDE_ERROR;	  DiagnosticType    diagnostic    =    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
152	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  methodName,  arg);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  methodName,  arg);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  desiredType,  methodName,  arg);	  NodeTraversal.traverse(compiler,    t,    methodName,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
153	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  methodName,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  methodName,  t);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  desiredType,  methodName,  t);	  NodeTraversal.traverse(compiler,    t,    methodName,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
154	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  t.getCompiler();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  JSModuleGraph  moduleGraph  =  t.getCompiler();  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	JSModuleGraph  moduleGraph  =  t.getCompiler();	  JSModuleGraph    moduleGraph    =    t.getModule();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
155	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  requiresLevel);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  requiresLevel);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  requiresLevel);	  NodeTraversal.traverse(compiler,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
156	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  isExpr);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  isExpr);  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType,  isExpr);	  NodeTraversal.traverse(compiler,    methodName,    arg,    desiredType);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
157	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  INVALID_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {      [BUGGY]  DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  INVALID_ARGUMENT_ERROR;  [BUGGY]      if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType?  arg.getNext()  :  INVALID_ARGUMENT_ERROR;	  DiagnosticType    diagnostic    =    arg.getNext();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
