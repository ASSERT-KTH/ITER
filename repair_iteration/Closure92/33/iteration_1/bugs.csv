bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  desiredType;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]  DiagnosticType  diagnostic  =  desiredType;  [BUGGY]  if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  desiredType;	DiagnosticType  diagnostic  =  null;  	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
2	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  BASE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]  DiagnosticType  diagnostic  =  BASE_CLASS_ERROR;  [BUGGY]  if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  BASE_CLASS_ERROR;	DiagnosticType  diagnostic  =  null;  	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
3	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  t.getCurrentType();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]  DiagnosticType  diagnostic  =  t.getCurrentType();  [BUGGY]  if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  t.getCurrentType();	DiagnosticType  diagnostic  =  null;  	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    [BUGGY]  if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	  	DiagnosticType  diagnostic  =  null;  	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
5	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]  if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  DUPLICATE_NAMESPACE_ERROR;	DiagnosticType  diagnostic  =  null;  	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
6	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_CLASS_ERROR;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]  DiagnosticType  diagnostic  =  DUPLICATE_CLASS_ERROR;  [BUGGY]  if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  DUPLICATE_CLASS_ERROR;	DiagnosticType  diagnostic  =  null;  	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
7	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]  DiagnosticType  diagnostic  =  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]  if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	DiagnosticType  diagnostic  =  null;  	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
8	[BUG]  [BUGGY]  DiagnosticType  diagnostic  =  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]  DiagnosticType  diagnostic  =  MISSING_PROVIDE_ERROR;  [BUGGY]  if  (arg  ==  null)  {  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	DiagnosticType  diagnostic  =  MISSING_PROVIDE_ERROR;	DiagnosticType  diagnostic  =  null;  	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
