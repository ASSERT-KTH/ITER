bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] Node assign = n.getFirstChild(); [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { [BUGGY] Node assign = n.getFirstChild(); [BUGGY] value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.19245008972987526	888	888	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { [BUGGY] [BUGGY] Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.19245008972987526	888	888	1	add	
3	[BUG] [BUGGY] value = assign.getLastChild(); [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); [BUGGY] value = assign.getLastChild(); [BUGGY] } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.19245008972987526	889	889	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); [BUGGY] [BUGGY] value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.19245008972987526	889	889	1	add	
5	[BUG] [BUGGY] providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); while (pos != -1) { String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { [BUGGY] providedNames.get(prefixNs).addProvide(   node, module, false /* implicit */); [BUGGY] node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); while (pos != -1) { String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { [BUGGY] [BUGGY] providedNames.get(prefixNs).addProvide(   node, module, false /* implicit */); node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	add	
7	[BUG] [BUGGY] providedNames.put( prefixNs,  new ProvidedName(prefixNs, node, module, false /* implicit */)); [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); while (pos != -1) { String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { [BUGGY] providedNames.put(   prefixNs,      new ProvidedName(prefixNs, node, module, false /* implicit */)); [BUGGY] prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17407765595569785	646	648	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); while (pos != -1) { String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { [BUGGY] [BUGGY] providedNames.put(   prefixNs,      new ProvidedName(prefixNs, node, module, false /* implicit */)); prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17407765595569785	646	648	1	add	
9	[BUG] [BUGGY] Node name = n.getFirstChild(); [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { [BUGGY] Node name = n.getFirstChild(); [BUGGY] value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.16012815380508713	891	891	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { [BUGGY] [BUGGY] Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.16012815380508713	891	891	1	add	
11	[BUG] [BUGGY] value = name.getFirstChild(); [FE] AssertionFailedError [CONTEXT] if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); [BUGGY] value = name.getFirstChild(); [BUGGY] } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.16012815380508713	892	892	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); [BUGGY] [BUGGY] value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.16012815380508713	892	892	1	add	
13	[BUG] [BUGGY] String prefixNs = ns.substring(0, pos); [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); while (pos != -1) { [BUGGY] String prefixNs = ns.substring(0, pos); [BUGGY] pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	640	640	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); while (pos != -1) { [BUGGY] [BUGGY] String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	640	640	1	add	
15	[BUG] [BUGGY] pos = ns.indexOf('.', pos + 1); [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); while (pos != -1) { String prefixNs = ns.substring(0, pos); [BUGGY] pos = ns.indexOf('.', pos + 1); [BUGGY] if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	641	641	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); while (pos != -1) { String prefixNs = ns.substring(0, pos); [BUGGY] [BUGGY] pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	641	641	1	add	
17	[BUG] [BUGGY] if (providedNames.containsKey(prefixNs)) { [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); while (pos != -1) { String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); [BUGGY] if (providedNames.containsKey(prefixNs)) { [BUGGY] providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	642	642	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); while (pos != -1) { String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); [BUGGY] [BUGGY] if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	642	642	1	add	
19	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } [BUGGY] } [BUGGY] } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } [BUGGY] [BUGGY] } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	add	
21	[BUG] [BUGGY] if (!n.getBooleanProp(Node.IS_NAMESPACE)) { [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { [BUGGY] if (!n.getBooleanProp(Node.IS_NAMESPACE)) { [BUGGY] return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	882	882	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { [BUGGY] [BUGGY] if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	882	882	1	add	
23	[BUG] [BUGGY] Node value = null; [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } [BUGGY] Node value = null; [BUGGY] if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	886	886	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } [BUGGY] [BUGGY] Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	886	886	1	add	
25	[BUG] [BUGGY] if (n.getType() == Token.EXPR_RESULT) { [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; [BUGGY] if (n.getType() == Token.EXPR_RESULT) { [BUGGY] Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	887	887	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; [BUGGY] [BUGGY] if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	887	887	1	add	
27	[BUG] [BUGGY] } else if (n.getType() == Token.VAR) { [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); [BUGGY] } else if (n.getType() == Token.VAR) { [BUGGY] Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static boolean isNamespacePlaceholder(Node n) { if (!n.getBooleanProp(Node.IS_NAMESPACE)) { return false; } Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); [BUGGY] [BUGGY] } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	add	
29	[BUG] [BUGGY] return value != null && value.getType() == Token.OBJECTLIT && !value.hasChildren(); [FE] AssertionFailedError [CONTEXT] Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } [BUGGY] return value != null  && value.getType() == Token.OBJECTLIT   && !value.hasChildren(); [BUGGY] && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	895	897	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node value = null; if (n.getType() == Token.EXPR_RESULT) { Node assign = n.getFirstChild(); value = assign.getLastChild(); } else if (n.getType() == Token.VAR) { Node name = n.getFirstChild(); value = name.getFirstChild(); } [BUGGY] [BUGGY] return value != null  && value.getType() == Token.OBJECTLIT   && !value.hasChildren(); && value.getType() == Token.OBJECTLIT && !value.hasChildren(); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] isNamespacePlaceholder [RETURN_TYPE] boolean  Node n [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg assign assignNode baseClassNode callGoogNow callNode callee candidateDefinition className date decl enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name nameNode node objlit parent replacementNode requireNode root scopeRoot sourceNode thisArg value valueNode varNode JSModule explicitModule firstModule minimumModule module newModule providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	895	897	1	add	
31	[BUG] [BUGGY] String ns = arg.getString(); [FE] AssertionFailedError [CONTEXT] private void processProvideCall(NodeTraversal t, Node n, Node parent) { Node left = n.getFirstChild(); Node arg = left.getNext(); if (verifyProvide(t, left, arg)) { [BUGGY] String ns = arg.getString(); [BUGGY] if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } } else { registerAnyProvidedPrefixes(ns, parent, t.getModule()); [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	280	280	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void processProvideCall(NodeTraversal t, Node n, Node parent) { Node left = n.getFirstChild(); Node arg = left.getNext(); if (verifyProvide(t, left, arg)) { [BUGGY] [BUGGY] String ns = arg.getString(); if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } } else { registerAnyProvidedPrefixes(ns, parent, t.getModule()); [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	280	280	1	add	
33	[BUG] [BUGGY] if (providedNames.containsKey(ns)) { [FE] AssertionFailedError [CONTEXT] private void processProvideCall(NodeTraversal t, Node n, Node parent) { Node left = n.getFirstChild(); Node arg = left.getNext(); if (verifyProvide(t, left, arg)) { String ns = arg.getString(); [BUGGY] if (providedNames.containsKey(ns)) { [BUGGY] ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } } else { registerAnyProvidedPrefixes(ns, parent, t.getModule()); providedNames.put( [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void processProvideCall(NodeTraversal t, Node n, Node parent) { Node left = n.getFirstChild(); Node arg = left.getNext(); if (verifyProvide(t, left, arg)) { String ns = arg.getString(); [BUGGY] [BUGGY] if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } } else { registerAnyProvidedPrefixes(ns, parent, t.getModule()); providedNames.put( [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	add	
35	[BUG] [BUGGY] registerAnyProvidedPrefixes(ns, parent, t.getModule()); [FE] AssertionFailedError [CONTEXT] String ns = arg.getString(); if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } } else { [BUGGY] registerAnyProvidedPrefixes(ns, parent, t.getModule()); [BUGGY] providedNames.put( ns, new ProvidedName(ns, parent, t.getModule(), true)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	290	290	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] String ns = arg.getString(); if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } } else { [BUGGY] [BUGGY] registerAnyProvidedPrefixes(ns, parent, t.getModule()); providedNames.put( ns, new ProvidedName(ns, parent, t.getModule(), true)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	290	290	1	add	
37	[BUG] [BUGGY] providedNames.put( ns, new ProvidedName(ns, parent, t.getModule(), true)); [FE] AssertionFailedError [CONTEXT] if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } } else { registerAnyProvidedPrefixes(ns, parent, t.getModule()); [BUGGY] providedNames.put(   ns, new ProvidedName(ns, parent, t.getModule(), true)); [BUGGY] ns, new ProvidedName(ns, parent, t.getModule(), true)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } } else { registerAnyProvidedPrefixes(ns, parent, t.getModule()); [BUGGY] [BUGGY] providedNames.put(   ns, new ProvidedName(ns, parent, t.getModule(), true)); ns, new ProvidedName(ns, parent, t.getModule(), true)); } } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	add	
39	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] if (!verifyArgument(t, methodName, arg)) { return false; } for (String part : arg.getString().split("\\.")) { if (!NodeUtil.isValidPropertyName(part)) { compiler.report(t.makeError(arg, INVALID_PROVIDE_ERROR, part)); return false; } } [BUGGY] return true; [BUGGY] } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyProvide [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow NodeTraversal t DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (!verifyArgument(t, methodName, arg)) { return false; } for (String part : arg.getString().split("\\.")) { if (!NodeUtil.isValidPropertyName(part)) { compiler.report(t.makeError(arg, INVALID_PROVIDE_ERROR, part)); return false; } } [BUGGY] [BUGGY] return true; } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyProvide [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow NodeTraversal t DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	589	589	1	add	
41	[BUG] [BUGGY] int pos = ns.indexOf('.'); [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { [BUGGY] int pos = ns.indexOf('.'); [BUGGY] while (pos != -1) { String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	638	638	1	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { [BUGGY] [BUGGY] int pos = ns.indexOf('.'); while (pos != -1) { String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	638	638	1	add	
43	[BUG] [BUGGY] while (pos != -1) { [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); [BUGGY] while (pos != -1) { [BUGGY] String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	639	639	1	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void registerAnyProvidedPrefixes( String ns, Node node, JSModule module) { int pos = ns.indexOf('.'); [BUGGY] [BUGGY] while (pos != -1) { String prefixNs = ns.substring(0, pos); pos = ns.indexOf('.', pos + 1); if (providedNames.containsKey(prefixNs)) { providedNames.get(prefixNs).addProvide( node, module, false /* implicit */); } else { providedNames.put( prefixNs, new ProvidedName(prefixNs, node, module, false /* implicit */)); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] registerAnyProvidedPrefixes [RETURN_TYPE] void  String ns Node node JSModule module [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part prefixNs typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph int pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	639	639	1	add	
46	[BUG] [BUGGY] processProvideCall(t, n, parent); [FE] AssertionFailedError [CONTEXT]  String methodName = name.getNext().getString(); if ("base".equals(methodName)) { processBaseClassCall(t, n); } else if (!isExpr) {  break; } else if ("require".equals(methodName)) { processRequireCall(t, n, parent); } else if ("provide".equals(methodName)) { [BUGGY] processProvideCall(t, n, parent); [BUGGY] } else if ("exportSymbol".equals(methodName)) { Node arg = left.getNext(); if (arg.getType() == Token.STRING) { int dot = arg.getString().indexOf('.'); if (dot == -1) { exportedVariables.add(arg.getString()); } else { exportedVariables.add(arg.getString().substring(0, dot)); } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName pn Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace typeDecl JSModuleGraph moduleGraph int dot AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CodingConvention convention JSModule explicitModule firstModule minimumModule module List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	166	166	1	replace	
47	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  String methodName = name.getNext().getString(); if ("base".equals(methodName)) { processBaseClassCall(t, n); } else if (!isExpr) {  break; } else if ("require".equals(methodName)) { processRequireCall(t, n, parent); } else if ("provide".equals(methodName)) { [BUGGY] [BUGGY] processProvideCall(t, n, parent); } else if ("exportSymbol".equals(methodName)) { Node arg = left.getNext(); if (arg.getType() == Token.STRING) { int dot = arg.getString().indexOf('.'); if (dot == -1) { exportedVariables.add(arg.getString()); } else { exportedVariables.add(arg.getString().substring(0, dot)); } } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName pn Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace typeDecl JSModuleGraph moduleGraph int dot AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CodingConvention convention JSModule explicitModule firstModule minimumModule module List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	166	166	1	add	
48	[BUG] [BUGGY] Node left = n.getFirstChild(); [FE] AssertionFailedError [CONTEXT] private void processProvideCall(NodeTraversal t, Node n, Node parent) { [BUGGY] Node left = n.getFirstChild(); [BUGGY] Node arg = left.getNext(); if (verifyProvide(t, left, arg)) { String ns = arg.getString(); if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	277	277	1	replace	
49	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void processProvideCall(NodeTraversal t, Node n, Node parent) { [BUGGY] [BUGGY] Node left = n.getFirstChild(); Node arg = left.getNext(); if (verifyProvide(t, left, arg)) { String ns = arg.getString(); if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	277	277	1	add	
50	[BUG] [BUGGY] Node arg = left.getNext(); [FE] AssertionFailedError [CONTEXT] private void processProvideCall(NodeTraversal t, Node n, Node parent) { Node left = n.getFirstChild(); [BUGGY] Node arg = left.getNext(); [BUGGY] if (verifyProvide(t, left, arg)) { String ns = arg.getString(); if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	
51	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void processProvideCall(NodeTraversal t, Node n, Node parent) { Node left = n.getFirstChild(); [BUGGY] [BUGGY] Node arg = left.getNext(); if (verifyProvide(t, left, arg)) { String ns = arg.getString(); if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	add	
52	[BUG] [BUGGY] if (verifyProvide(t, left, arg)) { [FE] AssertionFailedError [CONTEXT] private void processProvideCall(NodeTraversal t, Node n, Node parent) { Node left = n.getFirstChild(); Node arg = left.getNext(); [BUGGY] if (verifyProvide(t, left, arg)) { [BUGGY] String ns = arg.getString(); if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } } else { [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	279	279	1	replace	
53	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void processProvideCall(NodeTraversal t, Node n, Node parent) { Node left = n.getFirstChild(); Node arg = left.getNext(); [BUGGY] [BUGGY] if (verifyProvide(t, left, arg)) { String ns = arg.getString(); if (providedNames.containsKey(ns)) { ProvidedName previouslyProvided = providedNames.get(ns); if (!previouslyProvided.isExplicitlyProvided()) { previouslyProvided.addProvide(parent, t.getModule(), true); } else { compiler.report( t.makeError(n, DUPLICATE_NAMESPACE_ERROR, ns)); } } else { [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] processProvideCall [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel ProvidedName previouslyProvided Node arg candidateDefinition explicitNode externs firstNode left n name node parent replacementNode requireNode root String GOOG inputName methodName name namespace ns typeDecl JSModuleGraph moduleGraph AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	279	279	1	add	
55	[BUG] [BUGGY] if (!verifyArgument(t, methodName, arg)) { [FE] AssertionFailedError [CONTEXT] private boolean verifyProvide(NodeTraversal t, Node methodName, Node arg) { [BUGGY] if (!verifyArgument(t, methodName, arg)) { [BUGGY] return false; } for (String part : arg.getString().split("\\.")) { if (!NodeUtil.isValidPropertyName(part)) { compiler.report(t.makeError(arg, INVALID_PROVIDE_ERROR, part)); return false; } } return true; [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyProvide [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow NodeTraversal t DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	
56	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private boolean verifyProvide(NodeTraversal t, Node methodName, Node arg) { [BUGGY] [BUGGY] if (!verifyArgument(t, methodName, arg)) { return false; } for (String part : arg.getString().split("\\.")) { if (!NodeUtil.isValidPropertyName(part)) { compiler.report(t.makeError(arg, INVALID_PROVIDE_ERROR, part)); return false; } } return true; [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyProvide [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow NodeTraversal t DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	add	
57	[BUG] [BUGGY] for (String part : arg.getString().split("\\.")) { [FE] AssertionFailedError [CONTEXT] private boolean verifyProvide(NodeTraversal t, Node methodName, Node arg) { if (!verifyArgument(t, methodName, arg)) { return false; } [BUGGY] for (String part : arg.getString().split("\\.")) { [BUGGY] if (!NodeUtil.isValidPropertyName(part)) { compiler.report(t.makeError(arg, INVALID_PROVIDE_ERROR, part)); return false; } } return true; } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyProvide [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow NodeTraversal t DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	583	583	1	replace	
58	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private boolean verifyProvide(NodeTraversal t, Node methodName, Node arg) { if (!verifyArgument(t, methodName, arg)) { return false; } [BUGGY] [BUGGY] for (String part : arg.getString().split("\\.")) { if (!NodeUtil.isValidPropertyName(part)) { compiler.report(t.makeError(arg, INVALID_PROVIDE_ERROR, part)); return false; } } return true; } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyProvide [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow NodeTraversal t DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	583	583	1	add	
59	[BUG] [BUGGY] if (!NodeUtil.isValidPropertyName(part)) { [FE] AssertionFailedError [CONTEXT] private boolean verifyProvide(NodeTraversal t, Node methodName, Node arg) { if (!verifyArgument(t, methodName, arg)) { return false; } for (String part : arg.getString().split("\\.")) { [BUGGY] if (!NodeUtil.isValidPropertyName(part)) { [BUGGY] compiler.report(t.makeError(arg, INVALID_PROVIDE_ERROR, part)); return false; } } return true; } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyProvide [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow NodeTraversal t DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	
60	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private boolean verifyProvide(NodeTraversal t, Node methodName, Node arg) { if (!verifyArgument(t, methodName, arg)) { return false; } for (String part : arg.getString().split("\\.")) { [BUGGY] [BUGGY] if (!NodeUtil.isValidPropertyName(part)) { compiler.report(t.makeError(arg, INVALID_PROVIDE_ERROR, part)); return false; } } return true; } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyProvide [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow NodeTraversal t DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	add	
61	[BUG] [BUGGY] return verifyArgument(t, methodName, arg, Token.STRING); [FE] AssertionFailedError [CONTEXT] private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg) { [BUGGY] return verifyArgument(t, methodName, arg, Token.STRING); [BUGGY] } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyArgument [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow NodeTraversal t DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13483997249264842	599	599	1	replace	
62	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg) { [BUGGY] [BUGGY] return verifyArgument(t, methodName, arg, Token.STRING); } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyArgument [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg [VARIABLES] AbstractCompiler compiler Set exportedVariables boolean explicit isExpr rewriteNewDateGoogNow NodeTraversal t DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR error CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value Map cssNames providedNames JSModuleGraph moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13483997249264842	599	599	1	add	
63	[BUG] [BUGGY] } else if (arg.getNext() != null) { [FE] AssertionFailedError [CONTEXT] private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg, int desiredType) { DiagnosticType diagnostic = null; if (arg == null) { diagnostic = NULL_ARGUMENT_ERROR; } else if (arg.getType() != desiredType) { diagnostic = INVALID_ARGUMENT_ERROR; [BUGGY] } else if (arg.getNext() != null) { [BUGGY] diagnostic = TOO_MANY_ARGUMENTS_ERROR; } if (diagnostic != null) { compiler.report( t.makeError(methodName, diagnostic, methodName.getQualifiedName())); return false; } return true; } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyArgument [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg int desiredType [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value JSModuleGraph moduleGraph int desiredType AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map cssNames providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	615	615	1	replace	
64	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg, int desiredType) { DiagnosticType diagnostic = null; if (arg == null) { diagnostic = NULL_ARGUMENT_ERROR; } else if (arg.getType() != desiredType) { diagnostic = INVALID_ARGUMENT_ERROR; [BUGGY] [BUGGY] } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; } if (diagnostic != null) { compiler.report( t.makeError(methodName, diagnostic, methodName.getQualifiedName())); return false; } return true; } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyArgument [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg int desiredType [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value JSModuleGraph moduleGraph int desiredType AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map cssNames providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	615	615	1	add	
65	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] diagnostic = INVALID_ARGUMENT_ERROR; } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; } if (diagnostic != null) { compiler.report( t.makeError(methodName, diagnostic, methodName.getQualifiedName())); return false; } [BUGGY] return true; [BUGGY] } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyArgument [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg int desiredType [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value JSModuleGraph moduleGraph int desiredType AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map cssNames providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	
66	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] diagnostic = INVALID_ARGUMENT_ERROR; } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; } if (diagnostic != null) { compiler.report( t.makeError(methodName, diagnostic, methodName.getQualifiedName())); return false; } [BUGGY] [BUGGY] return true; } [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyArgument [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg int desiredType [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value JSModuleGraph moduleGraph int desiredType AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map cssNames providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	add	
67	[BUG] [BUGGY] DiagnosticType diagnostic = null; [FE] AssertionFailedError [CONTEXT] private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg, int desiredType) { [BUGGY] DiagnosticType diagnostic = null; [BUGGY] if (arg == null) { diagnostic = NULL_ARGUMENT_ERROR; } else if (arg.getType() != desiredType) { diagnostic = INVALID_ARGUMENT_ERROR; } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; } if (diagnostic != null) { compiler.report( t.makeError(methodName, [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyArgument [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg int desiredType [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value JSModuleGraph moduleGraph int desiredType AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map cssNames providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	replace	
68	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg, int desiredType) { [BUGGY] [BUGGY] DiagnosticType diagnostic = null; if (arg == null) { diagnostic = NULL_ARGUMENT_ERROR; } else if (arg.getType() != desiredType) { diagnostic = INVALID_ARGUMENT_ERROR; } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; } if (diagnostic != null) { compiler.report( t.makeError(methodName, [CLASS] ProcessClosurePrimitives 1 ProvidedName UnrecognizedRequire [METHOD] verifyArgument [RETURN_TYPE] boolean  NodeTraversal t Node methodName Node arg int desiredType [VARIABLES] Set exportedVariables NodeTraversal t CheckLevel requiresLevel Node arg baseClassNode callGoogNow callNode callee candidateDefinition className date enclosingFnNameNode enclosingParent explicitNode expr externs firstNode googNow key left maybeInheritsExpr methodName methodNameNode n name node parent replacementNode requireNode root scopeRoot thisArg value String GOOG enclosingQname ending extraMessage googNowQName inputName methodName name namespace ns part typeDecl value JSModuleGraph moduleGraph int desiredType AbstractCompiler compiler boolean explicit isExpr rewriteNewDateGoogNow DiagnosticType BASE_CLASS_ERROR DUPLICATE_NAMESPACE_ERROR FUNCTION_NAMESPACE_ERROR INVALID_ARGUMENT_ERROR INVALID_PROVIDE_ERROR LATE_PROVIDE_ERROR MISSING_PROVIDE_ERROR NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR NULL_ARGUMENT_ERROR TOO_MANY_ARGUMENTS_ERROR XMODULE_REQUIRE_ERROR diagnostic error JSModule explicitModule firstModule minimumModule module providedModule List typeDecls unrecognizedRequires Map cssNames providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	610	610	1	add	
69	[BUG] [BUGGY] if (arg == null) { [FE] AssertionFailedError [CONTEXT]   private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg, int desiredType) { DiagnosticType diagnostic = null; [BUGGY] if (arg == null) { [BUGGY] diagnostic = NULL_ARGUMENT_ERROR; } else if (arg.getType() != desiredType) { diagnostic = INVALID_ARGUMENT_ERROR; } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	611	611	1	replace	
70	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg, int desiredType) { DiagnosticType diagnostic = null; [BUGGY] [BUGGY] if (arg == null) { diagnostic = NULL_ARGUMENT_ERROR; } else if (arg.getType() != desiredType) { diagnostic = INVALID_ARGUMENT_ERROR; } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	611	611	1	add	
71	[BUG] [BUGGY] } else if (arg.getType() != desiredType) { [FE] AssertionFailedError [CONTEXT] private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg, int desiredType) { DiagnosticType diagnostic = null; if (arg == null) { diagnostic = NULL_ARGUMENT_ERROR; [BUGGY] } else if (arg.getType() != desiredType) { [BUGGY] diagnostic = INVALID_ARGUMENT_ERROR; } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; } if (diagnostic != null) { [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	613	613	1	replace	
72	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg, int desiredType) { DiagnosticType diagnostic = null; if (arg == null) { diagnostic = NULL_ARGUMENT_ERROR; [BUGGY] [BUGGY] } else if (arg.getType() != desiredType) { diagnostic = INVALID_ARGUMENT_ERROR; } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; } if (diagnostic != null) { [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	613	613	1	add	
73	[BUG] [BUGGY] if (diagnostic != null) { [FE] AssertionFailedError [CONTEXT] } else if (arg.getType() != desiredType) { diagnostic = INVALID_ARGUMENT_ERROR; } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; } [BUGGY] if (diagnostic != null) { [BUGGY] compiler.report( t.makeError(methodName, diagnostic, methodName.getQualifiedName())); return false; } [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	618	618	1	replace	
74	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else if (arg.getType() != desiredType) { diagnostic = INVALID_ARGUMENT_ERROR; } else if (arg.getNext() != null) { diagnostic = TOO_MANY_ARGUMENTS_ERROR; } [BUGGY] [BUGGY] if (diagnostic != null) { compiler.report( t.makeError(methodName, diagnostic, methodName.getQualifiedName())); return false; } [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	618	618	1	add	
75	[BUG] [BUGGY] } else if ("provide".equals(methodName)) { [FE] AssertionFailedError [CONTEXT] } else if (!isExpr) {  break; } else if ("require".equals(methodName)) { processRequireCall(t, n, parent); [BUGGY] } else if ("provide".equals(methodName)) { [BUGGY] processProvideCall(t, n, parent); } else if ("exportSymbol".equals(methodName)) { Node arg = left.getNext(); if (arg.getType() == Token.STRING) { int dot = arg.getString().indexOf('.'); [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13018891098082389	165	165	1	replace	
76	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else if (!isExpr) {  break; } else if ("require".equals(methodName)) { processRequireCall(t, n, parent); [BUGGY] [BUGGY] } else if ("provide".equals(methodName)) { processProvideCall(t, n, parent); } else if ("exportSymbol".equals(methodName)) { Node arg = left.getNext(); if (arg.getType() == Token.STRING) { int dot = arg.getString().indexOf('.'); [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13018891098082389	165	165	1	add	
77	[BUG] [BUGGY] } else if ("require".equals(methodName)) { [FE] AssertionFailedError [CONTEXT] if ("base".equals(methodName)) { processBaseClassCall(t, n); } else if (!isExpr) {  break; [BUGGY] } else if ("require".equals(methodName)) { [BUGGY] processRequireCall(t, n, parent); } else if ("provide".equals(methodName)) { processProvideCall(t, n, parent); } else if ("exportSymbol".equals(methodName)) { Node arg = left.getNext(); [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.12803687993289598	163	163	1	replace	
78	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if ("base".equals(methodName)) { processBaseClassCall(t, n); } else if (!isExpr) {  break; [BUGGY] [BUGGY] } else if ("require".equals(methodName)) { processRequireCall(t, n, parent); } else if ("provide".equals(methodName)) { processProvideCall(t, n, parent); } else if ("exportSymbol".equals(methodName)) { Node arg = left.getNext(); [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.12803687993289598	163	163	1	add	
79	[BUG] [BUGGY] } else if (!isExpr) { [FE] AssertionFailedError [CONTEXT]   String methodName = name.getNext().getString(); if ("base".equals(methodName)) { processBaseClassCall(t, n); [BUGGY] } else if (!isExpr) { [BUGGY]  break; } else if ("require".equals(methodName)) { processRequireCall(t, n, parent); } else if ("provide".equals(methodName)) { [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1270001270001905	160	160	1	replace	
80	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   String methodName = name.getNext().getString(); if ("base".equals(methodName)) { processBaseClassCall(t, n); [BUGGY] [BUGGY] } else if (!isExpr) {  break; } else if ("require".equals(methodName)) { processRequireCall(t, n, parent); } else if ("provide".equals(methodName)) { [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1270001270001905	160	160	1	add	
81	[BUG] [BUGGY] String methodName = name.getNext().getString(); [FE] AssertionFailedError [CONTEXT] if (name.getType() == Token.NAME && GOOG.equals(name.getString())) {    [BUGGY] String methodName = name.getNext().getString(); [BUGGY] if ("base".equals(methodName)) { processBaseClassCall(t, n); } else if (!isExpr) {  break; [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	
82	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (name.getType() == Token.NAME && GOOG.equals(name.getString())) {    [BUGGY] [BUGGY] String methodName = name.getNext().getString(); if ("base".equals(methodName)) { processBaseClassCall(t, n); } else if (!isExpr) {  break; [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	add	
83	[BUG] [BUGGY] if ("base".equals(methodName)) { [FE] AssertionFailedError [CONTEXT] GOOG.equals(name.getString())) {    String methodName = name.getNext().getString(); [BUGGY] if ("base".equals(methodName)) { [BUGGY] processBaseClassCall(t, n); } else if (!isExpr) {  break; } else if ("require".equals(methodName)) { [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	
84	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] GOOG.equals(name.getString())) {    String methodName = name.getNext().getString(); [BUGGY] [BUGGY] if ("base".equals(methodName)) { processBaseClassCall(t, n); } else if (!isExpr) {  break; } else if ("require".equals(methodName)) { [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	add	
85	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] compiler.reportCodeChange(); } else if ("setCssNameMapping".equals(methodName)) { processSetCssNameMapping(t, n, parent); } } [BUGGY] } [BUGGY] break; case Token.ASSIGN: case Token.NAME:   [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	
86	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] compiler.reportCodeChange(); } else if ("setCssNameMapping".equals(methodName)) { processSetCssNameMapping(t, n, parent); } } [BUGGY] [BUGGY] } break; case Token.ASSIGN: case Token.NAME:   [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	add	
87	[BUG] [BUGGY] } else if (n.getType() == Token.ASSIGN && parent.getType() == Token.EXPR_RESULT) { [FE] AssertionFailedError [CONTEXT] NodeTraversal t, Node n, Node parent) { if (t.inGlobalScope()) { String name = null; if (n.getType() == Token.NAME && parent.getType() == Token.VAR) { name = n.getString(); [BUGGY] } else if (n.getType() == Token.ASSIGN &&   parent.getType() == Token.EXPR_RESULT) { [BUGGY] parent.getType() == Token.EXPR_RESULT) { name = n.getFirstChild().getQualifiedName(); } if (name != null) { [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	
88	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] NodeTraversal t, Node n, Node parent) { if (t.inGlobalScope()) { String name = null; if (n.getType() == Token.NAME && parent.getType() == Token.VAR) { name = n.getString(); [BUGGY] [BUGGY] } else if (n.getType() == Token.ASSIGN &&   parent.getType() == Token.EXPR_RESULT) { parent.getType() == Token.EXPR_RESULT) { name = n.getFirstChild().getQualifiedName(); } if (name != null) { [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	add	
89	[BUG] [BUGGY] boolean rewriteNewDateGoogNow) { [FE] AssertionFailedError [CONTEXT] private final CheckLevel requiresLevel; private final boolean rewriteNewDateGoogNow; ProcessClosurePrimitives(AbstractCompiler compiler, CheckLevel requiresLevel, [BUGGY] boolean rewriteNewDateGoogNow) { [BUGGY] this.compiler = compiler; this.moduleGraph = compiler.getModuleGraph(); this.requiresLevel = requiresLevel; this.rewriteNewDateGoogNow = rewriteNewDateGoogNow;  [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	104	104	1	replace	
90	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final CheckLevel requiresLevel; private final boolean rewriteNewDateGoogNow; ProcessClosurePrimitives(AbstractCompiler compiler, CheckLevel requiresLevel, [BUGGY] [BUGGY] boolean rewriteNewDateGoogNow) { this.compiler = compiler; this.moduleGraph = compiler.getModuleGraph(); this.requiresLevel = requiresLevel; this.rewriteNewDateGoogNow = rewriteNewDateGoogNow;  [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	104	104	1	add	
91	[BUG] [BUGGY] private final Map<String, ProvidedName> providedNames = Maps.newTreeMap(); [FE] AssertionFailedError [CONTEXT] private final AbstractCompiler compiler; private final JSModuleGraph moduleGraph;  [BUGGY] private final Map<String, ProvidedName> providedNames =  Maps.newTreeMap(); [BUGGY] Maps.newTreeMap(); private final List<UnrecognizedRequire> unrecognizedRequires = Lists.newArrayList(); private final Set<String> exportedVariables = Sets.newHashSet(); [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	93	94	1	replace	
92	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final AbstractCompiler compiler; private final JSModuleGraph moduleGraph;  [BUGGY] [BUGGY] private final Map<String, ProvidedName> providedNames =  Maps.newTreeMap(); Maps.newTreeMap(); private final List<UnrecognizedRequire> unrecognizedRequires = Lists.newArrayList(); private final Set<String> exportedVariables = Sets.newHashSet(); [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	93	94	1	add	
93	[BUG] [BUGGY] private final List<UnrecognizedRequire> unrecognizedRequires = Lists.newArrayList(); [FE] AssertionFailedError [CONTEXT]  private final Map<String, ProvidedName> providedNames = Maps.newTreeMap(); [BUGGY] private final List<UnrecognizedRequire> unrecognizedRequires =  Lists.newArrayList(); [BUGGY] Lists.newArrayList(); private final Set<String> exportedVariables = Sets.newHashSet(); private final CheckLevel requiresLevel; private final boolean rewriteNewDateGoogNow;  [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	96	97	1	replace	
94	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  private final Map<String, ProvidedName> providedNames = Maps.newTreeMap(); [BUGGY] [BUGGY] private final List<UnrecognizedRequire> unrecognizedRequires =  Lists.newArrayList(); Lists.newArrayList(); private final Set<String> exportedVariables = Sets.newHashSet(); private final CheckLevel requiresLevel; private final boolean rewriteNewDateGoogNow;  [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	96	97	1	add	
95	[BUG] [BUGGY] private final Set<String> exportedVariables = Sets.newHashSet(); [FE] AssertionFailedError [CONTEXT] private final Map<String, ProvidedName> providedNames = Maps.newTreeMap(); private final List<UnrecognizedRequire> unrecognizedRequires = Lists.newArrayList(); [BUGGY] private final Set<String> exportedVariables = Sets.newHashSet(); [BUGGY] private final CheckLevel requiresLevel; private final boolean rewriteNewDateGoogNow; ProcessClosurePrimitives(AbstractCompiler compiler, CheckLevel requiresLevel, [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	98	98	1	replace	
96	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final Map<String, ProvidedName> providedNames = Maps.newTreeMap(); private final List<UnrecognizedRequire> unrecognizedRequires = Lists.newArrayList(); [BUGGY] [BUGGY] private final Set<String> exportedVariables = Sets.newHashSet(); private final CheckLevel requiresLevel; private final boolean rewriteNewDateGoogNow; ProcessClosurePrimitives(AbstractCompiler compiler, CheckLevel requiresLevel, [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	98	98	1	add	
97	[BUG] [BUGGY] this.compiler = compiler; [FE] AssertionFailedError [CONTEXT] private final boolean rewriteNewDateGoogNow; ProcessClosurePrimitives(AbstractCompiler compiler, CheckLevel requiresLevel, boolean rewriteNewDateGoogNow) { [BUGGY] this.compiler = compiler; [BUGGY] this.moduleGraph = compiler.getModuleGraph(); this.requiresLevel = requiresLevel; this.rewriteNewDateGoogNow = rewriteNewDateGoogNow;   [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	105	105	1	replace	
98	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final boolean rewriteNewDateGoogNow; ProcessClosurePrimitives(AbstractCompiler compiler, CheckLevel requiresLevel, boolean rewriteNewDateGoogNow) { [BUGGY] [BUGGY] this.compiler = compiler; this.moduleGraph = compiler.getModuleGraph(); this.requiresLevel = requiresLevel; this.rewriteNewDateGoogNow = rewriteNewDateGoogNow;   [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	105	105	1	add	
99	[BUG] [BUGGY] this.moduleGraph = compiler.getModuleGraph(); [FE] AssertionFailedError [CONTEXT] ProcessClosurePrimitives(AbstractCompiler compiler, CheckLevel requiresLevel, boolean rewriteNewDateGoogNow) { this.compiler = compiler; [BUGGY] this.moduleGraph = compiler.getModuleGraph(); [BUGGY] this.requiresLevel = requiresLevel; this.rewriteNewDateGoogNow = rewriteNewDateGoogNow;  providedNames.put(GOOG, [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	106	106	1	replace	
100	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] ProcessClosurePrimitives(AbstractCompiler compiler, CheckLevel requiresLevel, boolean rewriteNewDateGoogNow) { this.compiler = compiler; [BUGGY] [BUGGY] this.moduleGraph = compiler.getModuleGraph(); this.requiresLevel = requiresLevel; this.rewriteNewDateGoogNow = rewriteNewDateGoogNow;  providedNames.put(GOOG, [CLASS] 	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11624763874381928	106	106	1	add	
