bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.ASSIGN  &&  name.getType()  ==  Token.EXPR_RESULT)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  }  else  if(name.getType()  ==  Token.ASSIGN  &&  name.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	}  else  if(name.getType()  ==  Token.ASSIGN  &&  name.getType()  ==  Token.EXPR_RESULT)  {	  }    else    if(n.getType()    ==    Token.ASSIGN    &&    name.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
2	[BUG]  [BUGGY]  }  else  if(parent.getType()  ==  Token.ASSIGN  &&  name.getType()  ==  Token.EXPR_RESULT)  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  }  else  if(parent.getType()  ==  Token.ASSIGN  &&  name.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	}  else  if(parent.getType()  ==  Token.ASSIGN  &&  name.getType()  ==  Token.EXPR_RESULT)  {	  }    else    if(n.getType()    ==    Token.ASSIGN    &&    name.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
3	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.ASSIGN  &&  parent.getType()!=  Token.EXPR_RESULT)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  }  else  if(n.getType()  ==  Token.ASSIGN  &&  parent.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	}  else  if(n.getType()  ==  Token.ASSIGN  &&  parent.getType()!=  Token.EXPR_RESULT)  {	  }    else    if(parent.getType()    ==    Token.ASSIGN    &&    parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
4	[BUG]  [BUGGY]  name  =  n.getFirstChild().getQualifiedName();  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	name  =  n.getFirstChild().getQualifiedName();	      	non-compiled	[CE]  orphaned  case	2	None	replace
5	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName();  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	Name  name  =  n.getFirstChild().getQualifiedName();	      	non-compiled	[CE]  orphaned  case	2	None	replace
6	[BUG]  [BUGGY]  name  =  n.getLastChild().getString();  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  name  =  n.getLastChild().getString();  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	name  =  n.getLastChild().getString();	      	non-compiled	[CE]  orphaned  case	2	None	replace
7	[BUG]  [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName();  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName();  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	Name  name  =  n.getLastChild().getQualifiedName();	      	non-compiled	[CE]  orphaned  case	2	None	replace
8	[BUG]  [BUGGY]  }  else  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  }  else  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	}  else  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getType()  ==  Token.EXPR_RESULT)  {	  }    else    if(parent.getType()    ==    Token.ASSIGN    &&    parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
9	[BUG]  [BUGGY]  name  =  n.getLastChild();  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  name  =  n.getLastChild();  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	name  =  n.getLastChild();	      	non-compiled	[CE]  orphaned  case	2	None	replace
10	[BUG]  [BUGGY]  name  =  n.getFirstChild().getString();  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  name  =  n.getFirstChild().getString();  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	name  =  n.getFirstChild().getString();	      	non-compiled	[CE]  orphaned  case	2	None	replace
11	[BUG]  [BUGGY]  n  =  n.getFirstChild();  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  n  =  n.getFirstChild();  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	n  =  n.getFirstChild();	      	non-compiled	[CE]  orphaned  case	2	None	replace
12	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.ASSIGN  &&  n.getType()  ==  Token.EXPR_RESULT)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.getType()  ==  Token.NAME  &&  parent.getType()  ==  Token.VAR)  {  name  =  n.getString();    [BUGGY]  }  else  if(n.getType()  ==  Token.ASSIGN  &&  n.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    parent.getType()  ==  Token.EXPR_RESULT)  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	306	307	1	replace	}  else  if(n.getType()  ==  Token.ASSIGN  &&  n.getType()  ==  Token.EXPR_RESULT)  {	  }    else    if(parent.getType()    ==    Token.ASSIGN    &&    parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
