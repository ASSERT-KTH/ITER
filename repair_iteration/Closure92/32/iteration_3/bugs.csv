bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg.getQualifiedName());  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg.getQualifiedName());  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	NodeTraversal.traverse(compiler,  desiredType,  arg.getQualifiedName());  return  false;	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    desiredType,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg.getQualifiedName());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	NodeTraversal.traverse(compiler,  desiredType,  arg.getQualifiedName());	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    desiredType,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  desiredType);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  desiredType);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	NodeTraversal.traverse(compiler,  arg,  desiredType);	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    desiredType,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg.getQualifiedName()));  return  false;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg.getQualifiedName()));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	NodeTraversal.traverse(compiler,  desiredType,  arg.getQualifiedName()));  return  false;	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    desiredType,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
5	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  diagnostic));  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  diagnostic));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  diagnostic));  return  false;	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_ARGUMENT_ERROR));    return    false;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
6	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  MISSING_PROVIDE_ERROR));  return  false;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  MISSING_PROVIDE_ERROR));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  MISSING_PROVIDE_ERROR));  return  false;	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_ARGUMENT_ERROR));    return    false;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
7	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_NAMESPACE_ERROR));  return  false;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_NAMESPACE_ERROR));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_NAMESPACE_ERROR));  return  false;	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_ARGUMENT_ERROR));    return    false;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
8	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg.getNext(),  diagnostic);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg.getNext(),  diagnostic);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  arg.getNext(),  diagnostic);	  result.add(t.makeError(methodName,    desiredType),    arg.getNext());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
9	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  methodName.getNext());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  methodName.getNext());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  methodName.getNext());	  result.add(t.makeError(methodName,    desiredType),    arg.getNext());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
10	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnostic,  arg.getNext());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnostic,  arg.getNext());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  diagnostic,  arg.getNext());	  result.add(t.makeError(methodName,    desiredType),    arg.getNext());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
11	[BUG]  [BUGGY]  parent  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null)  {  return  null;  }	  if(diagnostic    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION;	  if(diagnostic    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
14	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
15	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  MISSING_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  MISSING_PROVIDE_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
16	[BUG]  [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
17	[BUG]  [BUGGY]  if(expr  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(expr  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(expr  ==  null)  {  return  true;  }	  if(expr!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
18	[BUG]  [BUGGY]  if(expr  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(expr  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(expr  ==  null)  {  return  false;  }	  if(expr!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
19	[BUG]  [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  return  diagnostic!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  return  diagnostic!=  NON_STRING_PASSED_TO_SET_CSS_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic!=  NON_STRING_PASSED_TO_SET_CSS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic!=  NON_STRING_PASSED_TO_SET_CSS_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  result.add(new  ProvidedName(t,  desiredType,  diagnostic));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(t,  desiredType,  diagnostic));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(t,  desiredType,  diagnostic));	  result.add(new    ProvidedName(null,    desiredType,    diagnostic));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
24	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType,  desiredType));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType,  desiredType));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType,  desiredType));	  result.add(new    ProvidedName(null,    desiredType,    diagnostic));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
25	[BUG]  [BUGGY]  result.add(new  ProvidedName(arg,  desiredType,  diagnostic));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(arg,  desiredType,  diagnostic));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(arg,  desiredType,  diagnostic));	  result.add(new    ProvidedName(null,    desiredType,    diagnostic));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
26	[BUG]  [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType,  diagnostic));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType,  diagnostic));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(methodName,  desiredType,  diagnostic));	  result.add(new    ProvidedName(null,    desiredType,    diagnostic));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
27	[BUG]  [BUGGY]  return(node  ==  null)?  desiredNode  :  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(node  ==  null)?  desiredNode  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(node  ==  null)?  desiredNode  :  node.getFirstChild();	  return(requireNode    ==    null)?    desiredNode    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
28	[BUG]  [BUGGY]  return(requireNode  ==  null)?  desiredNode  :  node.getLastChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(requireNode  ==  null)?  desiredNode  :  node.getLastChild();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(requireNode  ==  null)?  desiredNode  :  node.getLastChild();	  return(requireNode    ==    null)?    desiredNode    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
29	[BUG]  [BUGGY]  return(node  ==  null)?  requiredNode  :  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(node  ==  null)?  requiredNode  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(node  ==  null)?  requiredNode  :  node.getFirstChild();	  return(requireNode    ==    null)?    desiredNode    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
30	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION;	  if(diagnostic!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
31	[BUG]  [BUGGY]  return  diagnostic  ==  desiredType?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  desiredType?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  desiredType?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  +  1;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  +  1;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  return  desiredType  ==  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  MISSING_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  MISSING_PROVIDE_ERROR;	  return    desiredType    ==    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
34	[BUG]  [BUGGY]  return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    ==    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
35	[BUG]  [BUGGY]  return  desiredType  ==  XMODULE_REQUIRE_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  XMODULE_REQUIRE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  XMODULE_REQUIRE_ERROR;	  return    desiredType    ==    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
36	[BUG]  [BUGGY]  return  desiredType  ==  MISSING_PROVIDE_ERROR  ||  desiredType  ==  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  MISSING_PROVIDE_ERROR  ||  desiredType  ==  LATE_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  MISSING_PROVIDE_ERROR  ||  desiredType  ==  LATE_PROVIDE_ERROR;	  return    desiredType    ==    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
37	[BUG]  [BUGGY]  return  diagnostic!=  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic!=  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic!=  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType!=    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
38	[BUG]  [BUGGY]  return  desiredType!=  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic.getType()  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType!=  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic.getType()  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType!=  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic.getType()  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType!=    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
39	[BUG]  [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  diagnostic);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  diagnostic);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(methodName,  desiredType),  diagnostic);	  result.add(new    ProvidedName(methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  moduleGraph);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  moduleGraph);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(methodName,  desiredType),  moduleGraph);	  result.add(new    ProvidedName(methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
41	[BUG]  [BUGGY]  parent  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null)  {  return  false;  }	  parent    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
42	[BUG]  [BUGGY]  parent!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent!=  null)  {  return  false;  }	  parent    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
43	[BUG]  [BUGGY]  parent  ==  null  &&  expr!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  null  &&  expr!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null  &&  expr!=  null)  {  return  false;  }	  if(expr!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
44	[BUG]  [BUGGY]  parent!=  null  &&  expr  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent!=  null  &&  expr  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent!=  null  &&  expr  ==  null)  {  return  false;  }	  if(expr!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
45	[BUG]  [BUGGY]  ||  diagnostic  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  diagnostic  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	||  diagnostic  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }	  if(diagnostic    ==    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
46	[BUG]  [BUGGY]  ||  diagnostic  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  diagnostic  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	||  diagnostic  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  if(diagnostic    ==    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
47	[BUG]  [BUGGY]  return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  desiredType));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  desiredType));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  desiredType));	  return    diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
48	[BUG]  [BUGGY]  return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR)&&  desiredType  ==  NON_STRING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR)&&  desiredType  ==  NON_STRING_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR)&&  desiredType  ==  NON_STRING_PROVIDE_ERROR;	  return    diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
49	[BUG]  [BUGGY]  return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName));	  return    diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
50	[BUG]  [BUGGY]  return  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
51	[BUG]  [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
52	[BUG]  [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName.getQualifiedName();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName.getQualifiedName();	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
53	[BUG]  [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName,  desiredType;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName,  desiredType;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  methodName,  desiredType;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
54	[BUG]  [BUGGY]  AssertionFailedError.error(t,  arg.getNext(),  methodName.getQualifiedName()));  return  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.error(t,  arg.getNext(),  methodName.getQualifiedName()));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	AssertionFailedError.error(t,  arg.getNext(),  methodName.getQualifiedName()));  return  false;	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
55	[BUG]  [BUGGY]  Node  arg  =  arg.getNext();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  Node  arg  =  arg.getNext();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	Node  arg  =  arg.getNext();	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
56	[BUG]  [BUGGY]  AssertionFailedError.error(t,  arg.getNext(),  methodName.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.error(t,  arg.getNext(),  methodName.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	AssertionFailedError.error(t,  arg.getNext(),  methodName.getQualifiedName()));	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
57	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));	  moduleGraph.report(t.makeError(methodName,    desiredType,    methodName.getQualifiedName()));    return    true;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
58	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  true;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  true;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  true;	  moduleGraph.report(t.makeError(methodName,    desiredType,    methodName.getQualifiedName()));    return    true;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
59	[BUG]  [BUGGY]  parent!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent!=  null)  {  return  null;  }	  if(diagnostic!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||(arg.getNext()!=    null    &&    arg.getNext().equals(methodName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
61	[BUG]  [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||(arg.getNext()!=    null    &&    arg.getNext().equals(methodName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
62	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_ARGUMENTS_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  INVALID_ARGUMENTS_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_ARGUMENTS_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||(arg.getNext()!=    null    &&    arg.getNext().equals(methodName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
63	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  false;	  moduleGraph.report(t.makeError(methodName,    desiredType,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
64	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  diagnostic.getQualifiedName()));  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  diagnostic.getQualifiedName()));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  diagnostic.getQualifiedName()));  return  false;	  moduleGraph.report(t.makeError(methodName,    desiredType,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
65	[BUG]  [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
67	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  ==  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  ==  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  ==  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
68	[BUG]  [BUGGY]  AssertionFailedError.error(t,  arg.getNext(),  methodName.getQualifiedName()));  return  true;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.error(t,  arg.getNext(),  methodName.getQualifiedName()));  return  true;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	AssertionFailedError.error(t,  arg.getNext(),  methodName.getQualifiedName()));  return  true;	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
69	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName.getNext());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName.getNext());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType),  methodName.getNext());	  result.add(new    ProvidedName(diagnostic,    desiredType),    arg.getNext());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
70	[BUG]  [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  arg.getNext());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  arg.getNext());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(methodName,  desiredType),  arg.getNext());	  result.add(new    ProvidedName(diagnostic,    desiredType),    arg.getNext());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
71	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  arg.getNext(),  diagnostic);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  arg.getNext(),  diagnostic);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType),  arg.getNext(),  diagnostic);	  result.add(new    ProvidedName(diagnostic,    desiredType),    arg.getNext());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
72	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  arg.getNext(),  methodName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  arg.getNext(),  methodName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType),  arg.getNext(),  methodName);	  result.add(new    ProvidedName(diagnostic,    desiredType),    arg.getNext());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
73	[BUG]  [BUGGY]  result.add(new  ProvidedName(arg,  desiredType,  methodName));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(arg,  desiredType,  methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(arg,  desiredType,  methodName));	  result.add(new    ProvidedName(arg,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
74	[BUG]  [BUGGY]  return  diagnostic  ==  desiredType?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  desiredType?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  desiredType?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  +  1;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  +  1;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    Too_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
77	[BUG]  [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  ||  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  ||  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  ||  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    Too_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
78	[BUG]  [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    Too_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
79	[BUG]  [BUGGY]  return(requireNode  ==  null)?  null  :  requiredNode.getLastChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(requireNode  ==  null)?  null  :  requiredNode.getLastChild();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(requireNode  ==  null)?  null  :  requiredNode.getLastChild();	  return(requireNode    ==    null)?    null    :    requiredNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
80	[BUG]  [BUGGY]  return(requireNode!=  null)?  null  :  requiredNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(requireNode!=  null)?  null  :  requiredNode.getFirstChild();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(requireNode!=  null)?  null  :  requiredNode.getFirstChild();	  return(requireNode    ==    null)?    null    :    requiredNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
81	[BUG]  [BUGGY]  return(requiredNode  ==  null)?  null  :  requiredNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(requiredNode  ==  null)?  null  :  requiredNode.getFirstChild();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(requiredNode  ==  null)?  null  :  requiredNode.getFirstChild();	  return(requireNode    ==    null)?    null    :    requiredNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
82	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  return  this;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(diagnostic!=  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic!=  null)  {  return  this;  }	  return    this;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  if(diagnostic  ==  null)  {  return  this;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(diagnostic  ==  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic  ==  null)  {  return  this;  }	  return    this;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  return(diagnostic!=  null)?  null  :  diagnostic.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(diagnostic!=  null)?  null  :  diagnostic.getQualifiedName();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(diagnostic!=  null)?  null  :  diagnostic.getQualifiedName();	  return    this;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
85	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_ARGUMENTS_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  INVALID_ARGUMENTS_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_ARGUMENTS_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    INVALID_ARGUMENTS_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
86	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_ARGUMENTS_ERROR  ||  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  INVALID_ARGUMENTS_ERROR  ||  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_ARGUMENTS_ERROR  ||  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    INVALID_ARGUMENTS_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
87	[BUG]  [BUGGY]  result.add(new  ProvidedName(t,  methodName,  desiredType));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(t,  methodName,  desiredType));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(t,  methodName,  desiredType));	  result.add(new    ProvidedName(null,    methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  result.add(new  ProvidedName(null,  desiredType,  methodName));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(null,  desiredType,  methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(null,  desiredType,  methodName));	  result.add(new    ProvidedName(null,    methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  result.add(new  ProvidedName(arg,  methodName,  desiredType));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(arg,  methodName,  desiredType));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(arg,  methodName,  desiredType));	  result.add(new    ProvidedName(null,    methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
90	[BUG]  [BUGGY]  result.add(new  ProvidedName(null,  methodName,  desiredType),  moduleGraph);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(null,  methodName,  desiredType),  moduleGraph);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(null,  methodName,  desiredType),  moduleGraph);	  result.add(new    ProvidedName(null,    methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
91	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnosis);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnosis);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  diagnosis);	  result.add(t.makeError(methodName,    desiredType),    arg);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
92	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP));  return  true;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP));  return  true;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP));  return  true;	  moduleGraph.report(t.makeError(methodName,    desiredType,    MISSING_PROVIDE_ERROR));    return    true;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
93	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  LATE_PROVIDE_ERROR));  return  true;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  LATE_PROVIDE_ERROR));  return  true;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  LATE_PROVIDE_ERROR));  return  true;	  moduleGraph.report(t.makeError(methodName,    desiredType,    MISSING_PROVIDE_ERROR));    return    true;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
94	[BUG]  [BUGGY]  return  desired!=  null?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired!=  null?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired!=  null?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
95	[BUG]  [BUGGY]  return  desired  ==  null?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  ==  null?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  ==  null?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
96	[BUG]  [BUGGY]  return  desired!=  0?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired!=  0?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired!=  0?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
97	[BUG]  [BUGGY]  return  desired!=  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired!=  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired!=  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
98	[BUG]  [BUGGY]  return  diagnostic.getQualifiedName().equals(methodName.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.getQualifiedName().equals(methodName.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.getQualifiedName().equals(methodName.getQualifiedName()));	  return    diagnostic.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
99	[BUG]  [BUGGY]  return  methodName.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  methodName.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  methodName.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  return    diagnostic.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
100	[BUG]  [BUGGY]  return  non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic.getQualifiedName()));	  return    diagnostic.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
101	[BUG]  [BUGGY]  ||  diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	||  diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
102	[BUG]  [BUGGY]  ||  diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	||  diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
103	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  LATE_PROVIDE_ERROR));  return  false;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  LATE_PROVIDE_ERROR));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  LATE_PROVIDE_ERROR));  return  false;	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_PROVIDE_ERROR));    return    false;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
104	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP));  return  false;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP));  return  false;	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_PROVIDE_ERROR));    return    false;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
105	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  MISSING_PROVIDE_ERROR));  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  MISSING_PROVIDE_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  MISSING_PROVIDE_ERROR));	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_PROVIDE_ERROR));    return    false;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
106	[BUG]  [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    >    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
107	[BUG]  [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    >    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
108	[BUG]  [BUGGY]  return  diagnostic  ==  INVALID_ARGUMENTS_ERROR  ||  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  INVALID_ARGUMENTS_ERROR  ||  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  INVALID_ARGUMENTS_ERROR  ||  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    >    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
109	[BUG]  [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    >    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
110	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  moduleGraph);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  moduleGraph);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  moduleGraph);	  result.add(new    ProvidedName(diagnostic,    desiredType),    methodName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
111	[BUG]  [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  desiredType);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  desiredType);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(methodName,  desiredType),  desiredType);	  result.add(new    ProvidedName(diagnostic,    desiredType),    methodName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
112	[BUG]  [BUGGY]  result.add(new  ProvidedName(arg,  desiredType),  methodName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(arg,  desiredType),  methodName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(arg,  desiredType),  methodName);	  result.add(new    ProvidedName(diagnostic,    desiredType),    methodName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
113	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(null,  methodName.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(null,  methodName.getQualifiedName());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(null,  methodName.getQualifiedName());	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    else    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
114	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  desiredType);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  desiredType);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  desiredType);	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    else    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
115	[BUG]  [BUGGY]  parent.replaceChild(arg,  desiredType);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent.replaceChild(arg,  desiredType);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent.replaceChild(arg,  desiredType);	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    else    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
116	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(null,  methodName,  desiredType);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(null,  methodName,  desiredType);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(null,  methodName,  desiredType);	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    else    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
117	[BUG]  [BUGGY]  return  methodName.equals(diagnostic.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  methodName.equals(diagnostic.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  methodName.equals(diagnostic.getQualifiedName()));	  return    diagnostic.equals(methodName.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
118	[BUG]  [BUGGY]  return  diagnostic.equals(methodName.getQualifiedName(),  desiredType));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.equals(methodName.getQualifiedName(),  desiredType));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(methodName.getQualifiedName(),  desiredType));	  return    diagnostic.equals(methodName.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
119	[BUG]  [BUGGY]  return  diagnostic.equals(methodName.getQualifiedName())&&!diagnostic.isFunctionDeclaration();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.equals(methodName.getQualifiedName())&&!diagnostic.isFunctionDeclaration();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(methodName.getQualifiedName())&&!diagnostic.isFunctionDeclaration();	  return    diagnostic.equals(methodName.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
120	[BUG]  [BUGGY]  return  diagnostic;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic;	  return    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
121	[BUG]  [BUGGY]  return  DiagnosticType.NULL_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  DiagnosticType.NULL_ARGUMENT_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  DiagnosticType.NULL_ARGUMENT_ERROR;	  return    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
122	[BUG]  [BUGGY]  return  desiredType  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  +  1;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  +  1;	  return    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
123	[BUG]  [BUGGY]  return  DiagnosticType.UNKNOWN_EXPR_TYPE;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  DiagnosticType.UNKNOWN_EXPR_TYPE;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  DiagnosticType.UNKNOWN_EXPR_TYPE;	  return    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
124	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  desiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  desiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  desiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR?    desiredType    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
125	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  diagnostic  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  diagnostic  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  diagnostic  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR?    desiredType    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
126	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  requiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  requiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  requiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR?    desiredType    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
127	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  diagnostic));  return  true;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  diagnostic));  return  true;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  diagnostic));  return  true;	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_ARGUMENT_ERROR));    return    true;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
128	[BUG]  [BUGGY]  if(diagnostic  ==  null  ||  diagnostic.getQualifiedName()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(diagnostic  ==  null  ||  diagnostic.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic  ==  null  ||  diagnostic.getQualifiedName()!=  null)  {  return  false;  }	  if(diagnostic    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
129	[BUG]  [BUGGY]  result  =  desiredType;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result  =  desiredType;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result  =  desiredType;	  result    =    XMODULE_REQUIRE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
130	[BUG]  [BUGGY]  result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  result    =    XMODULE_REQUIRE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
131	[BUG]  [BUGGY]  result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  INVALID_PROVIDE_ERROR;	  result    =    XMODULE_REQUIRE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
132	[BUG]  [BUGGY]  result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  DUPLICATE_NAMESPACE_ERROR;	  result    =    XMODULE_REQUIRE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
133	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_PROVIDE_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    &&    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
134	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  methodName.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  methodName.getQualifiedName());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  methodName.getQualifiedName());	  result.add(t.makeError(methodName,    desiredType),    arg.getQualifiedName());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
135	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnostic.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnostic.getQualifiedName());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  diagnostic.getQualifiedName());	  result.add(t.makeError(methodName,    desiredType),    arg.getQualifiedName());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
136	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnostic,  arg.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnostic,  arg.getQualifiedName());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  diagnostic,  arg.getQualifiedName());	  result.add(t.makeError(methodName,    desiredType),    arg.getQualifiedName());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
137	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  MISSING_PROVIDE_ERROR);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  MISSING_PROVIDE_ERROR);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  MISSING_PROVIDE_ERROR);	  result.add(t.makeError(methodName,    desiredType),    DEPRECATED_PROVIDE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
138	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  DEPRECATED_PROVIDE_ERROR,  MISSING_PROVIDE_ERROR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  DEPRECATED_PROVIDE_ERROR,  MISSING_PROVIDE_ERROR);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  DEPRECATED_PROVIDE_ERROR,  MISSING_PROVIDE_ERROR);	  result.add(t.makeError(methodName,    desiredType),    DEPRECATED_PROVIDE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
139	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  MAXIMIZED_PROVIDE_ERROR);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  MAXIMIZED_PROVIDE_ERROR);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  MAXIMIZED_PROVIDE_ERROR);	  result.add(t.makeError(methodName,    desiredType),    DEPRECATED_PROVIDE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
140	[BUG]  [BUGGY]  return  diagnostic  ==  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
141	[BUG]  [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR?  desiredType  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR?  desiredType  :  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR?  desiredType  :  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
142	[BUG]  [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_ERROR;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_ERROR;	  return    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
143	[BUG]  [BUGGY]  result.add(new  ProvidedName(t,  desiredType,  methodName));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(t,  desiredType,  methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(t,  desiredType,  methodName));	  result.add(new    ProvidedName(t,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
144	[BUG]  [BUGGY]  return  DiagnosticType.NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  DiagnosticType.NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  DiagnosticType.NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
145	[BUG]  [BUGGY]  return  DiagnosticType.NON_STRING_PASSED_TO_SET_CSS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  DiagnosticType.NON_STRING_PASSED_TO_SET_CSS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  DiagnosticType.NON_STRING_PASSED_TO_SET_CSS_ERROR;	  return    desired;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
146	[BUG]  [BUGGY]  return  diagnostic  ==  desiredType?  TOO_MANY_ARGUMENTS_ERROR  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  desiredType?  TOO_MANY_ARGUMENTS_ERROR  :  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  desiredType?  TOO_MANY_ARGUMENTS_ERROR  :  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
147	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
148	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  INVALID_PROVIDE_ERROR  :  INVALID_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  INVALID_PROVIDE_ERROR  :  INVALID_ARGUMENT_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  INVALID_PROVIDE_ERROR  :  INVALID_ARGUMENT_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
149	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  INVALID_PROVIDE_ERROR  :  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  INVALID_PROVIDE_ERROR  :  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  INVALID_PROVIDE_ERROR  :  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
150	[BUG]  [BUGGY]  return  desired!=  null?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired!=  null?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired!=  null?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
151	[BUG]  [BUGGY]  return  desired  ==  null?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  ==  null?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  ==  null?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
152	[BUG]  [BUGGY]  return  desired!=  0?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired!=  0?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired!=  0?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
153	[BUG]  [BUGGY]  return  desired!=  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired!=  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired!=  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
154	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR));	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_PROVIDE_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
155	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  LATE_PROVIDE_ERROR));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  LATE_PROVIDE_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  LATE_PROVIDE_ERROR));	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_PROVIDE_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
156	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_PROVIDE_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
157	[BUG]  [BUGGY]  return  desiredType  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
158	[BUG]  [BUGGY]  return  desiredType  <=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  <=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  <=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
159	[BUG]  [BUGGY]  return  desiredType!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
160	[BUG]  [BUGGY]  return  desiredValue;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredValue;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredValue;	  return    result;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
161	[BUG]  [BUGGY]  return  diagnostic.getQualifiedName().equals(diagnostic.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.getQualifiedName().equals(diagnostic.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.getQualifiedName().equals(diagnostic.getQualifiedName()));	  return    diagnostic.equals(diagnostic.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
162	[BUG]  [BUGGY]  return  methodName.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  methodName.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  methodName.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  return    diagnostic.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
163	[BUG]  [BUGGY]  return  arg.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  arg.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  arg.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  return    diagnostic.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
164	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType,  methodName,  moduleGraph));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType,  methodName,  moduleGraph));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType,  methodName,  moduleGraph));	  result.add(new    ProvidedName(diagnostic,    desiredType,    methodName));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
165	[BUG]  [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType,  diagnosis));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType,  diagnosis));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(methodName,  desiredType,  diagnosis));	  result.add(new    ProvidedName(diagnostic,    desiredType,    methodName));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
166	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg.getFirstChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg.getFirstChild());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  arg.getFirstChild());	  result.add(t.makeError(methodName,    desiredType),    arg.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
167	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  methodName.getLastChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  methodName.getLastChild());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  methodName.getLastChild());	  result.add(t.makeError(methodName,    desiredType),    arg.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
168	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnostic.getLastChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnostic.getLastChild());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  diagnostic.getLastChild());	  result.add(t.makeError(methodName,    desiredType),    arg.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
169	[BUG]  [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
170	[BUG]  [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
171	[BUG]  [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
172	[BUG]  [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType!=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
173	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    INVALID_PROVIDE_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
174	[BUG]  [BUGGY]  return(diagnostic!=  null)?  null  :  diagnostic;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(diagnostic!=  null)?  null  :  diagnostic;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(diagnostic!=  null)?  null  :  diagnostic;	  return    this;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
175	[BUG]  [BUGGY]  if(requireNode)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(requireNode)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(requireNode)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  false;  }	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    desiredType,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
176	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  methodName,  desiredType));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  methodName,  desiredType));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  methodName,  desiredType));	  result.add(new    ProvidedName(diagnostic,    desiredType,    methodName));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
177	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType,  diagnostic));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType,  diagnostic));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType,  diagnostic));	  result.add(new    ProvidedName(diagnostic,    desiredType,    methodName));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
178	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredNode,  arg,  desiredType);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  NodeTraversal.traverse(compiler,  desiredNode,  arg,  desiredType);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	NodeTraversal.traverse(compiler,  desiredNode,  arg,  desiredType);	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
179	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg,  desiredNode);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg,  desiredNode);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	NodeTraversal.traverse(compiler,  desiredType,  arg,  desiredNode);	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
180	[BUG]  [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
181	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
182	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  :  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
183	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  INVALID_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  INVALID_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  INVALID_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
184	[BUG]  [BUGGY]  result  =  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result  =  LATE_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result  =  LATE_PROVIDE_ERROR;	  result    =    XMODULE_REQUIRE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
185	[BUG]  [BUGGY]  result  =  XMODULE_REQUIRE_ERROR,  desiredType;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result  =  XMODULE_REQUIRE_ERROR,  desiredType;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result  =  XMODULE_REQUIRE_ERROR,  desiredType;	  result    =    XMODULE_REQUIRE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
186	[BUG]  [BUGGY]  result  =  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result  =  MISSING_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result  =  MISSING_PROVIDE_ERROR;	  result    =    XMODULE_REQUIRE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
187	[BUG]  [BUGGY]  return  desiredType.equals(diagnostic.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType.equals(diagnostic.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType.equals(diagnostic.getQualifiedName()));	  return    diagnostic.equals(diagnostic.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
188	[BUG]  [BUGGY]  return  requiredLevel.equals(diagnostic.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  requiredLevel.equals(diagnostic.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  requiredLevel.equals(diagnostic.getQualifiedName()));	  return    diagnostic.equals(diagnostic.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
189	[BUG]  [BUGGY]  return  result.equals(diagnostic.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  result.equals(diagnostic.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  result.equals(diagnostic.getQualifiedName()));	  return    diagnostic.equals(diagnostic.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
190	[BUG]  [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic));	  return    diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
191	[BUG]  [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(methodName));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(methodName));	  return    diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
192	[BUG]  [BUGGY]  return  DiagnosticType.NULL_ARGUMENT;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  DiagnosticType.NULL_ARGUMENT;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  DiagnosticType.NULL_ARGUMENT;	  return    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
193	[BUG]  [BUGGY]  return  DiagnosticType.NO_TYPE;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  DiagnosticType.NO_TYPE;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  DiagnosticType.NO_TYPE;	  return    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
194	[BUG]  [BUGGY]  return  DiagnosticType.ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  DiagnosticType.ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  DiagnosticType.ERROR;	  return    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
195	[BUG]  [BUGGY]  parent  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }	  if(diagnostic    ==    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
196	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  return  MISSING_PROVIDE_ERROR;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(diagnostic!=  null)  {  return  MISSING_PROVIDE_ERROR;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic!=  null)  {  return  MISSING_PROVIDE_ERROR;  }	  if(diagnostic    ==    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
197	[BUG]  [BUGGY]  return  desiredType  ==  ToO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  ToO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  ToO_MANY_ARGUMENTS_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
198	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  desiredType  :  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  desiredType  :  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  desiredType  :  TOO_MANY_ARGUMENTS_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
199	[BUG]  [BUGGY]  return  DiagnosticType.NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  DiagnosticType.NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  DiagnosticType.NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  return    desired;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
200	[BUG]  [BUGGY]  return  desiredType.equals(methodName.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType.equals(methodName.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType.equals(methodName.getQualifiedName()));	  return    diagnostic.equals(methodName.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
201	[BUG]  [BUGGY]  return  requiredLevel.equals(methodName.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  requiredLevel.equals(methodName.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  requiredLevel.equals(methodName.getQualifiedName()));	  return    diagnostic.equals(methodName.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
202	[BUG]  [BUGGY]  return  diagnostic.equals(methodName.getQualifiedName())&&!diagnostic.isConstructor();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.equals(methodName.getQualifiedName())&&!diagnostic.isConstructor();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(methodName.getQualifiedName())&&!diagnostic.isConstructor();	  return    diagnostic.equals(methodName.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
203	[BUG]  [BUGGY]  return  arg.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  arg.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  arg.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  return    diagnostic.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
204	[BUG]  [BUGGY]  parent!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent!=  null)  {  return  true;  }	  parent    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
205	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnosis.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnosis.getQualifiedName());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  diagnosis.getQualifiedName());	  result.add(t.makeError(methodName,    desiredType),    arg.getQualifiedName());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
206	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  preferredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  preferredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR?  preferredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR?    desiredType    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
207	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
208	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  MISSING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  MISSING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  MISSING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
209	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  BASE_CLASS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  BASE_CLASS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  BASE_CLASS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
210	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_PROVIDE_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||(arg.getNext()!=    null    &&    arg.getNext().equals(methodName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
211	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  result.add(t.makeError(methodName,    desiredType),    DEPRECATED_PROVIDE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
212	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  DEPRECATED_PROVIDE_ERROR,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  DEPRECATED_PROVIDE_ERROR,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  DEPRECATED_PROVIDE_ERROR,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  result.add(t.makeError(methodName,    desiredType),    DEPRECATED_PROVIDE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
213	[BUG]  [BUGGY]  return  diagnostic  ==  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  LATE_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  LATE_PROVIDE_ERROR;	  return    desiredType    ==    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
214	[BUG]  [BUGGY]  return  desired  <=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  <=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  <=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
215	[BUG]  [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  >  NON_STRING_PASSED_TO_SET_CS_NAME_MAPPING_ERROR;	  return    desired    ==    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
216	[BUG]  [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  >  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  >  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;	  return    desired    ==    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
217	[BUG]  [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  desired);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  desired);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(methodName,  desiredType),  desired);	  result.add(new    ProvidedName(diagnostic,    desiredType),    methodName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
218	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  requiredLevel);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  requiredLevel);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  requiredLevel);	  result.add(new    ProvidedName(diagnostic,    desiredType),    methodName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
219	[BUG]  [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
220	[BUG]  [BUGGY]  return  desired!=  0?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired!=  0?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired!=  0?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
221	[BUG]  [BUGGY]  return  desired!=  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired!=  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  LATE_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired!=  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  LATE_PROVIDE_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
222	[BUG]  [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    >    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
223	[BUG]  [BUGGY]  return  desired!=  0?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired!=  0?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired!=  0?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
224	[BUG]  [BUGGY]  return  desired  ==  0?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  ==  0?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  ==  0?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
225	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP));	  moduleGraph.report(t.makeError(methodName,    desiredType,    MISSING_PROVIDE_ERROR));    return    true;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
226	[BUG]  [BUGGY]  result.add(new  ProvidedName(arg,  diagnostic));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(arg,  diagnostic));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(arg,  diagnostic));	  result.add(new    ProvidedName(arg,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
227	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  desiredType  ==  Too_MANY_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  desiredType  ==  Too_MANY_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  desiredType  ==  Too_MANY_PROVIDE_ERROR;	  return    desiredType    ==    INVALID_ARGUMENTS_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
228	[BUG]  [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  diagnostic;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  diagnostic;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  diagnostic;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
229	[BUG]  [BUGGY]  parent!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
230	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_PROVIDE_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
231	[BUG]  [BUGGY]  return(node  ==  null)?  desiredNode  :  node.getLastChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(node  ==  null)?  desiredNode  :  node.getLastChild();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(node  ==  null)?  desiredNode  :  node.getLastChild();	  return(requireNode    ==    null)?    desiredNode    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
232	[BUG]  [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.getQualifiedName());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.getQualifiedName());	  return    diagnostic.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
233	[BUG]  [BUGGY]  if(diagnostic  ==  null)  {  return  INVALID_ARGUMENT_ERROR;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(diagnostic  ==  null)  {  return  INVALID_ARGUMENT_ERROR;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic  ==  null)  {  return  INVALID_ARGUMENT_ERROR;  }	  if(diagnostic    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
234	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  return  INVALID_ARGUMENT_ERROR;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(diagnostic!=  null)  {  return  INVALID_ARGUMENT_ERROR;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic!=  null)  {  return  INVALID_ARGUMENT_ERROR;  }	  if(diagnostic    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
235	[BUG]  [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  ToO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  ToO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  ToO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    Too_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
236	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  BASE_CLASS_ERROR));  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  BASE_CLASS_ERROR));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  BASE_CLASS_ERROR));  return  false;	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_ARGUMENT_ERROR));    return    false;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
237	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	NodeTraversal.traverse(compiler,  desiredType,  arg);	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    else    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
238	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  t);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	NodeTraversal.traverse(compiler,  desiredType,  t);	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    else    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
239	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg,  desiredType);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  NodeTraversal.traverse(compiler,  desiredType,  arg,  desiredType);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	NodeTraversal.traverse(compiler,  desiredType,  arg,  desiredType);	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    else    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
240	[BUG]  [BUGGY]  return  desiredType  ==  LATE_PROVIDE_ERROR  ||  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  LATE_PROVIDE_ERROR  ||  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  LATE_PROVIDE_ERROR  ||  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
241	[BUG]  [BUGGY]  return  desiredType  ==  LATE_PROVIDE_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  LATE_PROVIDE_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  LATE_PROVIDE_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    INVALID_PROVIDE_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
242	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  MISSING_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  MISSING_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  MISSING_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
243	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  BASE_CLASS_ERROR  :  INVALID_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  BASE_CLASS_ERROR  :  INVALID_ARGUMENT_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  BASE_CLASS_ERROR  :  INVALID_ARGUMENT_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
244	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  LATE_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  LATE_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  LATE_PROVIDE_ERROR  :  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    INVALID_ARGUMENT_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
245	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  methodName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  methodName);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  methodName);	  result.add(t.makeError(methodName,    desiredType),    diagnostic);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
246	[BUG]  [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  t);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType),  t);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(methodName,  desiredType),  t);	  result.add(new    ProvidedName(methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
247	[BUG]  [BUGGY]  parent  ==  expr  ||(expr!=  null  &&  expr.getType()  ==  Token.EXPR_RESULT))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  expr  ||(expr!=  null  &&  expr.getType()  ==  Token.EXPR_RESULT))  {  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  expr  ||(expr!=  null  &&  expr.getType()  ==  Token.EXPR_RESULT))  {  return  true;  }	  if(expr!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
248	[BUG]  [BUGGY]  parent  ==  expr  ||(expr!=  null  &&  expr.hasChildren()))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  expr  ||(expr!=  null  &&  expr.hasChildren()))  {  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  expr  ||(expr!=  null  &&  expr.hasChildren()))  {  return  true;  }	  if(expr!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
249	[BUG]  [BUGGY]  return  desiredType!=  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType!=  LATE_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType!=  LATE_PROVIDE_ERROR;	  return    desiredType!=    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
250	[BUG]  [BUGGY]  return  methodName.getQualifiedName().equals(diagnostic.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  methodName.getQualifiedName().equals(diagnostic.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  methodName.getQualifiedName().equals(diagnostic.getQualifiedName()));	  return    diagnostic.equals(methodName.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
251	[BUG]  [BUGGY]  return  methodName.equals(methodName.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  methodName.equals(methodName.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  methodName.equals(methodName.getQualifiedName()));	  return    diagnostic.equals(methodName.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
252	[BUG]  [BUGGY]  return  diagnostic.equals(methodName.getQualifiedName())&&  methodName.getFirstChild()!=  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.equals(methodName.getQualifiedName())&&  methodName.getFirstChild()!=  null;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(methodName.getQualifiedName())&&  methodName.getFirstChild()!=  null;	  return    diagnostic.equals(methodName.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
253	[BUG]  [BUGGY]  if(expr!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  arg,  arg.getQualifiedName()));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(expr!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  arg,  arg.getQualifiedName()));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(expr!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  arg,  arg.getQualifiedName()));  return  false;  }	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
254	[BUG]  [BUGGY]  if(expr!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  arg,  methodName.getQualifiedName()));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(expr!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  arg,  methodName.getQualifiedName()));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(expr!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  arg,  methodName.getQualifiedName()));  return  false;  }	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
255	[BUG]  [BUGGY]  if(expr!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(expr!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(expr!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(  t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  false;  }	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
256	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    INVALID_ARGUMENTS_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
257	[BUG]  [BUGGY]  return  desired  ==  arg.getNext();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  ==  arg.getNext();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  ==  arg.getNext();	  return    result;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
258	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  desiredType,  rewriteNewDateGoogNow);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  desiredType,  rewriteNewDateGoogNow);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	NodeTraversal.traverse(compiler,  arg,  desiredType,  rewriteNewDateGoogNow);	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    desiredType,    arg.getQualifiedName()));    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
259	[BUG]  [BUGGY]  if(expr!=  null  &&  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(expr!=  null  &&  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(expr!=  null  &&  expr.getType()  ==  Token.EXPR_RESULT)  {  return  false;  }	  if(expr!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
260	[BUG]  [BUGGY]  if(expr!=  null  &&  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(expr!=  null  &&  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(expr!=  null  &&  expr.getType()  ==  Token.REQUIRE)  {  return  false;  }	  if(expr!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
261	[BUG]  [BUGGY]  return  desiredType  ==  LATE_PROVIDE_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  LATE_PROVIDE_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  LATE_PROVIDE_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
262	[BUG]  [BUGGY]  return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP  ||  desiredType  ==  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP  ||  desiredType  ==  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPP  ||  desiredType  ==  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
263	[BUG]  [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  diagnostic  >  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  diagnostic  >  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  diagnostic  >  TOO_MANY_ARGUMENTS_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    >    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
264	[BUG]  [BUGGY]  return  diagnostic!=  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic!=  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic!=  TOO_MANY_ARGUMENTS_ERROR  &&  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    >    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
265	[BUG]  [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType,  desiredType));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType,  desiredType));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(methodName,  desiredType,  desiredType));	  result.add(new    ProvidedName(diagnostic,    desiredType,    methodName));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
266	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType,  methodName,  requiredLevel));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType,  methodName,  requiredLevel));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType,  methodName,  requiredLevel));	  result.add(new    ProvidedName(diagnostic,    desiredType,    methodName));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
267	[BUG]  [BUGGY]  return  t.equals(diagnostic.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.equals(diagnostic.getQualifiedName()));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  t.equals(diagnostic.getQualifiedName()));	  return    diagnostic.equals(diagnostic.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
268	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingDeclaration(t,  arg,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  aughtExceptionHandler.handleMissingDeclaration(t,  arg,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	aughtExceptionHandler.handleMissingDeclaration(t,  arg,  desiredType,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  if(diagnostic    ==    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
269	[BUG]  [BUGGY]  return  desired  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
270	[BUG]  [BUGGY]  return  desired  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  >=  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
271	[BUG]  [BUGGY]  return(diagnostic  ==  null)?  null  :  diagnostic.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(diagnostic  ==  null)?  null  :  diagnostic.getQualifiedName();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(diagnostic  ==  null)?  null  :  diagnostic.getQualifiedName();	  return    this;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
272	[BUG]  [BUGGY]  return(diagnostic  ==  null)?  null  :  diagnostic.require();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(diagnostic  ==  null)?  null  :  diagnostic.require();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(diagnostic  ==  null)?  null  :  diagnostic.require();	  return    this;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
273	[BUG]  [BUGGY]  return(diagnostic  ==  null)?  null  :  diagnostic;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(diagnostic  ==  null)?  null  :  diagnostic;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(diagnostic  ==  null)?  null  :  diagnostic;	  return    this;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
274	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_PROVIDE_ERROR));  return  true;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_PROVIDE_ERROR));  return  true;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_PROVIDE_ERROR));  return  true;	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_ARGUMENT_ERROR));    return    true;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
275	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_PROVIDE_ERROR));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_PROVIDE_ERROR));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_PROVIDE_ERROR));	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_PROVIDE_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
276	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_PROVIDE_ERROR));  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_PROVIDE_ERROR));  return  false;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  DUPLICATE_PROVIDE_ERROR));  return  false;	  moduleGraph.report(t.makeError(methodName,    desiredType,    INVALID_ARGUMENT_ERROR));    return    false;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
277	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.VAR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null  &&  parent.getType()  ==  Token.VAR;	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    else    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
278	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR;	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    else    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
279	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null  &&  parent.getType()  ==  Token.NAME;	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    else    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
280	[BUG]  [BUGGY]  return  desiredType  ==  XMODULE_REQUIRE_ERROR?  diagnostic  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  XMODULE_REQUIRE_ERROR?  diagnostic  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  XMODULE_REQUIRE_ERROR?  diagnostic  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
281	[BUG]  [BUGGY]  return  desiredType  <=  XMODULE_REQUIRE_ERROR  ||  desiredType  >  XMODULE_REQUIRE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  <=  XMODULE_REQUIRE_ERROR  ||  desiredType  >  XMODULE_REQUIRE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  <=  XMODULE_REQUIRE_ERROR  ||  desiredType  >  XMODULE_REQUIRE_ERROR;	  return    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
282	[BUG]  [BUGGY]  return  desiredType  ==  XMODULE_REQUIRE_ERROR?  arg.getNext()  :  DEFAULT_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  XMODULE_REQUIRE_ERROR?  arg.getNext()  :  DEFAULT_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  XMODULE_REQUIRE_ERROR?  arg.getNext()  :  DEFAULT_PROVIDE_ERROR;	  return    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
283	[BUG]  [BUGGY]  return(requireNode  ==  null)?  null  :  requiredNode.cloneTree();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(requireNode  ==  null)?  null  :  requiredNode.cloneTree();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(requireNode  ==  null)?  null  :  requiredNode.cloneTree();	  return(requireNode    ==    null)?    null    :    requiredNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
284	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic!=  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic!=  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic!=  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    diagnostic    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
285	[BUG]  [BUGGY]  if(diagnostic  ==  null  ||  diagnostic.isQualifiedName())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(diagnostic  ==  null  ||  diagnostic.isQualifiedName())  {  return  true;  }  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic  ==  null  ||  diagnostic.isQualifiedName())  {  return  true;  }	  if(diagnostic    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
286	[BUG]  [BUGGY]  parent.replaceChild(arg,  new  ProvidedName(null,  desiredType));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent.replaceChild(arg,  new  ProvidedName(null,  desiredType));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent.replaceChild(arg,  new  ProvidedName(null,  desiredType));	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
287	[BUG]  [BUGGY]  AssertionFailedError  t  =  arg.getNext();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  arg.getNext();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	AssertionFailedError  t  =  arg.getNext();	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
288	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  desiredType);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  desiredType);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  desiredType);	  if(diagnostic!=    null)    {    for(Node    arg    :    arg.getNext())    {    compiler.report(t.makeError(methodName,    arg,    arg.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
289	[BUG]  [BUGGY]  return  diagnostic!=  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic!=  LATE_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic!=  LATE_PROVIDE_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
290	[BUG]  [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    diagnostic    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
291	[BUG]  [BUGGY]  return(requireNode  ==  null)?  desiredNode  :  arg.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return(requireNode  ==  null)?  desiredNode  :  arg.getFirstChild();  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(requireNode  ==  null)?  desiredNode  :  arg.getFirstChild();	  return(requireNode    ==    null)?    desiredNode    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
292	[BUG]  [BUGGY]  return  diagnostic.equals(methodName));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.equals(methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(methodName));	  return    diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
293	[BUG]  [BUGGY]  return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR)&&  methodName.getQualifiedName().equals(methodName.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR)&&  methodName.getQualifiedName().equals(methodName.getQualifiedName());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR)&&  methodName.getQualifiedName().equals(methodName.getQualifiedName());	  return    diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
294	[BUG]  [BUGGY]  result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  LATE_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result  =  desiredType?  XMODULE_REQUIRE_ERROR  :  LATE_PROVIDE_ERROR;	  result    =    XMODULE_REQUIRE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
295	[BUG]  [BUGGY]  return  LATE_PROVIDE_ERROR  ==  desiredType;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  LATE_PROVIDE_ERROR  ==  desiredType;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  LATE_PROVIDE_ERROR  ==  desiredType;	  return    desiredType    ==    INVALID_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
296	[BUG]  [BUGGY]  result.add(new  ProvidedName(null,  methodName,  desiredType),  arg.getNext());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(null,  methodName,  desiredType),  arg.getNext());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(null,  methodName,  desiredType),  arg.getNext());	  result.add(new    ProvidedName(null,    methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
297	[BUG]  [BUGGY]  return  desired  ==  0?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  ==  0?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  ==  0?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
298	[BUG]  [BUGGY]  return  desired  ==  0?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  ==  0?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  ==  0?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    MISSING_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
299	[BUG]  [BUGGY]  return  desiredType  ==  LATE_PROVIDE_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  LATE_PROVIDE_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  LATE_PROVIDE_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    &&    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
300	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  arg.getNext());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  arg.getNext());  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  arg.getNext());	  result.add(new    ProvidedName(diagnostic,    desiredType),    methodName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
301	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  MISSING_PROVIDE_ERROR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  MISSING_PROVIDE_ERROR);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType),  methodName,  MISSING_PROVIDE_ERROR);	  result.add(new    ProvidedName(diagnostic,    desiredType),    methodName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
302	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  LATE_PROVIDE_ERROR);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  LATE_PROVIDE_ERROR);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  LATE_PROVIDE_ERROR);	  result.add(t.makeError(methodName,    desiredType),    DEPRECATED_PROVIDE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
303	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  NON_STRING_PROVIDE_ERROR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  desiredType),  NON_STRING_PROVIDE_ERROR);  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  NON_STRING_PROVIDE_ERROR);	  result.add(t.makeError(methodName,    desiredType),    DEPRECATED_PROVIDE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
304	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  LATE_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  LATE_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  LATE_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
305	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  MISSING_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
306	[BUG]  [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  desiredType  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  desiredType  +  1;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  desiredType  +  1;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,    desiredType;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
307	[BUG]  [BUGGY]  result.add(new  ProvidedName(t,  methodName));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(new  ProvidedName(t,  methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(t,  methodName));	  result.add(new    ProvidedName(t,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
308	[BUG]  [BUGGY]  parent  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
309	[BUG]  [BUGGY]  parent  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  INVALID_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  INVALID_PROVIDE_ERROR;	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
310	[BUG]  [BUGGY]  parent  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DEFAULT_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DEFAULT_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DEFAULT_PROVIDE_ERROR;	  if(diagnostic!=    null)    {    return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
311	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_ARGUMENT_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  INVALID_ARGUMENT_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_ARGUMENT_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||(arg.getNext()!=    null    &&    arg.getNext().equals(methodName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
312	[BUG]  [BUGGY]  return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  ==  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  ==  LATE_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  desiredType  ==  LATE_PROVIDE_ERROR;	  return    desiredType    ==    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
313	[BUG]  [BUGGY]  return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR?  LATE_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR?  LATE_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR?  LATE_PROVIDE_ERROR  :  MISSING_PROVIDE_ERROR;	  return    desiredType    ==    LATE_PROVIDE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
314	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  null;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  null;	  moduleGraph.report(t.makeError(methodName,    desiredType,    methodName.getQualifiedName()));    return    true;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
315	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  LATE_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desiredType  ==  diagnostic?  LATE_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  LATE_PROVIDE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;	  return    desiredType    ==    diagnostic?    TOO_MANY_ARGUMENTS_ERROR    :    NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
316	[BUG]  [BUGGY]  return  desired  >=  0?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  desired  >=  0?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  >=  0?  DUPLICATE_NAMESPACE_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desired    ==    null?    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    :    DUPLICATE_NAMESPACE_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
