bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  &&  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_ARGUMENTS_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  INVALID_ARGUMENTS_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_ARGUMENTS_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  INVALID_ARGUMENT_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  INVALID_ARGUMENT_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  INVALID_ARGUMENT_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  diagnostic?  TOO_MANY_ARGUMENTS_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  return  this;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  this;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  this;	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic!=  null)  {  return  null;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic!=  null)  {  return  null;  }	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  result  =  XMODULE_REQUIRE_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result  =  XMODULE_REQUIRE_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result  =  XMODULE_REQUIRE_ERROR;	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  if(diagnostic  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic  ==  null)  {  return  null;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic  ==  null)  {  return  null;  }	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  result.add(new  ProvidedName(null,  methodName,  desiredType));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(new  ProvidedName(null,  methodName,  desiredType));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(null,  methodName,  desiredType));	  result.add(new    ProvidedName(null,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  result.add(new  ProvidedName(arg,  desiredType));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(new  ProvidedName(arg,  desiredType));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(arg,  desiredType));	  result.add(new    ProvidedName(null,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(new  ProvidedName(methodName,  desiredType));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(methodName,  desiredType));	  result.add(new    ProvidedName(null,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  result.add(new  ProvidedName(t,  desiredType));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(new  ProvidedName(t,  desiredType));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(t,  desiredType));	  result.add(new    ProvidedName(null,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  methodName);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType),  methodName);	  result.add(new    ProvidedName(diagnostic,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType,  methodName));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType,  methodName));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType,  methodName));	  result.add(new    ProvidedName(diagnostic,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg.getNext());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg.getNext());  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  arg.getNext());	  result.add(t.makeError(methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnostic);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(t.makeError(methodName,  desiredType),  diagnostic);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  diagnostic);	  result.add(t.makeError(methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg.getQualifiedName());  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  arg.getQualifiedName());	  result.add(t.makeError(methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  if(diagnostic  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic  ==  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  return  desiredType;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  else  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  else  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic!=  null)  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }  else  {  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  }	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic!=  null)  {  return  false;  }	  return    false;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  if(diagnostic  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic  ==  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic  ==  null)  {  return  false;  }	  return    false;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  return  diagnostic.equals(diagnostic.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  diagnostic.equals(diagnostic.getQualifiedName()));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(diagnostic.getQualifiedName()));	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  return  diagnostic.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  diagnostic.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.getQualifiedName().equals(non_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  return  diagnostic.equals(methodName.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  diagnostic.equals(methodName.getQualifiedName()));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.equals(methodName.getQualifiedName()));	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  if(diagnostic  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic  ==  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic  ==  null)  {  return  true;  }	  if(diagnostic!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  false;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  false;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  false;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_ARGUMENT_ERROR));  return  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_ARGUMENT_ERROR));  return  false;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_ARGUMENT_ERROR));  return  false;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_ARGUMENT_ERROR));  return  true;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_ARGUMENT_ERROR));  return  true;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_ARGUMENT_ERROR));  return  true;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  true;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  true;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  methodName.getQualifiedName()));  return  true;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  arg);	  result.add(t.makeError(methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  DEPRECATED_PROVIDE_ERROR);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(t.makeError(methodName,  desiredType),  DEPRECATED_PROVIDE_ERROR);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  DEPRECATED_PROVIDE_ERROR);	  result.add(t.makeError(methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  result.add(new  ProvidedName(null,  diagnostic,  desiredType));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(new  ProvidedName(null,  diagnostic,  desiredType));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(null,  diagnostic,  desiredType));	  result.add(new    ProvidedName(null,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR?  desiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR?  desiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR?  desiredType  :  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic  ==  TOO_MANY_ARGUMENTS_ERROR  ||  diagnostic  >  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  return  desired  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desired  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  DUPLICATE_NAMESPACE_ERROR;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
43	[BUG]  [BUGGY]  return  desired  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desired  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  ==  null?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  MISSING_PROVIDE_ERROR;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  return  desired  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desired  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired  ==  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
45	[BUG]  [BUGGY]  return  desired;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desired;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desired;	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  return  result;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  result;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  result;	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  INVALID_PROVIDE_ERROR  ||  desiredType  ==  Too_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  INVALID_PROVIDE_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(t.makeError(methodName,  arg,  arg.getQualifiedName()));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(t.makeError(methodName,  arg,  arg.getQualifiedName()));  return  false;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(t.makeError(methodName,  arg,  arg.getQualifiedName()));  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  false;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(t.makeError(methodName,  desiredType,  arg.getQualifiedName()));  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(t.makeError(methodName,  arg,  arg.getQualifiedName()));  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(diagnostic!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(t.makeError(methodName,  arg,  arg.getQualifiedName()));  return  true;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(diagnostic!=  null)  {  for(Node  arg  :  arg.getNext())  {  compiler.report(t.makeError(methodName,  arg,  arg.getQualifiedName()));  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  arg.getNext());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(new  ProvidedName(diagnostic,  desiredType),  arg.getNext());  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(diagnostic,  desiredType),  arg.getNext());	  result.add(new    ProvidedName(diagnostic,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  Too_MANY_ARGUMENTS_ERROR  ||  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR    ||    desiredType    ==    Too_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  if(expr!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(expr!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(expr!=  null)  {  return  false;  }	  return    false;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  if(expr!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  if(expr!=  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	if(expr!=  null)  {  return  true;  }	  return    false;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  return  diagnostic.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  diagnostic.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  diagnostic.getQualifiedName().equals(NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR.equals(diagnostic.getQualifiedName()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  result.add(new  ProvidedName(null,  desiredType,  diagnostic));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(new  ProvidedName(null,  desiredType,  diagnostic));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(new  ProvidedName(null,  desiredType,  diagnostic));	  result.add(new    ProvidedName(null,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
58	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR));  return  true;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR));  return  true;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR));  return  true;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR));	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  MISSING_PROVIDE_ERROR));  return  true;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  MISSING_PROVIDE_ERROR));  return  true;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  MISSING_PROVIDE_ERROR));  return  true;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
61	[BUG]  [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR));  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR));  return  false;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	moduleGraph.report(t.makeError(methodName,  desiredType,  INVALID_PROVIDE_ERROR));  return  false;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  return  desiredType!=  TOO_MANY_ARGUMENTS_ERROR;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType!=  TOO_MANY_ARGUMENTS_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType!=  TOO_MANY_ARGUMENTS_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
63	[BUG]  [BUGGY]  return  desiredType  ==  LATE_PROVIDE_ERROR;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  LATE_PROVIDE_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  LATE_PROVIDE_ERROR;	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  ==  TOO_MANY_ARGUMENTS_ERROR  ||(arg.getNext()!=  null  &&  arg.getNext().equals(methodName));	  return    desiredType    ==    TOO_MANY_ARGUMENTS_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  desiredType;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  desiredType;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  desiredType;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
66	[BUG]  [BUGGY]  return  desiredType  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return  desiredType  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return  desiredType  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  return    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
67	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg.getLastChild());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  result.add(t.makeError(methodName,  desiredType),  arg.getLastChild());  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	result.add(t.makeError(methodName,  desiredType),  arg.getLastChild());	  result.add(t.makeError(methodName,    desiredType));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
68	[BUG]  [BUGGY]  return(requireNode  ==  null)?  null  :  requiredNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return(requireNode  ==  null)?  null  :  requiredNode.getFirstChild();  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(requireNode  ==  null)?  null  :  requiredNode.getFirstChild();	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
69	[BUG]  [BUGGY]  return(requireNode  ==  null)?  desiredNode  :  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  return(requireNode  ==  null)?  desiredNode  :  node.getFirstChild();  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	return(requireNode  ==  null)?  desiredNode  :  node.getFirstChild();	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  parent  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  }  if  (diagnostic  !=  null)  {  compiler.report(  t.makeError(methodName,  diagnostic,  methodName.getQualifiedName()));  return  false;  }    [BUGGY]  parent  ==  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyArgument  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  int  desiredType  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  JSModuleGraph  moduleGraph  int  desiredType  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  cssNames  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1336306209562122	624	624	1	replace	parent  ==  null)  {  return  true;  }	  if(diagnostic!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
