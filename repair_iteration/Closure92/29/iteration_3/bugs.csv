bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||  NodeUtil.isGetProp(part))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||  NodeUtil.isGetProp(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)||  NodeUtil.isGetProp(part))  {	  if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.isGetProp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isGetProp(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isGetProp(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)&&!NodeUtil.isGetProp(part))  {	  if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.isGetProp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  true));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  true));  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  true));	  NodeTraversal.traverse(compiler,    part,    new    ProvidedName(null,    true));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProvidedName(null,  false));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProvidedName(null,  false));  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  new  ProvidedName(null,  false));	  NodeTraversal.traverse(compiler,    part,    new    ProvidedName(null,    true));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  component,  new  ProvidedName(null,  false));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  component,  new  ProvidedName(null,  false));  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  component,  new  ProvidedName(null,  false));	  NodeTraversal.traverse(compiler,    part,    new    ProvidedName(null,    true));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProvidedName(part,  false));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProvidedName(part,  false));  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  new  ProvidedName(part,  false));	  NodeTraversal.traverse(compiler,    part,    new    ProvidedName(null,    true));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
7	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(methodName)||!methodName.equals(part))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(methodName)||!methodName.equals(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(methodName)||!methodName.equals(part))  {	  if(!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(arg.getString()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(arg.getString()))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(arg.getString()))  {	  if(!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isVarDeclaration(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isVarDeclaration(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)&&!NodeUtil.isVarDeclaration(part))  {	  if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.isVarDeclaration(part))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  this);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  methodName,  this);	  NodeTraversal.traverse(compiler,    part,    this);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
11	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  this,  methodName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  this,  methodName);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  this,  methodName);	  NodeTraversal.traverse(compiler,    part,    this);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
12	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  error);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  error);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  error);	  NodeTraversal.traverse(compiler,    part,    this);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  false);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  false);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  false);	  NodeTraversal.traverse(compiler,    part,    this);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProcessClosurePrimitives());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProcessClosurePrimitives());  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProcessClosurePrimitives());	  NodeTraversal.traverse(compiler,    part,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProvidedName());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProvidedName());  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  new  ProvidedName());	  NodeTraversal.traverse(compiler,    part,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProcessClosurePrimitives(),  methodName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProcessClosurePrimitives(),  methodName);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  new  ProcessClosurePrimitives(),  methodName);	  NodeTraversal.traverse(compiler,    part,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
17	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isFunctionDeclaration(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isFunctionDeclaration(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)&&!NodeUtil.isFunctionDeclaration(part))  {	  if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.isFunctionDeclaration(part))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  component,  this);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  component,  this);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  component,  this);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
19	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isAssignmentOp(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isAssignmentOp(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)&&!NodeUtil.isAssignmentOp(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isAssignmentOp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
20	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isValidPropertyName(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isValidPropertyName(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)&&!NodeUtil.isValidPropertyName(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isValidPropertyName(part))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  if(!NodeUtil.isFunction(part)||!NodeUtil.isValidPropertyName(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isFunction(part)||!NodeUtil.isValidPropertyName(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isFunction(part)||!NodeUtil.isValidPropertyName(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isValidPropertyName(part))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||!methodName.equals(arg.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||!methodName.equals(arg.getString()))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)||!methodName.equals(arg.getString()))  {	  if(!NodeUtil.isValidPropertyName(part)||!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||!methodName.equals(arg))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||!methodName.equals(arg))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)||!methodName.equals(arg))  {	  if(!NodeUtil.isValidPropertyName(part)||!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  if(NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(part))  {	  if(NodeUtil.isValidPropertyName(part)&&!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
25	[BUG]  [BUGGY]  if(NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg.getString()))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg.getString()))  {	  if(NodeUtil.isValidPropertyName(part)&&!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
26	[BUG]  [BUGGY]  if(NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg))  {	  if(NodeUtil.isValidPropertyName(part)&&!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
27	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(part)&&!NodeUtil.isExpressionNode(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isExpressionNode(part)&&!NodeUtil.isExpressionNode(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isExpressionNode(part)&&!NodeUtil.isExpressionNode(part))  {	  if(!NodeUtil.isName(part)&&!NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
28	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.mayHaveSideEffects(part))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.mayHaveSideEffects(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.mayHaveSideEffects(part))  {	  if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.mayHaveSideEffects(part))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
29	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.mayHaveSideEffects(arg))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.mayHaveSideEffects(arg))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.mayHaveSideEffects(arg))  {	  if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.mayHaveSideEffects(part))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
30	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||  NodeUtil.mayHaveSideEffects(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||  NodeUtil.mayHaveSideEffects(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)||  NodeUtil.mayHaveSideEffects(part))  {	  if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.mayHaveSideEffects(part))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
31	[BUG]  [BUGGY]  if(!NodeUtil.isVarDeclaration(part)||!NodeUtil.isVarDeclaration(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isVarDeclaration(part)||!NodeUtil.isVarDeclaration(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isVarDeclaration(part)||!NodeUtil.isVarDeclaration(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isVarDeclaration(part))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  JSModule  module  =  part.getModule();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  JSModule  module  =  part.getModule();  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	JSModule  module  =  part.getModule();	  JSModule    module    =    t.getModule();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
33	[BUG]  [BUGGY]  JSModule  module  =  component.getModule();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  JSModule  module  =  component.getModule();  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	JSModule  module  =  component.getModule();	  JSModule    module    =    t.getModule();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
34	[BUG]  [BUGGY]  if(NodeUtil.isValidPropertyName(part)||  methodName.equals(part))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(NodeUtil.isValidPropertyName(part)||  methodName.equals(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(NodeUtil.isValidPropertyName(part)||  methodName.equals(part))  {	  if(NodeUtil.isValidPropertyName(part)||!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
35	[BUG]  [BUGGY]  if(NodeUtil.isValidPropertyName(part)||!methodName.equals(arg.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(NodeUtil.isValidPropertyName(part)||!methodName.equals(arg.getString()))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(NodeUtil.isValidPropertyName(part)||!methodName.equals(arg.getString()))  {	  if(NodeUtil.isValidPropertyName(part)||!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
36	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(arg))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(arg))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(arg))  {	  if(!NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)&&  NodeUtil.isFunction(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)&&  NodeUtil.isFunction(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)&&  NodeUtil.isFunction(part))  {	  if(!NodeUtil.isName(part)||    NodeUtil.isFunction(part))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
38	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)||  NodeUtil.isExpressionNode(part))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)||  NodeUtil.isExpressionNode(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)||  NodeUtil.isExpressionNode(part))  {	  if(!NodeUtil.isName(part)||    NodeUtil.isFunction(part))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
39	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)||  NodeUtil.isAssignmentOp(part))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)||  NodeUtil.isAssignmentOp(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)||  NodeUtil.isAssignmentOp(part))  {	  if(!NodeUtil.isName(part)||    NodeUtil.isFunction(part))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
40	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(part)||!NodeUtil.isFunctionDeclaration(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isExpressionNode(part)||!NodeUtil.isFunctionDeclaration(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isExpressionNode(part)||!NodeUtil.isFunctionDeclaration(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isFunctionDeclaration(part))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
41	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(part)||!NodeUtil.isExpressionNode(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isExpressionNode(part)||!NodeUtil.isExpressionNode(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isExpressionNode(part)||!NodeUtil.isExpressionNode(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)&&  NodeUtil.isFunctionDeclaration(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)&&  NodeUtil.isFunctionDeclaration(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)&&  NodeUtil.isFunctionDeclaration(part))  {	  if(!NodeUtil.isName(part)&&    NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
43	[BUG]  [BUGGY]  if(NodeUtil.isName(part)||  NodeUtil.isExpressionNode(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(NodeUtil.isName(part)||  NodeUtil.isExpressionNode(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(NodeUtil.isName(part)||  NodeUtil.isExpressionNode(part))  {	  if(!NodeUtil.isName(part)&&    NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
44	[BUG]  [BUGGY]  if(part!=  null  ||!NodeUtil.isName(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(part!=  null  ||!NodeUtil.isName(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(part!=  null  ||!NodeUtil.isName(part))  {	  if(part!=    null    &&!NodeUtil.isName(part))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
45	[BUG]  [BUGGY]  if(part!=  null  &&!NodeUtil.isFunction(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(part!=  null  &&!NodeUtil.isFunction(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(part!=  null  &&!NodeUtil.isFunction(part))  {	  if(part!=    null    &&!NodeUtil.isName(part))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
46	[BUG]  [BUGGY]  if(part!=  null  &&!NodeUtil.isGetProp(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(part!=  null  &&!NodeUtil.isGetProp(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(part!=  null  &&!NodeUtil.isGetProp(part))  {	  if(part!=    null    &&!NodeUtil.isName(part))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
47	[BUG]  [BUGGY]  if(!NodeUtil.isGetProp(part)||!NodeUtil.isGetProp(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isGetProp(part)||!NodeUtil.isGetProp(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isGetProp(part)||!NodeUtil.isGetProp(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isGetProp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
48	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)||!NodeUtil.isProvide(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)||!NodeUtil.isProvide(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)||!NodeUtil.isProvide(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isGetProp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
49	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  part);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  part);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  methodName,  part);	  NodeTraversal.traverse(compiler,    t,    part);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
50	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  methodName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  methodName);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  methodName);	  NodeTraversal.traverse(compiler,    t,    part);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
51	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  arg);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  arg);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  arg);	  NodeTraversal.traverse(compiler,    t,    part);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
52	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  part,  methodName);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  part,  methodName);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  t,  part,  methodName);	  NodeTraversal.traverse(compiler,    t,    part);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  part,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  part,  this);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  methodName,  part,  this);	  NodeTraversal.traverse(compiler,    t,    part,    this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  this);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  this);	  NodeTraversal.traverse(compiler,    t,    part,    this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
55	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  this);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  this);	  NodeTraversal.traverse(compiler,    t,    part,    this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
56	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.isImmutableValue(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.isImmutableValue(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.isImmutableValue(part))  {	  if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.isImmutableValue(part))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
57	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.isLiteralValue(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.isLiteralValue(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.isLiteralValue(part))  {	  if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.isImmutableValue(part))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
58	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isFunctionDeclaration(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isFunctionDeclaration(part))  {	  if(!NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
59	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(part)&&  isExpr)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isExpressionNode(part)&&  isExpr)  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isExpressionNode(part)&&  isExpr)  {	  if(!NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
60	[BUG]  [BUGGY]  if(!NodeUtil.isGetProp(part)&&!methodName.equals(part))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isGetProp(part)&&!methodName.equals(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isGetProp(part)&&!methodName.equals(part))  {	  if(!NodeUtil.isGetProp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg.getString())||!methodName.equals(arg.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg.getString())||!methodName.equals(arg.getString()))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg.getString())||!methodName.equals(arg.getString()))  {	  if(!NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
62	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)||  NodeUtil.isGetProp(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)||  NodeUtil.isGetProp(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)||  NodeUtil.isGetProp(part))  {	  if(!NodeUtil.isName(part)||    NodeUtil.isFunction(part))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
63	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)||!NodeUtil.mayHaveSideEffects(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)||!NodeUtil.mayHaveSideEffects(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)||!NodeUtil.mayHaveSideEffects(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
64	[BUG]  [BUGGY]  if(NodeUtil.isName(part)||  NodeUtil.isGetProp(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(NodeUtil.isName(part)||  NodeUtil.isGetProp(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(NodeUtil.isName(part)||  NodeUtil.isGetProp(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isGetProp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
65	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.mayHaveSideEffects(part))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.mayHaveSideEffects(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)&&!NodeUtil.mayHaveSideEffects(part))  {	  if(!NodeUtil.isName(part)&&!NodeUtil.isFunction(part))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
66	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  INVALID_PROVIDE_ERROR);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  INVALID_PROVIDE_ERROR);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  INVALID_PROVIDE_ERROR);	  NodeTraversal.traverse(compiler,    t,    part);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  t);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  t);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  t);	  NodeTraversal.traverse(compiler,    t,    part);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  part,  INVALID_PROVIDE_ERROR);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  part,  INVALID_PROVIDE_ERROR);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  t,  part,  INVALID_PROVIDE_ERROR);	  NodeTraversal.traverse(compiler,    t,    part);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
69	[BUG]  [BUGGY]  if(part  ==  null  &&!NodeUtil.isName(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(part  ==  null  &&!NodeUtil.isName(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(part  ==  null  &&!NodeUtil.isName(part))  {	  if(part!=    null    &&!NodeUtil.isName(part))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
70	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)&&!methodName.startsWith(arg.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)&&!methodName.startsWith(arg.getString()))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)&&!methodName.startsWith(arg.getString()))  {	  if(!NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
71	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  new  ProcessClosurePrimitives());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  new  ProcessClosurePrimitives());  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  arg,  new  ProcessClosurePrimitives());	  NodeTraversal.traverse(compiler,    part,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
72	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProvidedNames());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProvidedNames());  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  new  ProvidedNames());	  NodeTraversal.traverse(compiler,    part,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
73	[BUG]  [BUGGY]  if(NodeUtil.isName(part)&&!NodeUtil.isValidPropertyName(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(NodeUtil.isName(part)&&!NodeUtil.isValidPropertyName(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(NodeUtil.isName(part)&&!NodeUtil.isValidPropertyName(part))  {	  if(!NodeUtil.isValidPropertyName(part)&&!NodeUtil.isValidPropertyName(part))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
74	[BUG]  [BUGGY]  if(NodeUtil.isValidPropertyName(part)||!methodName.equals(arg))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(NodeUtil.isValidPropertyName(part)||!methodName.equals(arg))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(NodeUtil.isValidPropertyName(part)||!methodName.equals(arg))  {	  if(NodeUtil.isValidPropertyName(part)||!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
75	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this,  part);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this,  part);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  arg,  this,  part);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
76	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)||!NodeUtil.isForIn(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)||!NodeUtil.isForIn(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)||!NodeUtil.isForIn(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isAssignmentOp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
77	[BUG]  [BUGGY]  if(!NodeUtil.isGetProp(part)||!NodeUtil.isName(part))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isGetProp(part)||!NodeUtil.isName(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isGetProp(part)||!NodeUtil.isName(part))  {	  if(!NodeUtil.isGetProp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  if(!NodeUtil.isGetProp(part)||!NodeUtil.isFunction(part))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isGetProp(part)||!NodeUtil.isFunction(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isGetProp(part)||!NodeUtil.isFunction(part))  {	  if(!NodeUtil.isGetProp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
79	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  this,  expr);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  this,  expr);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  this,  expr);	  NodeTraversal.traverse(compiler,    part,    this);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
80	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  sourceFile,  new  ProvidedName(null,  true));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  sourceFile,  new  ProvidedName(null,  true));  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  sourceFile,  new  ProvidedName(null,  true));	  NodeTraversal.traverse(compiler,    part,    new    ProvidedName(null,    true));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
81	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(part)&&  NodeUtil.isFunction(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isExpressionNode(part)&&  NodeUtil.isFunction(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isExpressionNode(part)&&  NodeUtil.isFunction(part))  {	  if(!NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
82	[BUG]  [BUGGY]  if(!NodeUtil.isForIn(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isForIn(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isForIn(part))  {	  if(!NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
83	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)||  NodeUtil.isValidPropertyName(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)||  NodeUtil.isValidPropertyName(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)||  NodeUtil.isValidPropertyName(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isValidPropertyName(part))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
84	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this,  expr);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this,  expr);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  arg,  this,  expr);	  NodeTraversal.traverse(compiler,    arg,    this);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
85	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  part,  this,  expr);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  part,  this,  expr);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  t,  part,  this,  expr);	  NodeTraversal.traverse(compiler,    t,    part,    this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
86	[BUG]  [BUGGY]  if(part!=  null  &&!NodeUtil.isName(part)&&!NodeUtil.isFunction(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(part!=  null  &&!NodeUtil.isName(part)&&!NodeUtil.isFunction(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(part!=  null  &&!NodeUtil.isName(part)&&!NodeUtil.isFunction(part))  {	  if(part!=    null    &&!NodeUtil.isName(part))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
87	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProvidedName(null,  null,  false));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  part,  new  ProvidedName(null,  null,  false));  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  part,  new  ProvidedName(null,  null,  false));	  NodeTraversal.traverse(compiler,    part,    new    ProvidedName(null,    true));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
88	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isImmutableValue(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isImmutableValue(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)&&!NodeUtil.isImmutableValue(part))  {	  if(!NodeUtil.isName(part)&&!NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
89	[BUG]  [BUGGY]  if(methodName!=  null  &&!NodeUtil.isValidPropertyName(part)||!methodName.equals(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(methodName!=  null  &&!NodeUtil.isValidPropertyName(part)||!methodName.equals(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(methodName!=  null  &&!NodeUtil.isValidPropertyName(part)||!methodName.equals(part))  {	  if(!NodeUtil.isValidPropertyName(part)||!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
90	[BUG]  [BUGGY]  if(NodeUtil.isValidPropertyName(part)&&!NodeUtil.mayHaveSideEffects(part))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(NodeUtil.isValidPropertyName(part)&&!NodeUtil.mayHaveSideEffects(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(NodeUtil.isValidPropertyName(part)&&!NodeUtil.mayHaveSideEffects(part))  {	  if(!NodeUtil.isValidPropertyName(part)||!NodeUtil.mayHaveSideEffects(part))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
91	[BUG]  [BUGGY]  if(part!=  null  &&!NodeUtil.isExpressionNode(part))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(part!=  null  &&!NodeUtil.isExpressionNode(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(part!=  null  &&!NodeUtil.isExpressionNode(part))  {	  if(!NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
92	[BUG]  [BUGGY]  if(part  ==  null  ||!NodeUtil.isExpressionNode(part))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(part  ==  null  ||!NodeUtil.isExpressionNode(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(part  ==  null  ||!NodeUtil.isExpressionNode(part))  {	  if(!NodeUtil.isExpressionNode(part))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
93	[BUG]  [BUGGY]  if(!NodeUtil.isValidPropertyName(part)&&!methodName.equals(null))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isValidPropertyName(part)&&!methodName.equals(null))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isValidPropertyName(part)&&!methodName.equals(null))  {	  if(!NodeUtil.isValidPropertyName(part)&&!methodName.equals(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
94	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isFunction(part)&&!NodeUtil.mayHaveSideEffects(part))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)&&!NodeUtil.isFunction(part)&&!NodeUtil.mayHaveSideEffects(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)&&!NodeUtil.isFunction(part)&&!NodeUtil.mayHaveSideEffects(part))  {	  if(!NodeUtil.isName(part)&&!NodeUtil.isFunction(part))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
95	[BUG]  [BUGGY]  if(!NodeUtil.isGetProp(part)&&!NodeUtil.isExpressionNode(part))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isGetProp(part)&&!NodeUtil.isExpressionNode(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isGetProp(part)&&!NodeUtil.isExpressionNode(part))  {	  if(!NodeUtil.isGetProp(part))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
96	[BUG]  [BUGGY]  if(methodName!=  null  &&!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(part))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(methodName!=  null  &&!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(methodName!=  null  &&!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(part))  {	  if(!NodeUtil.isValidPropertyName(methodName)&&!methodName.equals(part))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
97	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  part,  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  part,  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  t,  part,  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  NodeTraversal.traverse(compiler,    t,    part);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
98	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  part,  NON_STRING_PROVIDE_ERROR);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  part,  NON_STRING_PROVIDE_ERROR);  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	NodeTraversal.traverse(compiler,  t,  part,  NON_STRING_PROVIDE_ERROR);	  NodeTraversal.traverse(compiler,    t,    part);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
99	[BUG]  [BUGGY]  if(!NodeUtil.isName(part)||  NodeUtil.isFunctionDeclaration(part))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {  if  (!verifyArgument(t,  methodName,  arg))  {  return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {      [BUGGY]  if(!NodeUtil.isName(part)||  NodeUtil.isFunctionDeclaration(part))  {  [BUGGY]      compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	584	584	1	replace	if(!NodeUtil.isName(part)||  NodeUtil.isFunctionDeclaration(part))  {	  if(!NodeUtil.isName(part)||!NodeUtil.isFunctionDeclaration(part))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
