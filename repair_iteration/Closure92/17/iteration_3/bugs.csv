bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  new  ProcessClosurePrimitives());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  new  ProcessClosurePrimitives());  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  left,  new  ProcessClosurePrimitives());	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProcessClosurePrimitives(),  left);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProcessClosurePrimitives(),  left);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProcessClosurePrimitives(),  left);	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  parent,  new  ProcessClosurePrimitives());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  parent,  new  ProcessClosurePrimitives());  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  parent,  new  ProcessClosurePrimitives());	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  n,  new  ProcessClosurePrimitives());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  n,  new  ProcessClosurePrimitives());  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  n,  new  ProcessClosurePrimitives());	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives(),  left);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives(),  left);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives(),  left);	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
7	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  ns,  new  ProcessClosurePrimitives(),  moduleGraph);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  ns,  new  ProcessClosurePrimitives(),  moduleGraph);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  ns,  new  ProcessClosurePrimitives(),  moduleGraph);	  NodeTraversal.traverse(compiler,    left,    ns,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
8	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  ns,  new  ProcessClosurePrimitives(),  parent);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  ns,  new  ProcessClosurePrimitives(),  parent);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  ns,  new  ProcessClosurePrimitives(),  parent);	  NodeTraversal.traverse(compiler,    left,    ns,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
9	[BUG]  [BUGGY]  if(providedNames  ==  null  ||  providedNames.containsKey(ns)||  providedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames  ==  null  ||  providedNames.containsKey(ns)||  providedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames  ==  null  ||  providedNames.containsKey(ns)||  providedNames.containsKey(ns))  {	  if(providedNames!=    null    ||    providedNames.containsKey(ns)||    providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	17	None	replace
10	[BUG]  [BUGGY]  if(providedNames!=  null  ||  providedNames.containsKey(ns)||  suppliedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  ||  providedNames.containsKey(ns)||  suppliedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  ||  providedNames.containsKey(ns)||  suppliedNames.containsKey(ns))  {	  if(providedNames!=    null    ||    providedNames.containsKey(ns)||    providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	17	None	replace
11	[BUG]  [BUGGY]  if(providedNames.containsKey(ns)&&  givenNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames.containsKey(ns)&&  givenNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames.containsKey(ns)&&  givenNames.containsKey(ns))  {	  if(providedNames.containsKey(ns)||    givenNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
12	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  left);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  left);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  left);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  this);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  left,  this);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  parent,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  parent,  this);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  parent,  this);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  expr);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  expr);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  expr);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
16	[BUG]  [BUGGY]  if(providedNames!=  null  ||  providedNames.containsKey(ns)&&  providedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  ||  providedNames.containsKey(ns)&&  providedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  ||  providedNames.containsKey(ns)&&  providedNames.containsKey(ns))  {	  if(providedNames.containsKey(ns)&&    providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
17	[BUG]  [BUGGY]  if(providedNames!=  null  &&!providedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  &&!providedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  &&!providedNames.containsKey(ns))  {	  if(providedNames!=    null    ||!providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	16	None	replace
18	[BUG]  [BUGGY]  if(providedNames  ==  null  ||!providedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames  ==  null  ||!providedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames  ==  null  ||!providedNames.containsKey(ns))  {	  if(providedNames!=    null    ||!providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	16	None	replace
19	[BUG]  [BUGGY]  if(providedNames  ==  null  &&!providedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames  ==  null  &&!providedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames  ==  null  &&!providedNames.containsKey(ns))  {	  if(providedNames!=    null    ||!providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	16	None	replace
20	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  left);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  left);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  this,  left);	  NodeTraversal.traverse(compiler,    ns,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
21	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  this);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  this);	  NodeTraversal.traverse(compiler,    ns,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
22	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  this,  left);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  this,  left);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  ns,  this,  left);	  NodeTraversal.traverse(compiler,    ns,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
23	[BUG]  [BUGGY]  Context.report(ns,  INVALID_PROVIDE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  Context.report(ns,  INVALID_PROVIDE_ERROR);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	Context.report(ns,  INVALID_PROVIDE_ERROR);	  Context.reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
24	[BUG]  [BUGGY]  Context.report(ns,  INVALID_PROVIDE_ERROR,  ns);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  Context.report(ns,  INVALID_PROVIDE_ERROR,  ns);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	Context.report(ns,  INVALID_PROVIDE_ERROR,  ns);	  Context.reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
25	[BUG]  [BUGGY]  Context.report(ns,  NON_STRING_PASSED_TO_SET_CSS);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  Context.report(ns,  NON_STRING_PASSED_TO_SET_CSS);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	Context.report(ns,  NON_STRING_PASSED_TO_SET_CSS);	  Context.reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
26	[BUG]  [BUGGY]  if(providedNames!=  null  &&  providedNames.containsKey(ns)||  suppliedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  &&  providedNames.containsKey(ns)||  suppliedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  &&  providedNames.containsKey(ns)||  suppliedNames.containsKey(ns))  {	  if(providedNames!=    null    &&    providedNames.containsKey(ns)||    providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	21	None	replace
27	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProcessClosurePrimitives(),  left);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProcessClosurePrimitives(),  left);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProcessClosurePrimitives(),  left);	  NodeTraversal.traverse(compiler,    ns,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
28	[BUG]  [BUGGY]  if(providedNames!=  null  ||  ns.length()  >  0)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  ||  ns.length()  >  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  ||  ns.length()  >  0)  {	  if(providedNames!=    null    &&    ns.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
29	[BUG]  [BUGGY]  if(ns!=  null  &&  ns.length()  >  0)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(ns!=  null  &&  ns.length()  >  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(ns!=  null  &&  ns.length()  >  0)  {	  if(providedNames!=    null    &&    ns.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
30	[BUG]  [BUGGY]  if(providedNames!=  null  ||  providedNames.containsKey(ns)||!providedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  ||  providedNames.containsKey(ns)||!providedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  ||  providedNames.containsKey(ns)||!providedNames.containsKey(ns))  {	  if(providedNames!=    null    &&    providedNames.containsKey(ns)||!providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	7	None	replace
31	[BUG]  [BUGGY]  if(providedNames!=  null  ||!providedNames.contains(ns))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  ||!providedNames.contains(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  ||!providedNames.contains(ns))  {	  if(providedNames    ==    null)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
32	[BUG]  [BUGGY]  if(ns!=  null  &&  ns.length()  ==  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(ns!=  null  &&  ns.length()  ==  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(ns!=  null  &&  ns.length()  ==  0)  {	  if(providedNames!=    null    &&    ns.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	22	None	replace
33	[BUG]  [BUGGY]  if(providedNames  ==  null  ||  ns.length()  ==  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames  ==  null  ||  ns.length()  ==  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames  ==  null  ||  ns.length()  ==  0)  {	  if(providedNames!=    null    ||    ns.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
34	[BUG]  [BUGGY]  if(providedNames!=  null  ||  providedNames.length()  ==  0)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  ||  providedNames.length()  ==  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  ||  providedNames.length()  ==  0)  {	  if(providedNames!=    null    ||    ns.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
35	[BUG]  [BUGGY]  if(ns!=  null  ||  ns.length()  ==  0)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(ns!=  null  ||  ns.length()  ==  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(ns!=  null  ||  ns.length()  ==  0)  {	  if(providedNames!=    null    ||    ns.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  parent);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
37	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  t.getModule());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  t.getModule());  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  left,  t.getModule());	  NodeTraversal.traverse(compiler,    ns,    parent,    t.getModule());    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
38	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  ns,  parent,  t.getModule());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  ns,  parent,  t.getModule());  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  ns,  parent,  t.getModule());	  NodeTraversal.traverse(compiler,    ns,    parent,    t.getModule());    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
39	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  parent,  t.getModule());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  parent,  t.getModule());  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  left,  parent,  t.getModule());	  NodeTraversal.traverse(compiler,    ns,    parent,    t.getModule());    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  parent,  t.getModule());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  parent,  t.getModule());  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  parent,  t.getModule());	  NodeTraversal.traverse(compiler,    n,    parent,    t.getModule());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
41	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  t.getModule(),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  t.getModule(),  true);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  t.getModule(),  true);	  NodeTraversal.traverse(compiler,    n,    parent,    t.getModule());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
42	[BUG]  [BUGGY]  if(providedNames.containsKey(ns)&&  suppliedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames.containsKey(ns)&&  suppliedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames.containsKey(ns)&&  suppliedNames.containsKey(ns))  {	  if(providedNames.containsKey(ns)||    suppliedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
43	[BUG]  [BUGGY]  if(providedNames.containsKey(ns)||  suppliedNames.containsKey(ns)||  parent.getType()  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames.containsKey(ns)||  suppliedNames.containsKey(ns)||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames.containsKey(ns)||  suppliedNames.containsKey(ns)||  parent.getType()  ==  Token.NAME)  {	  if(providedNames.containsKey(ns)||    suppliedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
44	[BUG]  [BUGGY]  if(providedNames.containsKey(ns)||  requiredNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames.containsKey(ns)||  requiredNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames.containsKey(ns)||  requiredNames.containsKey(ns))  {	  if(providedNames.containsKey(ns)||    suppliedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
45	[BUG]  [BUGGY]  if(providedNames  ==  null  ||  providedNames.containsKey(ns)&&  providedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames  ==  null  ||  providedNames.containsKey(ns)&&  providedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames  ==  null  ||  providedNames.containsKey(ns)&&  providedNames.containsKey(ns))  {	  if(providedNames.containsKey(ns)&&    providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
46	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  n,  parent,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  n,  parent,  this);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  n,  parent,  this);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
47	[BUG]  [BUGGY]  if(providedNames!=  null  &&  providedNames.containsKey(ns)||  requiredNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  &&  providedNames.containsKey(ns)||  requiredNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  &&  providedNames.containsKey(ns)||  requiredNames.containsKey(ns))  {	  if(providedNames!=    null    &&    providedNames.containsKey(ns)||    providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	21	None	replace
48	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  ns,  new  ProcessClosurePrimitives(),  requiredLevel);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  ns,  new  ProcessClosurePrimitives(),  requiredLevel);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  ns,  new  ProcessClosurePrimitives(),  requiredLevel);	  NodeTraversal.traverse(compiler,    left,    ns,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
49	[BUG]  [BUGGY]  if(providedNames!=  null  &&  left.length()  ==  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  &&  left.length()  ==  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  &&  left.length()  ==  0)  {	  if(providedNames!=    null    &&    ns.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	22	None	replace
50	[BUG]  [BUGGY]  if(providedNames!=  null  ||  left.length()  ==  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  ||  left.length()  ==  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  ||  left.length()  ==  0)  {	  if(providedNames!=    null    ||    ns.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
51	[BUG]  [BUGGY]  Context.report(null,  INVALID_PROVIDE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  Context.report(null,  INVALID_PROVIDE_ERROR);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	Context.report(null,  INVALID_PROVIDE_ERROR);	  Context.reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
52	[BUG]  [BUGGY]  Context.report(ns,  INVALID_ARGUMENT_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  Context.report(ns,  INVALID_ARGUMENT_ERROR);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	Context.report(ns,  INVALID_ARGUMENT_ERROR);	  Context.reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
53	[BUG]  [BUGGY]  if(providedNames!=  null  ||  providedNames.containsKey(ns)||  givenNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  ||  providedNames.containsKey(ns)||  givenNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  ||  providedNames.containsKey(ns)||  givenNames.containsKey(ns))  {	  if(providedNames.containsKey(ns)||    givenNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  n,  parent,  t.getModule());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  n,  parent,  t.getModule());  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  left,  n,  parent,  t.getModule());	  NodeTraversal.traverse(compiler,    n,    parent,    t.getModule());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
55	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  parent);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  parent);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  ns,  parent);	  NodeTraversal.traverse(compiler,    ns,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
56	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  left);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  left);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  left);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
57	[BUG]  [BUGGY]  if(providedNames!=  null  ||  providedNames.containsKey(ns)||  requiredNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  ||  providedNames.containsKey(ns)||  requiredNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  ||  providedNames.containsKey(ns)||  requiredNames.containsKey(ns))  {	  if(providedNames!=    null    ||    providedNames.containsKey(ns)||    providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	17	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  left,  t.getModule());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  left,  t.getModule());  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  ns,  left,  t.getModule());	  NodeTraversal.traverse(compiler,    ns,    parent,    t.getModule());    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  this,  parent);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  expr);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  expr);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  this,  expr);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
61	[BUG]  [BUGGY]  if(providedNames!=  null  &&  ns.length()  >=  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  &&  ns.length()  >=  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  &&  ns.length()  >=  0)  {	  if(providedNames!=    null    &&    ns.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	22	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProcessClosurePrimitives(),  expr);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProcessClosurePrimitives(),  expr);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProcessClosurePrimitives(),  expr);	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
63	[BUG]  [BUGGY]  if(providedNames!=  null  &&  suppliedNames.containsKey(ns)||  providedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  &&  suppliedNames.containsKey(ns)||  providedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  &&  suppliedNames.containsKey(ns)||  providedNames.containsKey(ns))  {	  if(providedNames!=    null    ||    providedNames.containsKey(ns)||    providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	17	None	replace
64	[BUG]  [BUGGY]  if(providedNames!=  null  &&  providedNames.containsKey(ns)||  givenNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  &&  providedNames.containsKey(ns)||  givenNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  &&  providedNames.containsKey(ns)||  givenNames.containsKey(ns))  {	  if(providedNames.containsKey(ns)||    givenNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
65	[BUG]  [BUGGY]  if(providedNames!=  null  ||  providedNames.size()  ==  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  ||  providedNames.size()  ==  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  ||  providedNames.size()  ==  0)  {	  if(providedNames!=    null    ||    ns.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
66	[BUG]  [BUGGY]  if(providedNames!=  null  &&  providedNames.containsKey(ns)&&!providedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  &&  providedNames.containsKey(ns)&&!providedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  &&  providedNames.containsKey(ns)&&!providedNames.containsKey(ns))  {	  if(providedNames.containsKey(ns)&&    providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  t.getModule(),  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  t.getModule(),  false);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  t.getModule(),  false);	  NodeTraversal.traverse(compiler,    n,    parent,    t.getModule());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
68	[BUG]  [BUGGY]  if(providedNames  ==  null  &&  ns.length()  >  0)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames  ==  null  &&  ns.length()  >  0)  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames  ==  null  &&  ns.length()  >  0)  {	  if(providedNames!=    null    &&    ns.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
69	[BUG]  [BUGGY]  Context.report(t.makeError(n,  NON_STRING_PASSED_TO_SET_CSS_ERROR,  ns));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  Context.report(t.makeError(n,  NON_STRING_PASSED_TO_SET_CSS_ERROR,  ns));  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	Context.report(t.makeError(n,  NON_STRING_PASSED_TO_SET_CSS_ERROR,  ns));	  Context.reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
70	[BUG]  [BUGGY]  Context.report(t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  Context.report(t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	Context.report(t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));	  Context.reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
71	[BUG]  [BUGGY]  if(providedNames!=  null  &&  suppliedNames.containsKey(ns)||!providedNames.containsKey(ns))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames!=  null  &&  suppliedNames.containsKey(ns)||!providedNames.containsKey(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames!=  null  &&  suppliedNames.containsKey(ns)||!providedNames.containsKey(ns))  {	  if(providedNames!=    null    &&    providedNames.containsKey(ns)||!providedNames.containsKey(ns))    {    	non-compiled	[CE]  ')'  expected	7	None	replace
72	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  requiresLevel);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  requiresLevel);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  requiresLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
73	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  requiredLevel);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  requiredLevel);  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  requiredLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
74	[BUG]  [BUGGY]  if(providedNames  ==  null  ||!providedNames.contains(ns))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();  Node  arg  =  left.getNext();  if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();      [BUGGY]  if(providedNames  ==  null  ||!providedNames.contains(ns))  {  [BUGGY]      ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());  providedNames.put(  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	281	281	1	replace	if(providedNames  ==  null  ||!providedNames.contains(ns))  {	  if(providedNames    ==    null)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
