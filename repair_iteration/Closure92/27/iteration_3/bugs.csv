bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(methodName  ==  null  &&!verifyProvide(t,  methodName,  arg))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null  &&!verifyProvide(t,  methodName,  arg))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(methodName  ==  null  &&!verifyProvide(t,  methodName,  arg))  {	  if(methodName!=    null    ||!verifyProvide(t,    methodName,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  expr);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  expr);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  expr);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  arg);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  arg);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  arg);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  this);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  this);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  null);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  null);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  null);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  if(methodName  ==  null  ||!verifyProvide(t,  methodName,  arg.getType()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null  ||!verifyProvide(t,  methodName,  arg.getType()))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(methodName  ==  null  ||!verifyProvide(t,  methodName,  arg.getType()))  {	  if(methodName    ==    null    ||!verifyProvide(t,    methodName,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(methodName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(methodName))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(methodName))  {	  if(!verifyProvide(t,    methodName,    arg)||!NodeUtil.isValidPropertyName(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  if(!VerifyProvide(t,  methodName,  arg)||!NodeUtil.isValidPropertyName(methodName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!VerifyProvide(t,  methodName,  arg)||!NodeUtil.isValidPropertyName(methodName))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!VerifyProvide(t,  methodName,  arg)||!NodeUtil.isValidPropertyName(methodName))  {	  if(!verifyProvide(t,    methodName,    arg)||!NodeUtil.isValidPropertyName(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
9	[BUG]  [BUGGY]  if(!VerifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(methodName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!VerifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(methodName))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!VerifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(methodName))  {	  if(!verifyProvide(t,    methodName,    arg)||!NodeUtil.isValidPropertyName(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
10	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  expr);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  expr);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  expr);	  NodeTraversal.traverse(compiler,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  this);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  this);	  NodeTraversal.traverse(compiler,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  null);	  NodeTraversal.traverse(compiler,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  scopeRoot);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  scopeRoot);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  scopeRoot);	  NodeTraversal.traverse(compiler,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getType()!=  Token.REQUIRE))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getType()!=  Token.REQUIRE))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg.getType()!=  Token.REQUIRE))  {	  if(!verifyProvide(t,    methodName,    arg.getType()    ==    Token.REQUIRE))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getType()  {  Token.REQUIRE))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getType()  {  Token.REQUIRE))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg.getType()  {  Token.REQUIRE))  {	  if(!verifyProvide(t,    methodName,    arg.getType()    ==    Token.REQUIRE))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  if(!VerifyProvide(t,  methodName,  arg)||!NodeUtil.isValidPropertyName(arg))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!VerifyProvide(t,  methodName,  arg)||!NodeUtil.isValidPropertyName(arg))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!VerifyProvide(t,  methodName,  arg)||!NodeUtil.isValidPropertyName(arg))  {	  if(!verifyProvide(t,    methodName,    arg)||!NodeUtil.isValidPropertyName(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getParent()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getParent()))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg.getParent()))  {	  if(!verifyProvide(t,    methodName,    arg.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getType(),  false))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getType(),  false))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg.getType(),  false))  {	  if(!verifyProvide(t,    methodName,    arg.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getType())||!NodeUtil.isValidPropertyName(arg.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getType())||!NodeUtil.isValidPropertyName(arg.getString()))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg.getType())||!NodeUtil.isValidPropertyName(arg.getString()))  {	  if(!verifyProvide(t,    methodName,    arg.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals(methodName.getString());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals(methodName.getString());  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals(methodName.getString());	  NodeUtil.isValidPropertyName(arg)||    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)&&  methodName.equals(arg.getString());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)&&  methodName.equals(arg.getString());  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)&&  methodName.equals(arg.getString());	  NodeUtil.isValidPropertyName(arg)||    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
22	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  methodName.equals(arg.getString());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  methodName.equals(arg.getString());  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  methodName.equals(arg.getString());	  NodeUtil.isValidPropertyName(arg)||    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
23	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||!methodName.equals(arg.getString());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||!methodName.equals(arg.getString());  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||!methodName.equals(arg.getString());	  NodeUtil.isValidPropertyName(arg)||    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
24	[BUG]  [BUGGY]  if(!VerifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(arg))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!VerifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(arg))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!VerifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(arg))  {	  if(!verifyProvide(t,    methodName,    arg)&&!NodeUtil.isValidPropertyName(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  null);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  null);	  NodeTraversal.traverse(compiler,    methodName,    this);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(t,  arg));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(t,  arg));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(t,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(null,    arg));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(t,  null,  arg));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(t,  null,  arg));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(t,  null,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(null,    arg));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  null));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  null));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  null));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(null,    arg));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  expr));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  expr));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  expr));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(null,    arg));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg,  false))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg,  false))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg,  false))  {	  if(!verifyProvide(t,    methodName,    arg,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg,  null)&&!NodeUtil.isValidPropertyName(arg))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg,  null)&&!NodeUtil.isValidPropertyName(arg))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg,  null)&&!NodeUtil.isValidPropertyName(arg))  {	  if(!verifyProvide(t,    methodName,    arg,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg,  this))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg,  this))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg,  this))  {	  if(!verifyProvide(t,    methodName,    arg,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  n));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  n));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  n));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(arg));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  t.getModule()));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  t.getModule()));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  t.getModule()));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(arg));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
35	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  enclosingFnNameNode));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  enclosingFnNameNode));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  enclosingFnNameNode));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(arg));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg),  t);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg),  t);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg),  t);	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(arg));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ". ")||  arg.getString().equals( ". ")||  arg.getString().equals(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ". ")||  arg.getString().equals( ". ")||  arg.getString().equals(  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ". ")||  arg.getString().equals( ". ")||  arg.getString().equals(	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
38	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
39	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "* ")||  arg.getString().equals( "* ")||  arg.getString().equals( "* ")  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "* ")||  arg.getString().equals( "* ")||  arg.getString().equals( "* ")  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "* ")||  arg.getString().equals( "* ")||  arg.getString().equals( "* ")	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
40	[BUG]  [BUGGY]  if(methodName!=  null  ||!verifyValue(t,  methodName,  arg))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null  ||!verifyValue(t,  methodName,  arg))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(methodName!=  null  ||!verifyValue(t,  methodName,  arg))  {	  if(methodName    ==    null    ||!verifyValue(t,    methodName,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
41	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- "))  {  return  true;  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- "))  {  return  true;	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
42	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ". ")||  arg.getString().equals( ". "))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ". ")||  arg.getString().equals( ". "))  {  return  false;  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ". ")||  arg.getString().equals( ". "))  {  return  false;	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
43	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  methodName.getString().equals( ". ")||  arg.getString().equals( ".. "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  methodName.getString().equals( ". ")||  arg.getString().equals( ".. "))  {  return  true;  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  methodName.getString().equals( ". ")||  arg.getString().equals( ".. "))  {  return  true;	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
44	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")||  arg.getString().equals( "  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")||  arg.getString().equals( "  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")||  arg.getString().equals( "	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")||    arg.getString().equals(   "    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
45	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals(methodName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals(methodName);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals(methodName);	  NodeUtil.isValidPropertyName(arg)||    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
46	[BUG]  [BUGGY]  NodeUtil.isValidMethodName(methodName)||  arg.getString().equals(methodName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidMethodName(methodName)||  arg.getString().equals(methodName);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidMethodName(methodName)||  arg.getString().equals(methodName);	  NodeUtil.isValidPropertyName(arg)||    methodName.equals(arg.getString());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
47	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "* ")||  arg.getString().equals( "* "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "* ")||  arg.getString().equals( "* "))  {  return  true;  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "* ")||  arg.getString().equals( "* "))  {  return  true;	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
48	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ": ")||  arg.getString().equals( ": "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ": ")||  arg.getString().equals( ": "))  {  return  true;  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ": ")||  arg.getString().equals( ": "))  {  return  true;	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
49	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg)||!NodeUtil.mayHaveSideEffects(methodName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg)||!NodeUtil.mayHaveSideEffects(methodName))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg)||!NodeUtil.mayHaveSideEffects(methodName))  {	  if(!verifyProvide(t,    methodName,    arg)||!NodeUtil.isValidPropertyName(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
50	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg,  null)&&!NodeUtil.isValidPropertyName(methodName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg,  null)&&!NodeUtil.isValidPropertyName(methodName))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg,  null)&&!NodeUtil.isValidPropertyName(methodName))  {	  if(!verifyProvide(t,    methodName,    arg,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  expr));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  expr));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  expr));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(arg));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  exportedVariables));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  exportedVariables));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  exportedVariables));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(arg));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg),  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg),  this);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg),  this);	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(arg));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  t,  methodName);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
55	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  t);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  t);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName,  t);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  explicit);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  explicit);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  explicit);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  if(methodName  ==  null  ||!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(methodName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null  ||!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(methodName))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(methodName  ==  null  ||!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(methodName))  {	  if(methodName    ==    null    ||!verifyProvide(t,    methodName,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getType()  >>  Token.REQUIRE))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getType()  >>  Token.REQUIRE))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg.getType()  >>  Token.REQUIRE))  {	  if(!verifyProvide(t,    methodName,    arg.getType()    ==    Token.REQUIRE))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ". ")||  arg.getString().equals( ". ")||  arg.getString().equals  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ". ")||  arg.getString().equals( ". ")||  arg.getString().equals  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ". ")||  arg.getString().equals( ". ")||  arg.getString().equals	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")||  arg.getString().equals( "-  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")||  arg.getString().equals( "-  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "- ")||  arg.getString().equals( "- ")||  arg.getString().equals( "-	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  exportedVariables);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  exportedVariables);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  exportedVariables);	  NodeTraversal.traverse(compiler,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg)&&!NodeUtil.mayHaveSideEffects(methodName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg)&&!NodeUtil.mayHaveSideEffects(methodName))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg)&&!NodeUtil.mayHaveSideEffects(methodName))  {	  if(!verifyProvide(t,    methodName,    arg)&&!NodeUtil.isValidPropertyName(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getNext()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getNext()))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg.getNext()))  {	  if(!verifyProvide(t,    methodName,    arg.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
65	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "* ")||  arg.getString().equals( "* ")||  arg.getString().equals(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "* ")||  arg.getString().equals( "* ")||  arg.getString().equals(  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( "* ")||  arg.getString().equals( "* ")||  arg.getString().equals(	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")||    arg.getString().equals(   "    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
66	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  explicit));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  explicit));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  explicit));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(arg));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  this));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  this));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(arg,  this));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(arg));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  this);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  this);	  NodeTraversal.traverse(compiler,    methodName,    this);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
69	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  isExpr);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  isExpr);  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  isExpr);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(null,    arg));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  explicit));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  explicit));  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  ProvidedName(null,  arg,  explicit));	  NodeTraversal.traverse(compiler,    methodName,    new    ProvidedName(null,    arg));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
72	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg,  isExpr))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg,  isExpr))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg,  isExpr))  {	  if(!verifyProvide(t,    methodName,    arg,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
73	[BUG]  [BUGGY]  if(methodName!=  null  &&!verifyProvide(t,  methodName,  arg)||!NodeUtil.isValidPropertyName(arg))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null  &&!verifyProvide(t,  methodName,  arg)||!NodeUtil.isValidPropertyName(arg))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(methodName!=  null  &&!verifyProvide(t,  methodName,  arg)||!NodeUtil.isValidPropertyName(arg))  {	  if(!verifyProvide(t,    methodName,    arg)||!NodeUtil.isValidPropertyName(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
74	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getString()))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg.getString()))  {	  if(!verifyProvide(t,    methodName,    arg.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
75	[BUG]  [BUGGY]  if(methodName!=  null  &&!verifyProvide(t,  methodName,  arg.getType()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null  &&!verifyProvide(t,  methodName,  arg.getType()))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(methodName!=  null  &&!verifyProvide(t,  methodName,  arg.getType()))  {	  if(!verifyProvide(t,    methodName,    arg.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
76	[BUG]  [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!verifyProvide(t,  methodName,  arg.getFirstChild()))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(!verifyProvide(t,  methodName,  arg.getFirstChild()))  {	  if(!verifyProvide(t,    methodName,    arg.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ": ")||  arg.getString().equals( ": ")||  arg.getString().equals( "  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ": ")||  arg.getString().equals( ": ")||  arg.getString().equals( "  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	NodeUtil.isValidPropertyName(methodName)||  arg.getString().equals( ": ")||  arg.getString().equals( ": ")||  arg.getString().equals( "	  NodeUtil.isValidPropertyName(methodName)||    arg.getString().equals(   ".   ")||    arg.getString().equals(   ".   ")||    arg.getString().equals(   "    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
78	[BUG]  [BUGGY]  if(methodName  ==  null  ||!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(arg))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null  ||!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(arg))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(methodName  ==  null  ||!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(arg))  {	  if(methodName    ==    null    ||!verifyProvide(t,    methodName,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
79	[BUG]  [BUGGY]  if(methodName!=  null  &&!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(arg))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  verifyProvide(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null  &&!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(arg))  {  [BUGGY]      return  false;  }  for  (String  part  :  arg.getString().split(     "\\.     "))  {  if  (!NodeUtil.isValidPropertyName(part))  {  compiler.report(t.makeError(arg,  INVALID_PROVIDE_ERROR,  part));  return  false;  }  }  return  true;  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  verifyProvide  [RETURN_TYPE]  boolean  NodeTraversal  t  Node  methodName  Node  arg  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  NodeTraversal  t  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	579	579	1	replace	if(methodName!=  null  &&!verifyProvide(t,  methodName,  arg)&&!NodeUtil.isValidPropertyName(arg))  {	  if(!verifyProvide(t,    methodName,    arg)&&!NodeUtil.isValidPropertyName(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
