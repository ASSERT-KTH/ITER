bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  n,  this);	  NodeTraversal.traverse(compiler,    left,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  null);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  null);	  NodeTraversal.traverse(compiler,    left,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  this,  parent);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  this,  parent);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  this,  parent);	  NodeTraversal.traverse(compiler,    left,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  this,  moduleGraph);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  this,  moduleGraph);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  this,  moduleGraph);	  NodeTraversal.traverse(compiler,    left,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  Node  arg  =  left.getfirstChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  Node  arg  =  left.getfirstChild();  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	Node  arg  =  left.getfirstChild();	  Node    arg    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  t);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  n,  t);	  NodeTraversal.traverse(compiler,    left,    t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  left);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  left);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  n,  left);	  NodeTraversal.traverse(compiler,    left,    t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  n);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  n);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  n);	  NodeTraversal.traverse(compiler,    left,    t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  parent);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  parent);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  parent);	  NodeTraversal.traverse(compiler,    left,    t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  Node  arg  =  left!=  null?  left.getParent()  :  left.getParent();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  Node  arg  =  left!=  null?  left.getParent()  :  left.getParent();  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	Node  arg  =  left!=  null?  left.getParent()  :  left.getParent();	  Node    arg    =    left!=    null?    parent.getParent()    :    left.getParent();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  Node  arg  =  left!=  null?  left.getNext()  :  left.getParent();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  Node  arg  =  left!=  null?  left.getNext()  :  left.getParent();  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	Node  arg  =  left!=  null?  left.getNext()  :  left.getParent();	  Node    arg    =    left!=    null?    parent.getParent()    :    left.getParent();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  Node  arg  =  left!=  null?  parent.getParent()  :  left.getNext();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  Node  arg  =  left!=  null?  parent.getParent()  :  left.getNext();  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	Node  arg  =  left!=  null?  parent.getParent()  :  left.getNext();	  Node    arg    =    left!=    null?    parent.getParent()    :    left.getParent();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives());  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives());	  NodeTraversal.traverse(compiler,    left,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  parent);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  parent);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  parent);	  NodeTraversal.traverse(compiler,    left,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  moduleGraph);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  moduleGraph);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  moduleGraph);	  NodeTraversal.traverse(compiler,    left,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  Node  arg  =  left  ==  null?  parent.getParent()  :  left.getParent();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  Node  arg  =  left  ==  null?  parent.getParent()  :  left.getParent();  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	Node  arg  =  left  ==  null?  parent.getParent()  :  left.getParent();	  Node    arg    =    left!=    null?    parent.getParent()    :    left.getParent();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  Node  arg  =  left.getlastChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  Node  arg  =  left.getlastChild();  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	Node  arg  =  left.getlastChild();	  Node    arg    =    parent.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  this,  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  this,  n);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  this,  n);	  NodeTraversal.traverse(compiler,    left,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  this,  expr);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  this,  expr);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  this,  expr);	  NodeTraversal.traverse(compiler,    left,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  Node  arg  =  left.removeLastChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  Node  arg  =  left.removeLastChild();  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	Node  arg  =  left.removeLastChild();	  Node    arg    =    left.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  Node  arg  =  left.replaceChild(n,  parent);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  Node  arg  =  left.replaceChild(n,  parent);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	Node  arg  =  left.replaceChild(n,  parent);	  Node    arg    =    left.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  requiredLevel);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  requiredLevel);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  requiredLevel);	  NodeTraversal.traverse(compiler,    left,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  this,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  this,  null);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  this,  null);	  NodeTraversal.traverse(compiler,    left,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  Node  arg  =  left!=  null?  parent.getNext()  :  left.getParent();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  Node  arg  =  left!=  null?  parent.getNext()  :  left.getParent();  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	Node  arg  =  left!=  null?  parent.getNext()  :  left.getParent();	  Node    arg    =    left!=    null?    parent.getParent()    :    left.getParent();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  left);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  processProvideCall(NodeTraversal  t,  Node  n,  Node  parent)  {  Node  left  =  n.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  left);  [BUGGY]      if  (verifyProvide(t,  left,  arg))  {  String  ns  =  arg.getString();  if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13736056394868904	278	278	1	replace	NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives(),  left);	  NodeTraversal.traverse(compiler,    left,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
