bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(arg!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  DiagnosticType  diagnostic  =  null;  [BUGGY]  if(arg!=  null)  {  [BUGGY]  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	611	611	1	replace	if(arg!=  null)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
2	[BUG]  [BUGGY]  if(arg.getNext()!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  DiagnosticType  diagnostic  =  null;  [BUGGY]  if(arg.getNext()!=  null)  {  [BUGGY]  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	611	611	1	replace	if(arg.getNext()!=  null)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
3	[BUG]  [BUGGY]  if(arg  ==  null  ||  arg.getNext()!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  DiagnosticType  diagnostic  =  null;  [BUGGY]  if(arg  ==  null  ||  arg.getNext()!=  null)  {  [BUGGY]  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	611	611	1	replace	if(arg  ==  null  ||  arg.getNext()!=  null)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  DiagnosticType  diagnostic  =  null;  [BUGGY]    [BUGGY]  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	611	611	1	replace	  	if  (arg  ==  null)  {  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
5	[BUG]  [BUGGY]  if(diagnostic!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  DiagnosticType  diagnostic  =  null;  [BUGGY]  if(diagnostic!=  null)  {  [BUGGY]  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	611	611	1	replace	if(diagnostic!=  null)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
6	[BUG]  [BUGGY]  if(arg  ==  null  ||  arg.getType()!=  desiredType)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    private  boolean  verifyArgument(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  DiagnosticType  diagnostic  =  null;  [BUGGY]  if(arg  ==  null  ||  arg.getType()!=  desiredType)  {  [BUGGY]  diagnostic  =  NULL_ARGUMENT_ERROR;  }  else  if  (arg.getType()  !=  desiredType)  {  diagnostic  =  INVALID_ARGUMENT_ERROR;  }  else  if  (arg.getNext()  !=  null)  {  diagnostic  =  TOO_MANY_ARGUMENTS_ERROR;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.13245323570650439	611	611	1	replace	if(arg  ==  null  ||  arg.getType()!=  desiredType)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
