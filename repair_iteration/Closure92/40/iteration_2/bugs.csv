bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  t  =  n.getCurrentToken();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  t  =  n.getCurrentToken();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	t  =  n.getCurrentToken();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  t  =  n.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  t  =  n.getCurrentName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	t  =  n.getCurrentName();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  MethodName  n  =  name.getMethodName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  MethodName  n  =  name.getMethodName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  n  =  name.getMethodName();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  String  methodName  =  name.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getLastChild().getString();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getLastChild().getString();	  String    methodName    =    name.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  String  methodName  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  n.getFirstChild().getString();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  n.getFirstChild().getString();	  String    methodName    =    name.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  String  methodName  =  t.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  t.getFirstChild().getString();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  t.getFirstChild().getString();	  String    methodName    =    name.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().toLowerCase();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getSimpleName().toLowerCase();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().toLowerCase();	  String    methodName    =    name.getSimpleName().getString();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getSimpleName().getQualifiedName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().getQualifiedName();	  String    methodName    =    name.getSimpleName().getString();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().toString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getSimpleName().toString();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().toString();	  String    methodName    =    name.getSimpleName().getString();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getSimpleName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName();	  String    methodName    =    name.getSimpleName().getString();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getQualifiedName().getQualifiedName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().getQualifiedName();	  String    methodName    =    name.getQualifiedName().getString();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().toLowerCase();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getQualifiedName().toLowerCase();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().toLowerCase();	  String    methodName    =    name.getQualifiedName().getString();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().toString();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getQualifiedName().toString();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().toString();	  String    methodName    =    name.getQualifiedName().getString();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.length()  -  1);  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().substring(0,  name.length()  -  1);	  String    methodName    =    name.getQualifiedName().getString();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().toString();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getPrefix().toString();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().toString();	  String    methodName    =    name.getPrefix().getString();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getPrefix().getQualifiedName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().getQualifiedName();	  String    methodName    =    name.getPrefix().getString();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getPrefix().toLowerCase();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().toLowerCase();	  String    methodName    =    name.getPrefix().getString();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getQualifiedName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName();	  String    methodName    =    name.getString();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  String  methodName  =  n.getString();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  n.getString();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  n.getString();	  String    methodName    =    name.getString();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  String  methodName  =  name.getKey();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getKey();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getKey();	  String    methodName    =    name.getString();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  String  methodName  =  name.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getFirstChild().getQualifiedName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getFirstChild().getQualifiedName();	  String    methodName    =    name.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  String  methodName  =  name.getFirstChild().getString(),  n);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getFirstChild().getString(),  n);  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getFirstChild().getString(),  n);	  String    methodName    =    name.getFirstChild().getString();    	non-compiled	[CE]  ';'  expected	6	None	replace
23	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().getSimpleName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getQualifiedName().getSimpleName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().getSimpleName();	  String    methodName    =    name.getQualifiedName().getString();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  MethodName  t  =  name.getMethodName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  MethodName  t  =  name.getMethodName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  t  =  name.getMethodName();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  MethodName  t  =  name.getMethod();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  MethodName  t  =  name.getMethod();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  t  =  name.getMethod();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  MethodName  m  =  name.getMethodName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  MethodName  m  =  name.getMethodName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  m  =  name.getMethodName();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().getString(),  n);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getPrefix().getString(),  n);  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().getString(),  n);	  String    methodName    =    name.getPrefix().getString();    	non-compiled	[CE]  ';'  expected	4	None	replace
28	[BUG]  [BUGGY]  String  methodName  =  name.getFirstChild().getSimpleName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getFirstChild().getSimpleName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getFirstChild().getSimpleName();	  String    methodName    =    name.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().trim();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getQualifiedName().trim();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().trim();	  String    methodName    =    name.getQualifiedName().getString();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().trim();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.getSimpleName().trim();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().trim();	  String    methodName    =    name.getSimpleName().getString();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  n.setString(name.getString());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  n.setString(name.getString());  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n.setString(name.getString());	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  n  =  t.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  n  =  t.getCurrentName();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n  =  t.getCurrentName();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  Name  n  =  name.getString();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  Name  n  =  name.getString();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	Name  n  =  name.getString();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  String  methodName  =  name.toString();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {        [BUGGY]  String  methodName  =  name.toString();  [BUGGY]    if  (   "base   ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.toString();	  String    methodName    =    name.getString();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
