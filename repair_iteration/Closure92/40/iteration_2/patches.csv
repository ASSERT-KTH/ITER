bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  methodName  =  n.toString();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  n.toString();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  n.toString();	  String    methodName    =    name.toString();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2	[BUG]  [BUGGY]  Name  n  =  name.getName();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  Name  n  =  name.getName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	Name  n  =  name.getName();	  Name    n    =    name.getString();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]  Name  n  =  name.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  Name  n  =  name.getQualifiedName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	Name  n  =  name.getQualifiedName();	  Name    n    =    name.getString();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
4	[BUG]  [BUGGY]  Name  n  =  methodName.getString();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  Name  n  =  methodName.getString();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	Name  n  =  methodName.getString();	  Name    n    =    name.getString();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
5	[BUG]  [BUGGY]  Name  n  =  name.getReturnType();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  Name  n  =  name.getReturnType();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	Name  n  =  name.getReturnType();	  Name    n    =    name.getString();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
6	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.length());  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().substring(0,  name.length());	  String    methodName    =    name.getQualifiedName().substring(0,    name.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.length()  +  1);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().substring(0,  name.length()  +  1);	  String    methodName    =    name.getQualifiedName().substring(0,    name.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
8	[BUG]  [BUGGY]  MethodName  n  =  name.getReturnType();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  n  =  name.getReturnType();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  n  =  name.getReturnType();	  MethodName    n    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  MethodName  n  =  name.getRawClassName();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  n  =  name.getRawClassName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  n  =  name.getRawClassName();	  MethodName    n    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  MethodName  n  =  name.getRawClass();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  n  =  name.getRawClass();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  n  =  name.getRawClass();	  MethodName    n    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName()  + ": ";  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getSimpleName()  + ": ";  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName()  + ": ";	  String    methodName    =    name.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName(),  n);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getSimpleName(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName(),  n);	  String    methodName    =    name.getSimpleName();    	non-compiled	[CE]  ';'  expected	10	None	replace
13	[BUG]  [BUGGY]  n  =  t.getCurrentName()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n  =  t.getCurrentName()  +  1;  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n  =  t.getCurrentName()  +  1;	  n    =    t.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
14	[BUG]  [BUGGY]  n  =  t.getCurrentName().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n  =  t.getCurrentName().toLowerCase();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n  =  t.getCurrentName().toLowerCase();	  n    =    t.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
15	[BUG]  [BUGGY]  n  =  t.getCurrentName().toString();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n  =  t.getCurrentName().toString();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n  =  t.getCurrentName().toString();	  n    =    t.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
16	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName(),  n);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName(),  n);	  String    methodName    =    name.getQualifiedName();    	non-compiled	[CE]  ';'  expected	18	None	replace
17	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName()  + ": ";  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName()  + ": ";  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName()  + ": ";	  String    methodName    =    name.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
18	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName()  + "_ ";  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName()  + "_ ";  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName()  + "_ ";	  String    methodName    =    name.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
19	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().getQualifiedName(),  n);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().getQualifiedName(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().getQualifiedName(),  n);	  String    methodName    =    name.getPrefix().getQualifiedName();    	non-compiled	[CE]  ';'  expected	16	None	replace
20	[BUG]  [BUGGY]  t  =  name.getCurrentToken();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  t  =  name.getCurrentToken();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	t  =  name.getCurrentToken();	  t    =    n.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().getQualifiedName(),  n);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getSimpleName().getQualifiedName(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().getQualifiedName(),  n);	  String    methodName    =    name.getSimpleName().getQualifiedName();    	non-compiled	[CE]  ';'  expected	8	None	replace
22	[BUG]  [BUGGY]  String  methodName  =  name.getLastChild().getString(),  n);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getLastChild().getString(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getLastChild().getString(),  n);	  String    methodName    =    name.getFirstChild().getString(),    n);    	non-compiled	[CE]  ';'  expected	22	None	replace
23	[BUG]  [BUGGY]  String  methodName  =  name.getFirstChild().getString(),  t,  n);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getFirstChild().getString(),  t,  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getFirstChild().getString(),  t,  n);	  String    methodName    =    name.getFirstChild().getString(),    n);    	non-compiled	[CE]  ';'  expected	22	None	replace
24	[BUG]  [BUGGY]  String  methodName  =  name.getFirstChild().getString(),  t);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getFirstChild().getString(),  t);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getFirstChild().getString(),  t);	  String    methodName    =    name.getFirstChild().getString(),    n);    	non-compiled	[CE]  ';'  expected	22	None	replace
25	[BUG]  [BUGGY]  String  methodName  =  name.getString().getString(),  n);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getString().getString(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getString().getString(),  n);	  String    methodName    =    name.getFirstChild().getString(),    n);    	non-compiled	[CE]  ';'  expected	22	None	replace
26	[BUG]  [BUGGY]  String  methodName  =  n.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  n.getLastChild().getString();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  n.getLastChild().getString();	  String    methodName    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().toString(),  n);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().toString(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().toString(),  n);	  String    methodName    =    name.getPrefix().toString();    	non-compiled	[CE]  ';'  expected	15	None	replace
28	[BUG]  [BUGGY]  String  methodName  =  name.getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getValue();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getValue();	  String    methodName    =    name.getKey();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
29	[BUG]  [BUGGY]  String  methodName  =  t.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  t.getLastChild().getString();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  t.getLastChild().getString();	  String    methodName    =    name.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  String  methodName  =  name.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getLastChild().getQualifiedName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getLastChild().getQualifiedName();	  String    methodName    =    name.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
31	[BUG]  [BUGGY]  String  methodName  =  name.getFirstChild().getQualifiedName(),  n);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getFirstChild().getQualifiedName(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getFirstChild().getQualifiedName(),  n);	  String    methodName    =    name.getFirstChild().getQualifiedName();    	non-compiled	[CE]  ';'  expected	21	None	replace
32	[BUG]  [BUGGY]  String  methodName  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  n.getFirstChild().getQualifiedName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  n.getFirstChild().getQualifiedName();	  String    methodName    =    name.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
33	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().getString(),  t);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().getString(),  t);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().getString(),  t);	  String    methodName    =    name.getPrefix().getString(),    n);    	non-compiled	[CE]  ';'  expected	27	None	replace
34	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().getString(),  t,  n);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().getString(),  t,  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().getString(),  t,  n);	  String    methodName    =    name.getPrefix().getString(),    n);    	non-compiled	[CE]  ';'  expected	27	None	replace
35	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().getString(),  n);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().getString(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().getString(),  n);	  String    methodName    =    name.getPrefix().getString(),    n);    	non-compiled	[CE]  ';'  expected	27	None	replace
36	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().getString()  + ",  n ");  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().getString()  + ",  n ");  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().getString()  + ",  n ");	  String    methodName    =    name.getPrefix().getString(),    n);    	non-compiled	[CE]  	27	None	replace
37	[BUG]  [BUGGY]  t  =  name.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  t  =  name.getCurrentName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	t  =  name.getCurrentName();	  t    =    n.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  t  =  n.getCurrentName()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  t  =  n.getCurrentName()  +  1;  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	t  =  n.getCurrentName()  +  1;	  t    =    n.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  t  =  n.getRawClass();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  t  =  n.getRawClass();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	t  =  n.getRawClass();	  t    =    n.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  MethodName  t  =  name.getReturnType();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  t  =  name.getReturnType();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  t  =  name.getReturnType();	  MethodName    t    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
41	[BUG]  [BUGGY]  MethodName  methodName  =  name.getMethodName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  methodName  =  name.getMethodName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  methodName  =  name.getMethodName();	  MethodName    t    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
42	[BUG]  [BUGGY]  MethodName  t  =  name.getRawClass();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  t  =  name.getRawClass();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  t  =  name.getRawClass();	  MethodName    t    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
43	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().trim(),  n);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().trim(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().trim(),  n);	  String    methodName    =    name.getQualifiedName().trim();    	non-compiled	[CE]  ';'  expected	29	None	replace
44	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().getSimpleName(),  n);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().getSimpleName(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().getSimpleName(),  n);	  String    methodName    =    name.getQualifiedName().getSimpleName();    	non-compiled	[CE]  ';'  expected	23	None	replace
45	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().getSimpleName()  + ": ";  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().getSimpleName()  + ": ";  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().getSimpleName()  + ": ";	  String    methodName    =    name.getQualifiedName().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
46	[BUG]  [BUGGY]  String  methodName  =  name.getLastChild().getSimpleName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getLastChild().getSimpleName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getLastChild().getSimpleName();	  String    methodName    =    name.getFirstChild().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
47	[BUG]  [BUGGY]  String  methodName  =  n.getFirstChild().getSimpleName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  n.getFirstChild().getSimpleName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  n.getFirstChild().getSimpleName();	  String    methodName    =    name.getFirstChild().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
48	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().trim(),  n);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getSimpleName().trim(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().trim(),  n);	  String    methodName    =    name.getSimpleName().trim();    	non-compiled	[CE]  ';'  expected	30	None	replace
49	[BUG]  [BUGGY]  String  methodName  =  t.getString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  t.getString();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  t.getString();	  String    methodName    =    n.getString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
50	[BUG]  [BUGGY]  String  methodName  =  n.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  n.getQualifiedName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  n.getQualifiedName();	  String    methodName    =    n.getString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
51	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().toLowerCase(Locale.ENGLISH);	  String    methodName    =    name.getPrefix().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
52	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().toLowerCase()  +  1;  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().toLowerCase()  +  1;	  String    methodName    =    name.getPrefix().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
53	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().toLowerCase(),  n);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().toLowerCase(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().toLowerCase(),  n);	  String    methodName    =    name.getPrefix().toLowerCase();    	non-compiled	[CE]  ';'  expected	17	None	replace
54	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().toLowerCase(Locale.ENGLISH);	  String    methodName    =    name.getQualifiedName().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
55	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().toLowerCase()  +  1;  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().toLowerCase()  +  1;	  String    methodName    =    name.getQualifiedName().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
56	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().toLowerCase(),  n);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().toLowerCase(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().toLowerCase(),  n);	  String    methodName    =    name.getQualifiedName().toLowerCase();    	non-compiled	[CE]  ';'  expected	12	None	replace
57	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getSimpleName().toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().toLowerCase(Locale.ENGLISH);	  String    methodName    =    name.getSimpleName().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getSimpleName().toLowerCase()  +  1;  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().toLowerCase()  +  1;	  String    methodName    =    name.getSimpleName().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
59	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().getQualifiedName(),  n);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().getQualifiedName(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().getQualifiedName(),  n);	  String    methodName    =    name.getQualifiedName().getQualifiedName();    	non-compiled	[CE]  ';'  expected	11	None	replace
60	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().getQualifiedName()  + "_ ";  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().getQualifiedName()  + "_ ";  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().getQualifiedName()  + "_ ";	  String    methodName    =    name.getQualifiedName().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
61	[BUG]  [BUGGY]  MethodName  t  =  methodName.getMethod();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  t  =  methodName.getMethod();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  t  =  methodName.getMethod();	  MethodName    t    =    name.getMethod();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
62	[BUG]  [BUGGY]  n.setString(name.getString()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n.setString(name.getString()  +  1);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n.setString(name.getString()  +  1);	  n.setString(name.getString());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
63	[BUG]  [BUGGY]  n.setString(methodName.getString());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n.setString(methodName.getString());  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n.setString(methodName.getString());	  n.setString(name.getString());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
64	[BUG]  [BUGGY]  n.setString(name.getString()  + ": ");  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n.setString(name.getString()  + ": ");  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n.setString(name.getString()  + ": ");	  n.setString(name.getString());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  MethodName  m  =  name.getReturnType();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  m  =  name.getReturnType();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  m  =  name.getReturnType();	  MethodName    m    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
66	[BUG]  [BUGGY]  MethodName  m  =  name.getRawClass();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  m  =  name.getRawClass();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  m  =  name.getRawClass();	  MethodName    m    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
67	[BUG]  [BUGGY]  MethodName  m  =  methodName.getMethodName();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  m  =  methodName.getMethodName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  m  =  methodName.getMethodName();	  MethodName    m    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
68	[BUG]  [BUGGY]  MethodName  m  =  name.getMethod();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  m  =  name.getMethod();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  m  =  name.getMethod();	  MethodName    m    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
69	[BUG]  [BUGGY]  String  methodName  =  name.getFirstChild().getQualifiedName(n);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getFirstChild().getQualifiedName(n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getFirstChild().getQualifiedName(n);	  String    methodName    =    name.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
70	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().getString(),  n  +  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().getString(),  n  +  1);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().getString(),  n  +  1);	  String    methodName    =    name.getPrefix().getString(),    n);    	non-compiled	[CE]  ';'  expected	27	None	replace
71	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().getString(),  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().getString(),  0);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().getString(),  0);	  String    methodName    =    name.getPrefix().getString(),    n);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
72	[BUG]  [BUGGY]  t  =  n.getSimpleName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  t  =  n.getSimpleName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	t  =  n.getSimpleName();	  t    =    n.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  Name  n  =  name.getKey();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  Name  n  =  name.getKey();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	Name  n  =  name.getKey();	  Name    n    =    name.getString();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
74	[BUG]  [BUGGY]  MethodName  methodName  =  name.getMethod();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  methodName  =  name.getMethod();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  methodName  =  name.getMethod();	  MethodName    t    =    name.getMethod();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
75	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.getQualifiedName().length()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.getQualifiedName().length()  -  1);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().substring(0,  name.getQualifiedName().length()  -  1);	  String    methodName    =    name.getQualifiedName().toString();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
76	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.getQualifiedName().length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.getQualifiedName().length()  -  2);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().substring(0,  name.getQualifiedName().length()  -  2);	  String    methodName    =    name.getQualifiedName().toString();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  t  =  n.nextToken();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  t  =  n.nextToken();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	t  =  n.nextToken();	  t    =    n.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
78	[BUG]  [BUGGY]  t  =  name.nextToken();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  t  =  name.nextToken();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	t  =  name.nextToken();	  t    =    n.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
79	[BUG]  [BUGGY]  n  =  t.getSimpleName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n  =  t.getSimpleName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n  =  t.getSimpleName();	  n    =    t.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
80	[BUG]  [BUGGY]  n  =  name.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n  =  name.getCurrentName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n  =  name.getCurrentName();	  n    =    t.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
81	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix().getQualifiedName(n);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix().getQualifiedName(n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix().getQualifiedName(n);	  String    methodName    =    name.getPrefix().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
82	[BUG]  [BUGGY]  String  methodName  =  name.getString().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getString().toLowerCase();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getString().toLowerCase();	  String    methodName    =    name.getPrefix().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
83	[BUG]  [BUGGY]  String  methodName  =  name.getPrefix();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getPrefix();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getPrefix();	  String    methodName    =    name.getPrefix().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
84	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName()  + ": "  +  t.getMessage();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getSimpleName()  + ": "  +  t.getMessage();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName()  + ": "  +  t.getMessage();	  String    methodName    =    name.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
85	[BUG]  [BUGGY]  MethodName  n  =  name.getMethodName(t);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  n  =  name.getMethodName(t);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  n  =  name.getMethodName(t);	  MethodName    n    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
86	[BUG]  [BUGGY]  String  methodName  =  n.getString()  + ": "+name.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  n.getString()  + ": "+name.getClass().getName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  n.getString()  + ": "+name.getClass().getName();	  String    methodName    =    n.getString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
87	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.length()));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().substring(0,  name.length()));  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().substring(0,  name.length()));	  String    methodName    =    name.getQualifiedName().substring(0,    name.length()    -    1);    	non-compiled	[CE]  ';'  expected	14	None	replace
88	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().toString(),  n);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getSimpleName().toString(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().toString(),  n);	  String    methodName    =    name.getSimpleName().toString();    	non-compiled	[CE]  ';'  expected	9	None	replace
89	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().toLowerCase(),  n);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getSimpleName().toLowerCase(),  n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().toLowerCase(),  n);	  String    methodName    =    name.getSimpleName().toLowerCase();    	non-compiled	[CE]  ';'  expected	7	None	replace
90	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().toUpperCase();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().toUpperCase();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().toUpperCase();	  String    methodName    =    name.getQualifiedName().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
91	[BUG]  [BUGGY]  String  methodName  =  name.getSimpleName().getQualifiedName(n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getSimpleName().getQualifiedName(n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getSimpleName().getQualifiedName(n);	  String    methodName    =    name.getSimpleName().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
92	[BUG]  [BUGGY]  String  methodName  =  name.getFirstChild().getString(),  n  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getFirstChild().getString(),  n  +  1);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getFirstChild().getString(),  n  +  1);	  String    methodName    =    name.getFirstChild().getString(),    n);    	non-compiled	[CE]  ';'  expected	22	None	replace
93	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().getQualifiedName(n);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().getQualifiedName(n);  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().getQualifiedName(n);	  String    methodName    =    name.getQualifiedName().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
94	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName()  + ": "  +  GOOG.equals(name.getString());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName()  + ": "  +  GOOG.equals(name.getString());  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName()  + ": "  +  GOOG.equals(name.getString());	  String    methodName    =    name.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
95	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName()  + "_ "+name.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName()  + "_ "+name.getQualifiedName();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName()  + "_ "+name.getQualifiedName();	  String    methodName    =    name.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
96	[BUG]  [BUGGY]  n.setString(GOOG.getString());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n.setString(GOOG.getString());  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n.setString(GOOG.getString());	  n.setString(name.getString());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
97	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().replace('.',  '_');  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().replace('.',  '_');  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().replace('.',  '_');	  String    methodName    =    name.getQualifiedName().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
98	[BUG]  [BUGGY]  String  methodName  =  name.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.toLowerCase();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.toLowerCase();	  String    methodName    =    name.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
99	[BUG]  [BUGGY]  MethodName  t  =  name.getDeclaringClass();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  t  =  name.getDeclaringClass();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  t  =  name.getDeclaringClass();	  MethodName    t    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
100	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName().replace('.',  '.');  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName().replace('.',  '.');  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName().replace('.',  '.');	  String    methodName    =    name.getQualifiedName().trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
101	[BUG]  [BUGGY]  String  methodName  =  name.toString()  + ": ";  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.toString()  + ": ";  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.toString()  + ": ";	  String    methodName    =    name.toString();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
102	[BUG]  [BUGGY]  Name  n  =  name.getValue();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  Name  n  =  name.getValue();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	Name  n  =  name.getValue();	  Name    n    =    name.getString();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
103	[BUG]  [BUGGY]  n.setString(name.getName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n.setString(name.getName());  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n.setString(name.getName());	  n.setString(name.getString());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
104	[BUG]  [BUGGY]  String  methodName  =  name.getQualifiedName()  + "_ "  +  name.getString();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  String  methodName  =  name.getQualifiedName()  + "_ "  +  name.getString();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	String  methodName  =  name.getQualifiedName()  + "_ "  +  name.getString();	  String    methodName    =    name.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
105	[BUG]  [BUGGY]  MethodName  m  =  name.getDeclaringClass();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  m  =  name.getDeclaringClass();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  m  =  name.getDeclaringClass();	  MethodName    m    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
106	[BUG]  [BUGGY]  MethodName  t  =  name.getMethod( "getInstance ");  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  t  =  name.getMethod( "getInstance ");  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  t  =  name.getMethod( "getInstance ");	  MethodName    t    =    name.getMethod();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
107	[BUG]  [BUGGY]  n  =  t.getSingleNode();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n  =  t.getSingleNode();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n  =  t.getSingleNode();	  n    =    t.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
108	[BUG]  [BUGGY]  n  =  t.getCurrentName().trim();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  n  =  t.getCurrentName().trim();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	n  =  t.getCurrentName().trim();	  n    =    t.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
109	[BUG]  [BUGGY]  MethodName  n  =  name.getDeclaringClass();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (name.getType()  ==  Token.NAME  &&  GOOG.equals(name.getString()))  {          [BUGGY]  MethodName  n  =  name.getDeclaringClass();  [BUGGY]      if  (     "base     ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	157	157	1	replace	MethodName  n  =  name.getDeclaringClass();	  MethodName    n    =    name.getMethodName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
