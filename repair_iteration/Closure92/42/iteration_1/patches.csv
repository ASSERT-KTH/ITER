bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  n);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  n);  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  n);	      	non-compiled	[CE]  orphaned  case	5	None	replace
2	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  Context.reportCodeChange();  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.reportCodeChange();	      	non-compiled	[CE]  orphaned  case	5	None	replace
3	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage());  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage());  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage());	      	non-compiled	[CE]  orphaned  case	5	None	replace
4	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT);  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT);  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT);	      	non-compiled	[CE]  orphaned  case	5	None	replace
5	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  orphaned  case	2	None	replace
7	[BUG]  [BUGGY]  throw  new  AssertionFailedError( " ");  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  throw  new  AssertionFailedError( " ");  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	throw  new  AssertionFailedError( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  orphaned  case	2	None	replace
8	[BUG]  [BUGGY]  safeMultiply( "setCssNameMapping ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  safeMultiply( "setCssNameMapping ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	safeMultiply( "setCssNameMapping ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }	  }    else    if(methodName.equals(   "setCssNameMapping   ".equals(methodName))    {    processSetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  	4	None	replace
9	[BUG]  [BUGGY]  safeNameMapping.equals(methodName)  {  processSetCssNameMapping(t,  n,  parent);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  safeNameMapping.equals(methodName)  {  processSetCssNameMapping(t,  n,  parent);  }  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	safeNameMapping.equals(methodName)  {  processSetCssNameMapping(t,  n,  parent);  }	  }    else    if(methodName.equals(   "setCssNameMapping   ".equals(methodName))    {    processSetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
10	[BUG]  [BUGGY]  }  else  if( "setCssNameMapping ".equals(methodName))  {  processCssNameMapping(t,  n,  parent);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  }  else  if( "setCssNameMapping ".equals(methodName))  {  processCssNameMapping(t,  n,  parent);  }  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	}  else  if( "setCssNameMapping ".equals(methodName))  {  processCssNameMapping(t,  n,  parent);  }	  }    else    if(   "setCssNameMapping   ".equals(methodName))    {    processGetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_DEPRECATED));  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_DEPRECATED));  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_DEPRECATED));	      	non-compiled	[CE]  orphaned  case	5	None	replace
12	[BUG]  [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError());  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError());  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  new  AssertionFailedError());	      	non-compiled	[CE]  orphaned  case	5	None	replace
13	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_NAME));  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_NAME));  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_NAME));	      	non-compiled	[CE]  orphaned  case	5	None	replace
14	[BUG]  [BUGGY]  n.removeChild(methodName);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  n.removeChild(methodName);  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	n.removeChild(methodName);	      	non-compiled	[CE]  orphaned  case	5	None	replace
15	[BUG]  [BUGGY]  n.removeChild(methodName);  break;  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  n.removeChild(methodName);  break;  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	n.removeChild(methodName);  break;	      	non-compiled	[CE]  orphaned  case	5	None	replace
16	[BUG]  [BUGGY]  parent.replaceChild(n,  t);  break;  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  parent.replaceChild(n,  t);  break;  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  t);  break;	      	non-compiled	[CE]  orphaned  case	5	None	replace
17	[BUG]  [BUGGY]  }  else  if( "setCssNameMapping ".equals(methodName)&&  processSetCssNameMapping(t,  n,  parent);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    compiler.reportCodeChange();  }  else  if  (   "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }    [BUGGY]  }  else  if( "setCssNameMapping ".equals(methodName)&&  processSetCssNameMapping(t,  n,  parent);  [BUGGY]    break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	}  else  if( "setCssNameMapping ".equals(methodName)&&  processSetCssNameMapping(t,  n,  parent);	  }    else    if(   "setCssNameMapping   ".equals(methodName))    {    processSetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  	1	None	replace
