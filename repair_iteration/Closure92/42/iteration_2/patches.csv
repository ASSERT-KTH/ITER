bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(methodName));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(methodName));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(methodName));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Throwables.throw  new  IllegalStateException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  methodName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  methodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Throwables.throw  new  IllegalArgumentException( " ",  methodName);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  n.removeChild(parent);  break;  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  n.removeChild(parent);  break;  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	n.removeChild(parent);  break;	  n.removeChild(methodName);    break;    	non-compiled	[CE]  orphaned  case	15	None	replace
5	[BUG]  [BUGGY]  n.removeChild(getCssName());  break;  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  n.removeChild(getCssName());  break;  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	n.removeChild(getCssName());  break;	  n.removeChild(methodName);    break;    	non-compiled	[CE]  orphaned  case	15	None	replace
6	[BUG]  [BUGGY]  safeNameMapping.equals(methodName)  {  processCssNameMapping(t,  n,  parent);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  safeNameMapping.equals(methodName)  {  processCssNameMapping(t,  n,  parent);  }  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	safeNameMapping.equals(methodName)  {  processCssNameMapping(t,  n,  parent);  }	  safeNameMapping.equals(methodName)    {    processSetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
7	[BUG]  [BUGGY]  safeNameMapping.equals(methodName)  {  processSetCssNameMapping(t,  n,  parent,  safeNameMapping);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  safeNameMapping.equals(methodName)  {  processSetCssNameMapping(t,  n,  parent,  safeNameMapping);  }  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	safeNameMapping.equals(methodName)  {  processSetCssNameMapping(t,  n,  parent,  safeNameMapping);  }	  safeNameMapping.equals(methodName)    {    processSetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
8	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_MESSAGE));  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_MESSAGE));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  NON_GLOBAL_MESSAGE));	  Context.reportCodeChange();    	non-compiled	[CE]  orphaned  case	2	None	replace
9	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent));  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  parent));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent));	  Context.reportCodeChange();    	non-compiled	[CE]  orphaned  case	2	None	replace
10	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAME));  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAME));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  NON_GLOBAL_NAME));	  Context.reportCodeChange();    	non-compiled	[CE]  orphaned  case	2	None	replace
11	[BUG]  [BUGGY]  safeArray( "setCssNameMapping ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  safeArray( "setCssNameMapping ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	safeArray( "setCssNameMapping ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }	  safeMultiply(   "setCssNameMapping   ".equals(methodName))    {    processSetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  	8	None	replace
12	[BUG]  [BUGGY]  safeName( "setCssNameMapping ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  safeName( "setCssNameMapping ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	safeName( "setCssNameMapping ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }	  safeMultiply(   "setCssNameMapping   ".equals(methodName))    {    processSetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  	8	None	replace
13	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  methodName);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  methodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  methodName);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.EXPR_RESULT,    n);    	non-compiled	[CE]  orphaned  case	1	None	replace
14	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  parent);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  parent);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  parent);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.EXPR_RESULT,    n);    	non-compiled	[CE]  orphaned  case	1	None	replace
15	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  n,  parent);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  n,  parent);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  n,  parent);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.EXPR_RESULT,    n);    	non-compiled	[CE]  orphaned  case	1	None	replace
16	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  token);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  token);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  token);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.EXPR_RESULT,    n);    	non-compiled	[CE]  orphaned  case	1	None	replace
17	[BUG]  [BUGGY]  parent.replaceChild(n,  1);  break;  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  parent.replaceChild(n,  1);  break;  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  1);  break;	  parent.replaceChild(n,    t);    break;    	non-compiled	[CE]  orphaned  case	16	None	replace
18	[BUG]  [BUGGY]  parent.replaceChild(n,  this);  break;  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  parent.replaceChild(n,  this);  break;  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  this);  break;	  parent.replaceChild(n,    t);    break;    	non-compiled	[CE]  orphaned  case	16	None	replace
19	[BUG]  [BUGGY]  parent.replaceChild(n,  2);  break;  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  parent.replaceChild(n,  2);  break;  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  2);  break;	  parent.replaceChild(n,    t);    break;    	non-compiled	[CE]  orphaned  case	16	None	replace
20	[BUG]  [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError(),  t);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError(),  t);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  new  AssertionFailedError(),  t);	  parent.replaceChild(n,    new    AssertionFailedError());    	non-compiled	[CE]  orphaned  case	12	None	replace
21	[BUG]  [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError(t));  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError(t));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  new  AssertionFailedError(t));	  parent.replaceChild(n,    new    AssertionFailedError());    	non-compiled	[CE]  orphaned  case	12	None	replace
22	[BUG]  [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError(),  methodName);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError(),  methodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  new  AssertionFailedError(),  methodName);	  parent.replaceChild(n,    new    AssertionFailedError());    	non-compiled	[CE]  orphaned  case	12	None	replace
23	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_DEPRECATED,  methodName));  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_DEPRECATED,  methodName));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  NON_GLOBAL_DEPRECATED,  methodName));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_DEPRECATED));    	non-compiled	[CE]  orphaned  case	11	None	replace
24	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_DEPRECATED,  methodName));  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_DEPRECATED,  methodName));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_DEPRECATED,  methodName));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_DEPRECATED));    	non-compiled	[CE]  orphaned  case	11	None	replace
25	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NO_GLOBAL_DEPRECATED));  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NO_GLOBAL_DEPRECATED));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  NO_GLOBAL_DEPRECATED));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_DEPRECATED));    	non-compiled	[CE]  orphaned  case	11	None	replace
26	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  methodName));  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  parent,  methodName));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  methodName));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_DEPRECATED));    	non-compiled	[CE]  orphaned  case	11	None	replace
27	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Missing  method  name: "  +  methodName);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  throw  new  AssertionFailedError( "Missing  method  name: "  +  methodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	throw  new  AssertionFailedError( "Missing  method  name: "  +  methodName);	  throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
28	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "msg.unknown.method.name ");  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  throw  new  AssertionFailedError( "msg.unknown.method.name ");  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	throw  new  AssertionFailedError( "msg.unknown.method.name ");	  throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
29	[BUG]  [BUGGY]  n.removeChild(parent);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  n.removeChild(parent);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	n.removeChild(parent);	  n.removeChild(methodName);    	non-compiled	[CE]  orphaned  case	14	None	replace
30	[BUG]  [BUGGY]  n.removeChild(getCssName());  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  n.removeChild(getCssName());  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	n.removeChild(getCssName());	  n.removeChild(methodName);    	non-compiled	[CE]  orphaned  case	14	None	replace
31	[BUG]  [BUGGY]  n.removeChild(name);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  n.removeChild(name);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	n.removeChild(name);	  n.removeChild(methodName);    	non-compiled	[CE]  orphaned  case	14	None	replace
32	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  name);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  name);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  name);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  case	4	None	replace
33	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAME,  methodName));  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_NAME,  methodName));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  NON_GLOBAL_NAME,  methodName));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_NAME));    	non-compiled	[CE]  orphaned  case	13	None	replace
34	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_NAME,  methodName));  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_NAME,  methodName));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  NON_GLOBAL_NAME,  methodName));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_NAME));    	non-compiled	[CE]  orphaned  case	13	None	replace
35	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NO_GLOBAL_NAME));  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  parent,  NO_GLOBAL_NAME));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  NO_GLOBAL_NAME));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_NAME));    	non-compiled	[CE]  orphaned  case	13	None	replace
36	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  methodName);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  methodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  methodName);	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  orphaned  case	3	None	replace
37	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  n);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  n);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  n);	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  orphaned  case	3	None	replace
38	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getReturnCode());  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getReturnCode());  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getReturnCode());	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  orphaned  case	3	None	replace
39	[BUG]  [BUGGY]  }  else  if( "setCssNameMapping   ".equals(methodName)||  processSetCssNameMapping(t,  n,  parent);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  }  else  if( "setCssNameMapping   ".equals(methodName)||  processSetCssNameMapping(t,  n,  parent);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	}  else  if( "setCssNameMapping   ".equals(methodName)||  processSetCssNameMapping(t,  n,  parent);	  }    else    if(   "setCssNameMapping   ".equals(methodName)&&    processSetCssNameMapping(t,    n,    parent);    	non-compiled	[CE]  	17	None	replace
40	[BUG]  [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError(),  false);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError(),  false);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  new  AssertionFailedError(),  false);	  parent.replaceChild(n,    new    AssertionFailedError());    	non-compiled	[CE]  orphaned  case	12	None	replace
41	[BUG]  [BUGGY]  n.replaceChild(parent,  methodName);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  n.replaceChild(parent,  methodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	n.replaceChild(parent,  methodName);	  n.removeChild(methodName);    	non-compiled	[CE]  orphaned  case	14	None	replace
42	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  null);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  null);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  null);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  case	4	None	replace
43	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  MethodName);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  MethodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.EXPR_RESULT,  MethodName);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  case	4	None	replace
44	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  Token.EXPR_RESULT);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  Token.EXPR_RESULT);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(n,  Token.EXPR_RESULT);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.EXPR_RESULT,    n);    	non-compiled	[CE]  orphaned  case	1	None	replace
45	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(methodName));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(methodName));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(methodName));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  throw  new  AssertionFailedException( " ");  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  throw  new  AssertionFailedException( " ");  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	throw  new  AssertionFailedException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  orphaned  case	6	None	replace
47	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "msg.invalid.method ",  methodName);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  throw  new  AssertionFailedError( "msg.invalid.method ",  methodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	throw  new  AssertionFailedError( "msg.invalid.method ",  methodName);	  throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
48	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  INVALID_NAME));  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  parent,  INVALID_NAME));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  INVALID_NAME));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_NAME));    	non-compiled	[CE]  orphaned  case	13	None	replace
49	[BUG]  [BUGGY]  safely( "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  safely( "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	safely( "setCssNameMapping   ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }	  safeMultiply(   "setCssNameMapping   ".equals(methodName))    {    processSetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  	8	None	replace
50	[BUG]  [BUGGY]  safeNameMapping.equals(methodName)  {  processSetStdNameMapping(t,  n,  parent);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  safeNameMapping.equals(methodName)  {  processSetStdNameMapping(t,  n,  parent);  }  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	safeNameMapping.equals(methodName)  {  processSetStdNameMapping(t,  n,  parent);  }	  safeNameMapping.equals(methodName)    {    processSetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
51	[BUG]  [BUGGY]  }  else  if( "setCssNameMapping   ".equals(methodName)&&  processPropertySetCssNameMapping(t,  n,  parent);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  }  else  if( "setCssNameMapping   ".equals(methodName)&&  processPropertySetCssNameMapping(t,  n,  parent);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	}  else  if( "setCssNameMapping   ".equals(methodName)&&  processPropertySetCssNameMapping(t,  n,  parent);	  }    else    if(   "setCssNameMapping   ".equals(methodName)&&    processSetCssNameMapping(t,    n,    parent);    	non-compiled	[CE]  	17	None	replace
52	[BUG]  [BUGGY]  }  else  if( "setCssNameMapping   ".equals(methodName)&&  processProcessNameMapping(t,  n,  parent);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  }  else  if( "setCssNameMapping   ".equals(methodName)&&  processProcessNameMapping(t,  n,  parent);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	}  else  if( "setCssNameMapping   ".equals(methodName)&&  processProcessNameMapping(t,  n,  parent);	  }    else    if(   "setCssNameMapping   ".equals(methodName)&&    processSetCssNameMapping(t,    n,    parent);    	non-compiled	[CE]  	17	None	replace
53	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  DEPRECATED));  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  parent,  DEPRECATED));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  DEPRECATED));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_DEPRECATED));    	non-compiled	[CE]  orphaned  case	11	None	replace
54	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  INVALID_DEPRECATED));  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  parent,  INVALID_DEPRECATED));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  INVALID_DEPRECATED));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_DEPRECATED));    	non-compiled	[CE]  orphaned  case	11	None	replace
55	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName);	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  orphaned  case	3	None	replace
56	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR,  methodName));  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR,  methodName));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR,  methodName));	  Context.reportCodeChange();    	non-compiled	[CE]  orphaned  case	2	None	replace
57	[BUG]  [BUGGY]  }  else  if( "setCssNameMapping   ".equals(methodName)&&  processConstNameMapping(t,  n,  parent);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  }  else  if( "setCssNameMapping   ".equals(methodName)&&  processConstNameMapping(t,  n,  parent);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	}  else  if( "setCssNameMapping   ".equals(methodName)&&  processConstNameMapping(t,  n,  parent);	  }    else    if(   "setCssNameMapping   ".equals(methodName)&&    processSetCssNameMapping(t,    n,    parent);    	non-compiled	[CE]  	17	None	replace
58	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  method  name: "  +  methodName);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  throw  new  AssertionFailedError( "Unexpected  method  name: "  +  methodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	throw  new  AssertionFailedError( "Unexpected  method  name: "  +  methodName);	  throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
59	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(token.EXPR_RESULT,  methodName);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(token.EXPR_RESULT,  methodName);  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(token.EXPR_RESULT,  methodName);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  case	4	None	replace
60	[BUG]  [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError(0));  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  parent.replaceChild(n,  new  AssertionFailedError(0));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  new  AssertionFailedError(0));	  parent.replaceChild(n,    new    AssertionFailedError());    	non-compiled	[CE]  orphaned  case	12	None	replace
61	[BUG]  [BUGGY]  safeNameMapping.equals(methodName)  {  processSetSsNameMapping(t,  n,  parent);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  safeNameMapping.equals(methodName)  {  processSetSsNameMapping(t,  n,  parent);  }  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	safeNameMapping.equals(methodName)  {  processSetSsNameMapping(t,  n,  parent);  }	  safeNameMapping.equals(methodName)    {    processSetCssNameMapping(t,    n,    parent);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
62	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Throwables.throw  new  IllegalArgumentException( ", ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  parent,  STRING_LITERAL_DEPRECATED));  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  Context.report(JSError.make(t,  n,  parent,  STRING_LITERAL_DEPRECATED));  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	Context.report(JSError.make(t,  n,  parent,  STRING_LITERAL_DEPRECATED));	  Context.report(JSError.make(t,    n,    parent,    NON_GLOBAL_DEPRECATED));    	non-compiled	[CE]  orphaned  case	11	None	replace
65	[BUG]  [BUGGY]  parent.replaceChild(n,  old);  break;  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      compiler.reportCodeChange();  }  else  if  (     "setCssNameMapping     ".equals(methodName))  {  processSetCssNameMapping(t,  n,  parent);  }  }      [BUGGY]  parent.replaceChild(n,  old);  break;  [BUGGY]      break;  case  Token.ASSIGN:  case  Token.NAME:    [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	195	195	1	replace	parent.replaceChild(n,  old);  break;	  parent.replaceChild(n,    t);    break;    	non-compiled	[CE]  orphaned  case	16	None	replace
