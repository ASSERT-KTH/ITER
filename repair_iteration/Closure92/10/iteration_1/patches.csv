bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.addProvide(node,  module,  false  /*  implicit  */);  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.addProvide(node,  module,  false  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.addProvide(node,  module,  false  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
2	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.addProvide(node,  module,  true  /*  implicit  */);  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.addProvide(node,  module,  true  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.addProvide(node,  module,  true  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
3	[BUG]  [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  false  /*  implicit  */));  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  false  /*  implicit  */));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	providedNames.put(prefixNs,  new  ProvidedName(node,  module,  false  /*  implicit  */));	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
4	[BUG]  [BUGGY]  AssertionFailedError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  explicit));  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionFailedError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  explicit));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionFailedError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  explicit));	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
5	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(pos).addProvide(node,  module,  false  /*  implicit  */);  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(pos).addProvide(node,  module,  false  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(pos).addProvide(node,  module,  false  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.get(pos).addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	3	None	replace
6	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(pos).addProvide(node,  module,  true  /*  implicit  */);  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(pos).addProvide(node,  module,  true  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(pos).addProvide(node,  module,  true  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.get(pos).addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	3	None	replace
7	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */);  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.get(pos).addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	3	None	replace
8	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  false  /*  implicit  */));  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  false  /*  implicit  */));  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  false  /*  implicit  */));  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(ns,    module,    false    /*    implicit    */));    }    	non-compiled	[CE]  ')'  expected	10	None	replace
9	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  true  /*  implicit  */));  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  true  /*  implicit  */));  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  true  /*  implicit  */));  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(ns,    module,    false    /*    implicit    */));    }    	non-compiled	[CE]  ')'  expected	10	None	replace
10	[BUG]  [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  false  /*  implicit  */));  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  false  /*  implicit  */));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  false  /*  implicit  */));	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(ns,    module,    false    /*    implicit    */));    }    	non-compiled	[CE]  ')'  expected	10	None	replace
11	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.size();  pos++)  {  providedNames.addProvide(node,  module,  false  /*  implicit  */);  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.size();  pos++)  {  providedNames.addProvide(node,  module,  false  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.size();  pos++)  {  providedNames.addProvide(node,  module,  false  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.size();    pos++)    {    providedNames.addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
12	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.size();  pos++)  {  providedNames.addProvide(node,  module,  true  /*  implicit  */);  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.size();  pos++)  {  providedNames.addProvide(node,  module,  true  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.size();  pos++)  {  providedNames.addProvide(node,  module,  true  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.size();    pos++)    {    providedNames.addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
13	[BUG]  [BUGGY]  AssertionFailedError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  prefixNs));  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionFailedError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  prefixNs));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionFailedError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  prefixNs));	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.addProvide(node,    module,    true    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	6	None	replace
14	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  false  /*  implicit  */);  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  false  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  false  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	2	None	replace
15	[BUG]  [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  true  /*  implicit  */);  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  true  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  true  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	2	None	replace
16	[BUG]  [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  false  /*  implicit  */);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  false  /*  implicit  */);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	providedNames.put(prefixNs,  new  ProvidedName(node,  module,  false  /*  implicit  */);	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	2	None	replace
17	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  ns.size();  ++i)  {  providedNames.get(i).addProvide(node,  module,  false  /*  implicit  */);  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  i  =  0;  i  <  ns.size();  ++i)  {  providedNames.get(i).addProvide(node,  module,  false  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  i  =  0;  i  <  ns.size();  ++i)  {  providedNames.get(i).addProvide(node,  module,  false  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    i    =    0;    i    <    ns.size();    ++i)    {    providedNames.get(i).addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	8	None	replace
18	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  ns.size();  ++i)  {  providedNames.get(i).addProvide(node,  module,  true  /*  implicit  */);  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  For(int  i  =  0;  i  <  ns.size();  ++i)  {  providedNames.get(i).addProvide(node,  module,  true  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	For(int  i  =  0;  i  <  ns.size();  ++i)  {  providedNames.get(i).addProvide(node,  module,  true  /*  implicit  */);  }	  if(providedNames!=    null)    {    for(int    i    =    0;    i    <    ns.size();    ++i)    {    providedNames.get(i).addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	8	None	replace
19	[BUG]  [BUGGY]  AssertionFailedError  rewriteNewDateGoogNow  =  new  AssertionFailedError(ns.substring(0,  pos));  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionFailedError  rewriteNewDateGoogNow  =  new  AssertionFailedError(ns.substring(0,  pos));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionFailedError  rewriteNewDateGoogNow  =  new  AssertionFailedError(ns.substring(0,  pos));	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
20	[BUG]  [BUGGY]  AssertionFailedError.checkState(providedNames!=  null);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionFailedError.checkState(providedNames!=  null);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionFailedError.checkState(providedNames!=  null);	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
21	[BUG]  [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  true  /*  implicit  */));  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(node,  module,  true  /*  implicit  */));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	providedNames.put(prefixNs,  new  ProvidedName(node,  module,  true  /*  implicit  */));	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
22	[BUG]  [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  true  /*  implicit  */));  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  true  /*  implicit  */));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	providedNames.put(prefixNs,  new  ProvidedName(ns,  module,  true  /*  implicit  */));	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(ns,    module,    false    /*    implicit    */));    }    	non-compiled	[CE]  ')'  expected	10	None	replace
23	[BUG]  [BUGGY]  if(providedNames!=  null)  {  for(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(pos  +  1).addProvide(node,  module,  false  /*  implicit  */);  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  if(providedNames!=  null)  {  for(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(pos  +  1).addProvide(node,  module,  false  /*  implicit  */);  }  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	if(providedNames!=  null)  {  for(int  pos  =  0;  pos  <  ns.length();  pos++)  {  providedNames.get(pos  +  1).addProvide(node,  module,  false  /*  implicit  */);  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
24	[BUG]  [BUGGY]  ns  =  ns.substring(0,  pos);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  ns  =  ns.substring(0,  pos);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	ns  =  ns.substring(0,  pos);	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(ns,    module,    false    /*    implicit    */));    }    	non-compiled	[CE]  ')'  expected	10	None	replace
25	[BUG]  [BUGGY]  AssertionFailedError.checkNotNull(ns);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionFailedError.checkNotNull(ns);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionFailedError.checkNotNull(ns);	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(ns,    module,    false    /*    implicit    */));    }    	non-compiled	[CE]  ')'  expected	10	None	replace
26	[BUG]  [BUGGY]  AssertionFailedError.checkState(ns.length()  ==  0);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionFailedError.checkState(ns.length()  ==  0);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionFailedError.checkState(ns.length()  ==  0);	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(ns,    module,    false    /*    implicit    */));    }    	non-compiled	[CE]  ')'  expected	10	None	replace
27	[BUG]  [BUGGY]  AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  explicit));  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  explicit));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  explicit));	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.size();    pos++)    {    providedNames.addProvide(node,    module,    true    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	7	None	replace
28	[BUG]  [BUGGY]  AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  prefixNs));  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  prefixNs));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  prefixNs));	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.size();    pos++)    {    providedNames.addProvide(node,    module,    true    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	7	None	replace
29	[BUG]  [BUGGY]  AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.size();    pos++)    {    providedNames.addProvide(node,    module,    true    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	7	None	replace
30	[BUG]  [BUGGY]  AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionError.make(node,  module,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR));	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.size();    pos++)    {    providedNames.addProvide(node,    module,    true    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	7	None	replace
31	[BUG]  [BUGGY]  ns  =  ns.substring(pos  +  1);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  ns  =  ns.substring(pos  +  1);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	ns  =  ns.substring(pos  +  1);	  if(providedNames!=    null)    {    for(int    i    =    0;    i    <    ns.size();    ++i)    {    providedNames.get(i).addProvide(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	8	None	replace
32	[BUG]  [BUGGY]  AssertionFailedError.checkState(ns!=  null);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionFailedError.checkState(ns!=  null);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionFailedError.checkState(ns!=  null);	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	2	None	replace
33	[BUG]  [BUGGY]  AssertionFailedError.checkState(node.getType()  ==  Token.NAME);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  AssertionFailedError.checkState(node.getType()  ==  Token.NAME);  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	AssertionFailedError.checkState(node.getType()  ==  Token.NAME);	  if(providedNames!=    null)    {    for(int    pos    =    0;    pos    <    ns.length();    pos++)    {    providedNames.put(prefixNs,    new    ProvidedName(node,    module,    false    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	2	None	replace
34	[BUG]  [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {  providedNames.get(prefixNs).addProvide(  node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }    [BUGGY]  providedNames.put(prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  [BUGGY]    }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.15617376188860607	650	650	1	replace	providedNames.put(prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));	  if(providedNames!=    null)    {    for(int    i    =    0;    i    <    ns.size();    ++i)    {    providedNames.get(i).addProvide(node,    module,    true    /*    implicit    */);    }    	non-compiled	[CE]  ')'  expected	9	None	replace
