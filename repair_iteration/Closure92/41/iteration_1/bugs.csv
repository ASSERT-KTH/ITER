bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(! "base ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();  [BUGGY]  if(! "base ".equals(methodName))  {  [BUGGY]  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  ( "require ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(! "base ".equals(methodName))  {	if  ( "base ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
2	[BUG]  [BUGGY]  if(n.equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();  [BUGGY]  if(n.equals(methodName))  {  [BUGGY]  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  ( "require ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(n.equals(methodName))  {	if  ( "base ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
3	[BUG]  [BUGGY]  if( "base ".equals(methodName)||  methodName.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();  [BUGGY]  if( "base ".equals(methodName)||  methodName.length()  ==  0)  {  [BUGGY]  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  ( "require ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if( "base ".equals(methodName)||  methodName.length()  ==  0)  {	if  ( "base ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
4	[BUG]  [BUGGY]    [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();  [BUGGY]    [BUGGY]  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  ( "require ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	  	if  ( "base ".equals(methodName))  {  	non-compiled	[CE]  orphaned  case	83	None	replace
5	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n)|| "base ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();  [BUGGY]  if(isBaseClassCall(t,  n)|| "base ".equals(methodName))  {  [BUGGY]  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  ( "require ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n)|| "base ".equals(methodName))  {	if  ( "base ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
6	[BUG]  [BUGGY]  if(methodName  ==  null  || "base ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();  [BUGGY]  if(methodName  ==  null  || "base ".equals(methodName))  {  [BUGGY]  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  ( "require ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName  ==  null  || "base ".equals(methodName))  {	if  ( "base ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
7	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();  [BUGGY]  if(isBaseClassCall(t,  n))  {  [BUGGY]  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  ( "require ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n))  {	if  ( "base ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
8	[BUG]  [BUGGY]  if(isBaseClassCall(n)|| "base ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();  [BUGGY]  if(isBaseClassCall(n)|| "base ".equals(methodName))  {  [BUGGY]  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  ( "require ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(n)|| "base ".equals(methodName))  {	if  ( "base ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
9	[BUG]  [BUGGY]  if( "base ".equals(methodName)||  n.startsWith(methodName))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();  [BUGGY]  if( "base ".equals(methodName)||  n.startsWith(methodName))  {  [BUGGY]  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  ( "require ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if( "base ".equals(methodName)||  n.startsWith(methodName))  {	if  ( "base ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
