bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(methodName  ==  null  ||   "baseClass ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName  ==  null  ||   "baseClass ".equals(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName  ==  null  ||   "baseClass ".equals(methodName))  {	  if(methodName    ==    null    ||   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  if(methodName!=  null  &&   "base ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName!=  null  &&   "base ".equals(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName!=  null  &&   "base ".equals(methodName))  {	  if(methodName    ==    null    ||   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  if(!methodName.equals( "base "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(!methodName.equals( "base "))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(!methodName.equals( "base "))  {	  if(!   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  if(!isBaseClassCall(n))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(!isBaseClassCall(n))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(!isBaseClassCall(n))  {	  if(!   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  if(methodName!=  null  ||! "base   ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName!=  null  ||! "base   ".equals(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName!=  null  ||! "base   ".equals(methodName))  {	  if(!   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  if(!isBaseClassCall(t,  n))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(!isBaseClassCall(t,  n))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(!isBaseClassCall(t,  n))  {	  if(!   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n)&&   "base ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(isBaseClassCall(t,  n)&&   "base ".equals(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n)&&   "base ".equals(methodName))  {	  if(isBaseClassCall(t,    n)||   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n)&&  isBaseName(methodName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(isBaseClassCall(t,  n)&&  isBaseName(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n)&&  isBaseName(methodName))  {	  if(isBaseClassCall(t,    n)||   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  if(methodName.equals(n))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName.equals(n))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName.equals(n))  {	  if(n.equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  if(!methodName.equals(n))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(!methodName.equals(n))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(!methodName.equals(n))  {	  if(n.equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  if(methodName.equals( "baseClass "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName.equals( "baseClass "))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName.equals( "baseClass "))  {	  if(n.equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  if(n.equals(methodName)&&  isBaseClassCall(t,  n))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(n.equals(methodName)&&  isBaseClassCall(t,  n))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(n.equals(methodName)&&  isBaseClassCall(t,  n))  {	  if(n.equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  String  n  =  name.getNext().getString();  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  String  n  =  name.getNext().getString();  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	String  n  =  name.getNext().getString();	      	non-compiled	[CE]  orphaned  case	4	None	replace
14	[BUG]  [BUGGY]  Method  t  =  methodName.getMethod();  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  Method  t  =  methodName.getMethod();  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	Method  t  =  methodName.getMethod();	      	non-compiled	[CE]  orphaned  case	4	None	replace
15	[BUG]  [BUGGY]  String  n  =  name.getNext();  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  String  n  =  name.getNext();  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	String  n  =  name.getNext();	      	non-compiled	[CE]  orphaned  case	4	None	replace
16	[BUG]  [BUGGY]  t  =  n.getNext();  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  t  =  n.getNext();  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	t  =  n.getNext();	      	non-compiled	[CE]  orphaned  case	4	None	replace
17	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n)&&  methodName.equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(isBaseClassCall(t,  n)&&  methodName.equals(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n)&&  methodName.equals(methodName))  {	  if(isBaseClassCall(t,    n))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n),  methodName)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(isBaseClassCall(t,  n),  methodName)  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n),  methodName)  {	  if(isBaseClassCall(t,    n))    {    	non-compiled	[CE]  	7	None	replace
19	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n)&&  methodName.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(isBaseClassCall(t,  n)&&  methodName.length()  >  0)  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n)&&  methodName.length()  >  0)  {	  if(isBaseClassCall(t,    n))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n)||  methodName.equals( "base "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(isBaseClassCall(t,  n)||  methodName.equals( "base "))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n)||  methodName.equals( "base "))  {	  if(isBaseClassCall(t,    n))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  if( "base   ".equals(methodName)&&  n.startsWith(methodName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if( "base   ".equals(methodName)&&  n.startsWith(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if( "base   ".equals(methodName)&&  n.startsWith(methodName))  {	  if(   "base   ".equals(methodName)||    n.startsWith(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  if( "base   ".equals(methodName)||  name.startsWith(methodName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if( "base   ".equals(methodName)||  name.startsWith(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if( "base   ".equals(methodName)||  name.startsWith(methodName))  {	  if(   "base   ".equals(methodName)||    n.startsWith(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  if(isBaseClassCall(t)||  isBaseClassCall(n)|| "base   ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(isBaseClassCall(t)||  isBaseClassCall(n)|| "base   ".equals(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t)||  isBaseClassCall(n)|| "base   ".equals(methodName))  {	  if(isBaseClassCall(n)||   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  if(methodName.equals( "base ")||  methodName.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName.equals( "base ")||  methodName.length()  ==  0)  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName.equals( "base ")||  methodName.length()  ==  0)  {	  if(   "base   ".equals(methodName)||    methodName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  if( "base   ".equals(methodName)&&  methodName.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if( "base   ".equals(methodName)&&  methodName.length()  ==  0)  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if( "base   ".equals(methodName)&&  methodName.length()  ==  0)  {	  if(   "base   ".equals(methodName)||    methodName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n)||  methodName.equals( "require "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(isBaseClassCall(t,  n)||  methodName.equals( "require "))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n)||  methodName.equals( "require "))  {	  if(isBaseClassCall(t,    n))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  if(!isBaseClassCall(methodName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(!isBaseClassCall(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(!isBaseClassCall(methodName))  {	  if(!   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  if(!isClassCall(methodName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(!isClassCall(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(!isClassCall(methodName))  {	  if(!   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  if( "baseClassCalls ".equals(methodName)||  n.startsWith(methodName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if( "baseClassCalls ".equals(methodName)||  n.startsWith(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if( "baseClassCalls ".equals(methodName)||  n.startsWith(methodName))  {	  if(   "base   ".equals(methodName)||    n.startsWith(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  if(methodName.startsWith( "base ")||  methodName.startsWith( "base "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName.startsWith( "base ")||  methodName.startsWith( "base "))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName.startsWith( "base ")||  methodName.startsWith( "base "))  {	  if(   "base   ".equals(methodName)||    n.startsWith(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  if(methodName  ==  null  ||   "base_ ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName  ==  null  ||   "base_ ".equals(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName  ==  null  ||   "base_ ".equals(methodName))  {	  if(methodName    ==    null    ||   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  if(methodName.equals(baseName)||  methodName.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName.equals(baseName)||  methodName.length()  ==  0)  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName.equals(baseName)||  methodName.length()  ==  0)  {	  if(   "base   ".equals(methodName)||    methodName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  Method  t  =  getMethod(methodName);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  Method  t  =  getMethod(methodName);  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	Method  t  =  getMethod(methodName);	      	non-compiled	[CE]  orphaned  case	4	None	replace
34	[BUG]  [BUGGY]  Method  t  =  methodName.toLowerCase();  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  Method  t  =  methodName.toLowerCase();  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	Method  t  =  methodName.toLowerCase();	      	non-compiled	[CE]  orphaned  case	4	None	replace
35	[BUG]  [BUGGY]  if(methodName.equals( "base "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName.equals( "base "))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName.equals( "base "))  {	  if(n.equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  if(methodName.equals( "baseclass "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName.equals( "baseclass "))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName.equals( "baseclass "))  {	  if(n.equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  if(!isBaseClassCall(n)&&! "base   ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(!isBaseClassCall(n)&&! "base   ".equals(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(!isBaseClassCall(n)&&! "base   ".equals(methodName))  {	  if(!   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  if(!isConstructor()  &&! "base   ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(!isConstructor()  &&! "base   ".equals(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(!isConstructor()  &&! "base   ".equals(methodName))  {	  if(!   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  if(methodName!=  null  &&  isBaseClassCall(t,  n))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName!=  null  &&  isBaseClassCall(t,  n))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName!=  null  &&  isBaseClassCall(t,  n))  {	  if(isBaseClassCall(t,    n))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n)&&  methodName.startsWith( "class "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(isBaseClassCall(t,  n)&&  methodName.startsWith( "class "))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n)&&  methodName.startsWith( "class "))  {	  if(isBaseClassCall(t,    n))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  if(isBaseClassCall(t,  n)&&  methodName.equals( "base "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(isBaseClassCall(t,  n)&&  methodName.equals( "base "))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(isBaseClassCall(t,  n)&&  methodName.equals( "base "))  {	  if(isBaseClassCall(t,    n))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  if( "base   ".equals(methodName)||  n.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if( "base   ".equals(methodName)||  n.length()  ==  0)  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if( "base   ".equals(methodName)||  n.length()  ==  0)  {	  if(   "base   ".equals(methodName)||    methodName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  n.setMethodName(methodName);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  n.setMethodName(methodName);  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	n.setMethodName(methodName);	      	non-compiled	[CE]  orphaned  case	4	None	replace
44	[BUG]  [BUGGY]  n.setAssertionFailedError(methodName);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  n.setAssertionFailedError(methodName);  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	n.setAssertionFailedError(methodName);	      	non-compiled	[CE]  orphaned  case	4	None	replace
45	[BUG]  [BUGGY]  n  =  name.getNext();  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  n  =  name.getNext();  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	n  =  name.getNext();	      	non-compiled	[CE]  orphaned  case	4	None	replace
46	[BUG]  [BUGGY]  if(methodName!=  null  ||   "base ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    GOOG.equals(name.getString()))  {    String  methodName  =  name.getNext().getString();    [BUGGY]  if(methodName!=  null  ||   "base ".equals(methodName))  {  [BUGGY]    processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  }  else  if  (   "require   ".equals(methodName))  {  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.11704114719613057	158	158	1	replace	if(methodName!=  null  ||   "base ".equals(methodName))  {	  if(methodName    ==    null    ||   "base   ".equals(methodName))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
