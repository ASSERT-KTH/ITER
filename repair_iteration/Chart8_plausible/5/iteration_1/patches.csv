bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");  [CE]  not  a  statement  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  not  a  statement	3	None	replace
2	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  and  can  not  be  in  the  range. ");  [CE]  not  a  statement  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  and  can  not  be  in  the  range. ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  and  can  not  be  in  the  range. ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  not  a  statement	3	None	replace
3	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");  [CE]  <identifier>  expected  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.   ");	  Throwables.throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54.   ");  [CE]  <identifier>  expected  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54.   ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54.   ");	  Throwables.throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  getInstance(int)  [FE]                  [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR);  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR);	      this.year    =    Calendar.getInstance();    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int)	1	None	replace
6	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  getInstance(int)  [FE]                    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR);  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR);	      this.year    =    Calendar.getInstance();    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int)	1	None	replace
7	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR,  year);  [CE]  no  suitable  method  found  for  getInstance(int,int)  [FE]                      [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR,  year);  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR,  year);	      this.year    =    Calendar.getInstance();    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int,int)	1	None	replace
8	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.   ");  [CE]  not  a  statement  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.   ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  not  a  statement	3	None	replace
9	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(),  YEAR_IN_YEAR;  [CE]  ';'  expected  [FE]                  [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  Calendar.getInstance(),  YEAR_IN_YEAR;  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(),  YEAR_IN_YEAR;	      this.year    =    Calendar.getInstance();    	non-compiled	[CE]  ';'  expected	1	None	replace
10	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.n ");  [CE]  <identifier>  expected  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.n ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53.n ");	  Throwables.throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.   ");  [CE]  not  a  statement  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.   ");  [BUGGY]     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53.   ");    	non-compiled	[CE]  not  a  statement	3	None	replace
12	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(Calendar.MILLISECOND);  [CE]  no  suitable  method  found  for  getInstance(int)  [FE]                  [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  Calendar.getInstance(Calendar.MILLISECOND);  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(Calendar.MILLISECOND);	      this.year    =    Calendar.getInstance();    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int)	1	None	replace
13	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(Calendar.DECEMBER);  [CE]  no  suitable  method  found  for  getInstance(int)  [FE]                    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {    [BUGGY]  this.year  =  Calendar.getInstance(Calendar.DECEMBER);  [BUGGY]    throw  new  IllegalArgumentException(         "The  'week'  argument  must  be  in  the  range  1  -  53.   ");     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(Calendar.DECEMBER);	      this.year    =    Calendar.getInstance();    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int)	1	None	replace
