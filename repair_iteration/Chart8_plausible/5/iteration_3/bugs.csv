bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(),  LAST_WEEK_IN_YEAR;  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(),  LAST_WEEK_IN_YEAR;  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(),  LAST_WEEK_IN_YEAR;	  this.year    =    Calendar.getInstance(),    YEAR_IN_YEAR;    	non-compiled	[CE]  ';'  expected	9	None	replace
2	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(),  YEAR_IN_YEAR  +  1;  [CE]  ';'  expected  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(),  YEAR_IN_YEAR  +  1;  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(),  YEAR_IN_YEAR  +  1;	  this.year    =    Calendar.getInstance(),    YEAR_IN_YEAR;    	non-compiled	[CE]  ';'  expected	9	None	replace
3	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(),  FIRST_WEEK_IN_YEAR;  [CE]  ';'  expected  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(),  FIRST_WEEK_IN_YEAR;  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(),  FIRST_WEEK_IN_YEAR;	  this.year    =    Calendar.getInstance(),    YEAR_IN_YEAR;    	non-compiled	[CE]  ';'  expected	9	None	replace
4	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52,  and  can  not  be  in  the  range.   ");  [CE]  not  a  statement  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52,  and  can  not  be  in  the  range.   ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52,  and  can  not  be  in  the  range.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53,    and    can    not    be    in    the    range.   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
5	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54,  and  can  not  be  in  the  range.   ");  [CE]  not  a  statement  [FE]                  [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54,  and  can  not  be  in  the  range.   ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54,  and  can  not  be  in  the  range.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53,    and    can    not    be    in    the    range.   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
6	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -5.   ");  [CE]  <identifier>  expected  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -5.   ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -5.   ");	  Throwables.throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    52.       ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
7	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.n ");  [CE]  not  a  statement  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.n ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.n ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53,    LAST_WEEK_IN_YEAR.       ");    	non-compiled	[CE]  not  a  statement	11	None	replace
8	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54,  LAST_WEEK_IN_YEAR.   ");  [CE]  not  a  statement  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54,  LAST_WEEK_IN_YEAR.   ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  54,  LAST_WEEK_IN_YEAR.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53,    LAST_WEEK_IN_YEAR.       ");    	non-compiled	[CE]  not  a  statement	11	None	replace
9	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  year);  [CE]  no  suitable  method  found  for  getInstance(int,int)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  year);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  year);	  this.year    =    Calendar.getInstance(LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int,int)	5	None	replace
10	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR,  week);  [CE]  no  suitable  method  found  for  getInstance(int,int)  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR,  week);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR,  week);	  this.year    =    Calendar.getInstance(LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int,int)	5	None	replace
11	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  getInstance(int,int)  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR);	  this.year    =    Calendar.getInstance(LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int,int)	5	None	replace
12	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  week);  [CE]  no  suitable  method  found  for  getInstance(int,int)  [FE]                            [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  week);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  week);	  this.year    =    Calendar.getInstance(LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int,int)	5	None	replace
13	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  month);  [CE]  cannot  find  symbol  month  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  month);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  month);	  this.year    =    Calendar.getInstance(FIRST_WEEK_IN_YEAR);    	non-compiled	[CE]  cannot  find  symbol  month	6	None	replace
14	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(this.year,  year);  [CE]  no  suitable  method  found  for  getInstance(short,int)  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(this.year,  year);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(this.year,  year);	  this.year    =    Calendar.getInstance(Calendar.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(short,int)	13	None	replace
15	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(Calendar.DECEMBER,  week);  [CE]  no  suitable  method  found  for  getInstance(int,int)  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(Calendar.DECEMBER,  week);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(Calendar.DECEMBER,  week);	  this.year    =    Calendar.getInstance(Calendar.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int,int)	13	None	replace
16	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR,  week);  [CE]  no  suitable  method  found  for  getInstance(int,int,int)  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR,  week);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  LAST_WEEK_IN_YEAR,  week);	  this.year    =    Calendar.getInstance(LAST_WEEK_IN_YEAR,    year);    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int,int,int)	7	None	replace
17	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  year);  [CE]  no  suitable  method  found  for  getInstance(int,int)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  year);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  year);	  this.year    =    Calendar.getInstance(Calendar.MILLISECOND);    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int,int)	12	None	replace
18	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.n ");  [CE]  not  a  statement  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.n ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.n ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    52.       ");    	non-compiled	[CE]  not  a  statement	1	None	replace
19	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.n ");  [CE]  not  a  statement  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.n ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.n ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53    or    LAST_WEEK_IN_YEAR.       ");    	non-compiled	[CE]  not  a  statement	8	None	replace
20	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  60,  and  can  not  be  in  the  range.   ");  [CE]  not  a  statement  [FE]                [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  60,  and  can  not  be  in  the  range.   ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  60,  and  can  not  be  in  the  range.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53,    and    can    not    be    in    the    range.   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
21	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(),  year;  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(),  year;  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(),  year;	  this.year    =    Calendar.getInstance(),    YEAR_IN_YEAR;    	non-compiled	[CE]  ';'  expected	9	None	replace
22	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.n ");  [CE]  <identifier>  expected  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.n ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throwables.throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  52.n ");	  Throwables.throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    52.       ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
23	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR,  month);  [CE]  cannot  find  symbol  month  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR,  month);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(LAST_WEEK_IN_YEAR,  month);	  this.year    =    Calendar.getInstance(LAST_WEEK_IN_YEAR);    	non-compiled	[CE]  cannot  find  symbol  month	5	None	replace
24	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  YEAR);  [CE]  cannot  find  symbol  YEAR  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  YEAR);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(FIRST_WEEK_IN_YEAR,  YEAR);	  this.year    =    Calendar.getInstance(LAST_WEEK_IN_YEAR,    year);    	non-compiled	[CE]  cannot  find  symbol  YEAR	7	None	replace
25	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  YEAR);  [CE]  cannot  find  symbol  YEAR  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  YEAR);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  YEAR);	  this.year    =    Calendar.getInstance(Calendar.MILLISECOND);    	non-compiled	[CE]  cannot  find  symbol  YEAR	12	None	replace
26	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(Calendar.DECEMBER,  year);  [CE]  no  suitable  method  found  for  getInstance(int,int)  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(Calendar.DECEMBER,  year);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(Calendar.DECEMBER,  year);	  this.year    =    Calendar.getInstance(Calendar.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int,int)	13	None	replace
27	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.n "  + "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.n ");  [CE]  not  a  statement  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.n "  + "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.n ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.n "  + "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.n ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53    or    LAST_WEEK_IN_YEAR.       ");    	non-compiled	[CE]  not  a  statement	8	None	replace
28	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  60,  LAST_WEEK_IN_YEAR.   ");  [CE]  not  a  statement  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  60,  LAST_WEEK_IN_YEAR.   ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  60,  LAST_WEEK_IN_YEAR.   ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53,    LAST_WEEK_IN_YEAR.       ");    	non-compiled	[CE]  not  a  statement	11	None	replace
29	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  week);  [CE]  no  suitable  method  found  for  getInstance(int,int)  [FE]                      [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  week);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  week);	  this.year    =    Calendar.getInstance(Calendar.MILLISECOND);    	non-compiled	[CE]  no  suitable  method  found  for  getInstance(int,int)	12	None	replace
30	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  month);  [CE]  cannot  find  symbol  month  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  month);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(Calendar.MILLISECOND,  month);	  this.year    =    Calendar.getInstance(Calendar.MILLISECOND);    	non-compiled	[CE]  cannot  find  symbol  month	12	None	replace
31	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(Calendar.DECEMBER,  month);  [CE]  cannot  find  symbol  month  [FE]                        [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(Calendar.DECEMBER,  month);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(Calendar.DECEMBER,  month);	  this.year    =    Calendar.getInstance(Calendar.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  month	13	None	replace
32	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.  Then ");  [CE]  not  a  statement  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.  Then ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53,  LAST_WEEK_IN_YEAR.  Then ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53,    LAST_WEEK_IN_YEAR.       ");    	non-compiled	[CE]  not  a  statement	11	None	replace
33	[BUG]  [BUGGY]  this.year  =  Calendar.getInstance(FLUSH_WEEK_IN_YEAR,  year);  [CE]  cannot  find  symbol  FLUSH_WEEK_IN_YEAR  [FE]                          [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  this.year  =  Calendar.getInstance(FLUSH_WEEK_IN_YEAR,  year);  [BUGGY]      throw  new  IllegalArgumentException(           "The  'week'  argument  must  be  in  the  range  1  -  53.     ");       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	this.year  =  Calendar.getInstance(FLUSH_WEEK_IN_YEAR,  year);	  this.year    =    Calendar.getInstance(LAST_WEEK_IN_YEAR,    year);    	non-compiled	[CE]  cannot  find  symbol  FLUSH_WEEK_IN_YEAR	7	None	replace
34	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.  Any  other  way. ");  [CE]  not  a  statement  [FE]              [CONTEXT]      public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {      [BUGGY]  Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.  Any  other  way. ");  [BUGGY]       "The  'week'  argument  must  be  in  the  range  1  -  53.     ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;  peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	129	130	0	replace	Throw  new  IllegalArgumentException( "The  'week'  argument  must  be  in  the  range  1  -  53  or  LAST_WEEK_IN_YEAR.  Any  other  way. ");	  Throw    new    IllegalArgumentException(   "The    'week'    argument    must    be    in    the    range    1    -    53    or    LAST_WEEK_IN_YEAR.       ");    	non-compiled	[CE]  not  a  statement	8	None	replace
