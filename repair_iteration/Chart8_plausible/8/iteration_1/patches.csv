bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(short)LAST_WEEK_IN_YEAR  +  1;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	7	12	replace
2	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  +  1;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	7	12	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(short)FIRST_WEEK_IN_YEAR;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	7	12	replace
4	[BUG]  [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(short)FIRST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)FIRST_WEEK_IN_YEAR;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	7	12	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(short)LAST_WEEK_IN_YEAR  -  1;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	7	12	replace
6	[BUG]  [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(short)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(short)LAST_WEEK_IN_YEAR  -  1;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	7	12	replace
7	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.year);  [CE]  cannot  find  symbol  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  Peg(Calendar.getInstance(),  this.year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.year);	  Peg(Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
8	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  this.week);  [CE]  cannot  find  symbol  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  Peg(Calendar.getInstance(),  this.week);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  this.week);	  Peg(Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
9	[BUG]  [BUGGY]  Peg(Calendar.getInstance(),  year);  [CE]  cannot  find  symbol  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  Peg(Calendar.getInstance(),  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(Calendar.getInstance(),  year);	  Peg(Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
10	[BUG]  [BUGGY]  peg(this.year.getInstance(),  this.year);  [CE]  short  cannot  be  dereferenced  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.year.getInstance(),  this.year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year.getInstance(),  this.year);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  short  cannot  be  dereferenced	3	None	replace
11	[BUG]  [BUGGY]  peg(this.year.getInstance(),  Calendar.getInstance());  [CE]  short  cannot  be  dereferenced  [FE]                [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.year.getInstance(),  Calendar.getInstance());  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year.getInstance(),  Calendar.getInstance());	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  short  cannot  be  dereferenced	3	None	replace
12	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week);  [CE]  no  suitable  method  found  for  peg(Calendar,short,byte)  [FE]                  [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.week);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.week);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,byte)	3	None	replace
13	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  peg(Calendar,short,int)  [FE]                    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,int)	3	None	replace
14	[BUG]  [BUGGY]  peg(this.year,  this.week.getInstance());  [CE]  byte  cannot  be  dereferenced  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.year,  this.week.getInstance());  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.week.getInstance());	  peg(this.year.getInstance());    	non-compiled	[CE]  byte  cannot  be  dereferenced	1	None	replace
15	[BUG]  [BUGGY]  peg(this.year,  this.month.getInstance());  [CE]  cannot  find  symbol  month  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.year,  this.month.getInstance());  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.month.getInstance());	  peg(this.year.getInstance());    	non-compiled	[CE]  cannot  find  symbol  month	1	None	replace
16	[BUG]  [BUGGY]  peg(this.year,  this.year.getInstance());  [CE]  short  cannot  be  dereferenced  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.year,  this.year.getInstance());  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.year.getInstance());	  peg(this.year.getInstance());    	non-compiled	[CE]  short  cannot  be  dereferenced	1	None	replace
17	[BUG]  [BUGGY]  peg(this.year,  this.least.getInstance());  [CE]  cannot  find  symbol  least  [FE]                [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.year,  this.least.getInstance());  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.least.getInstance());	  peg(this.year.getInstance());    	non-compiled	[CE]  cannot  find  symbol  least	1	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]      this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	8	12	add
19	[BUG]  [BUGGY]      this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]      this.year  =(byte)LAST_WEEK_IN_YEAR;  this.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.year  =(byte)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	8	12	add
20	[BUG]  [BUGGY]      this.year  =(byte)LAST_WEEK_IN_YEAR;  This.year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]      this.year  =(byte)LAST_WEEK_IN_YEAR;  This.year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	        this.year    =(byte)LAST_WEEK_IN_YEAR;    This.year  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	8	None	add
21	[BUG]  [BUGGY]      this.year  =(byte)LAST_WEEK_IN_YEAR;  int  year  =(byte)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]      this.year  =(byte)LAST_WEEK_IN_YEAR;  int  year  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	        this.year    =(byte)LAST_WEEK_IN_YEAR;    int  year  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	8	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;	      this.year    =(byte)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	9	12	replace
23	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  +  1;	      this.year    =(byte)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	9	12	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(byte)FIRST_WEEK_IN_YEAR;	      this.year    =(byte)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	9	12	replace
25	[BUG]  [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(byte)FIRST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)FIRST_WEEK_IN_YEAR;	      this.year    =(byte)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	9	12	replace
26	[BUG]  [BUGGY]  peg(this.week.getInstance(),  Calendar.getInstance());  [CE]  byte  cannot  be  dereferenced  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.week.getInstance(),  Calendar.getInstance());  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  Calendar.getInstance());	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  byte  cannot  be  dereferenced	2	None	replace
27	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.week);  [CE]  byte  cannot  be  dereferenced  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.week.getInstance(),  this.week);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.week);	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  byte  cannot  be  dereferenced	2	None	replace
28	[BUG]  [BUGGY]  peg(this.week.getInstance(),  calendar);  [CE]  byte  cannot  be  dereferenced  [FE]                [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.week.getInstance(),  calendar);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  calendar);	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  byte  cannot  be  dereferenced	2	None	replace
29	[BUG]  [BUGGY]  peg(this.week.getInstance(),  this.year);  [CE]  byte  cannot  be  dereferenced  [FE]                  [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.week.getInstance(),  this.year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week.getInstance(),  this.year);	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  byte  cannot  be  dereferenced	2	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]      this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	6	12	add
31	[BUG]  [BUGGY]      this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]      this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(short)LAST_WEEK_IN_YEAR;	  	compilable	  [FE]  AssertionFailedError  	6	12	add
32	[BUG]  [BUGGY]      this.year  =(short)LAST_WEEK_IN_YEAR;  This.year  =(short)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]      this.year  =(short)LAST_WEEK_IN_YEAR;  This.year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	        this.year    =(short)LAST_WEEK_IN_YEAR;    This.year  =(short)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  This	6	None	add
33	[BUG]  [BUGGY]      this.year  =(short)LAST_WEEK_IN_YEAR;  int  year  =(short)LAST_WEEK_IN_YEAR;  [CE]  variable  year  is  already  defined  in  constructor  Week(int,int)  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]      this.year  =(short)LAST_WEEK_IN_YEAR;  int  year  =(short)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	        this.year    =(short)LAST_WEEK_IN_YEAR;    int  year  =(short)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  variable  year  is  already  defined  in  constructor  Week(int,int)	6	None	add
34	[BUG]  [BUGGY]  peg(this.week,  Calendar.getInstance());  [CE]  no  suitable  method  found  for  peg(byte,Calendar)  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.week,  Calendar.getInstance());  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.week,  Calendar.getInstance());	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  no  suitable  method  found  for  peg(byte,Calendar)	2	None	replace
35	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  year);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,int)  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(Calendar.getInstance(),  this.week,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  year);	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,int)	2	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(firstMillisecond,  year);	      	compilable	  [FE]  AssertionFailedError  	5	4	replace
37	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.firstMillisecond  =  Math.max(firstMillisecond,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(firstMillisecond,  year);	      	compilable	  [FE]  AssertionFailedError  	5	4	replace
38	[BUG]  [BUGGY]  Peg(this.instance,  Calendar.getInstance());  [CE]  cannot  find  symbol  instance  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  Peg(this.instance,  Calendar.getInstance());  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	Peg(this.instance,  Calendar.getInstance());	  Peg(Calendar.getInstance());    	non-compiled	[CE]  cannot  find  symbol  instance	10	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;	      this.year    =(byte)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	9	12	replace
40	[BUG]  [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)LAST_WEEK_IN_YEAR  -  1;	      this.year    =(byte)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	9	12	replace
41	[BUG]  [BUGGY]  peg(this.year,  Calendar.getInstance());  [CE]  no  suitable  method  found  for  peg(short,Calendar)  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.year,  Calendar.getInstance());  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  Calendar.getInstance());	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(short,Calendar)	3	None	replace
42	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  year);  [CE]  no  suitable  method  found  for  peg(Calendar,short,int)  [FE]                [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(Calendar.getInstance(),  this.year,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  year);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,int)	3	None	replace
43	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  week);  [CE]  no  suitable  method  found  for  peg(Calendar,short,int)  [FE]                  [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(Calendar.getInstance(),  this.year,  week);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  week);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,int)	3	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);	      	compilable	  [FE]  AssertionFailedError  	5	4	replace
45	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);	      	compilable	  [FE]  AssertionFailedError  	5	4	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);	      	compilable	  [FE]  AssertionFailedError  	5	4	replace
47	[BUG]  [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);	      	compilable	  [FE]  AssertionFailedError  	5	4	replace
48	[BUG]  [BUGGY]  peg(this.year,  this.len.getInstance());  [CE]  cannot  find  symbol  len  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(this.year,  this.len.getInstance());  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(this.year,  this.len.getInstance());	  peg(this.year.getInstance());    	non-compiled	[CE]  cannot  find  symbol  len	1	None	replace
49	[BUG]  [BUGGY]  this.year  =(byte)lAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  lAST_WEEK_IN_YEAR  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(byte)lAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(byte)lAST_WEEK_IN_YEAR;	      this.year    =(byte)LAST_WEEK_IN_YEAR;    	non-compiled	[CE]  cannot  find  symbol  lAST_WEEK_IN_YEAR	9	None	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	add	this.year  =(int)LAST_WEEK_IN_YEAR;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	7	12	replace
51	[BUG]  [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  this.year  =(int)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	this.year  =(int)LAST_WEEK_IN_YEAR;	      this.year    =(short)LAST_WEEK_IN_YEAR;    	compilable	  [FE]  AssertionFailedError  	7	12	replace
52	[BUG]  [BUGGY]      this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(Short)LAST_WEEK_IN_YEAR;  [CE]  inconvertible  types  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]      this.year  =(short)LAST_WEEK_IN_YEAR;  this.year  =(Short)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	        this.year    =(short)LAST_WEEK_IN_YEAR;    this.year  =(Short)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  inconvertible  types	6	None	add
53	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.firstMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,short,long)  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.firstMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.firstMillisecond);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,long)	3	None	replace
54	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.lastMillisecond);  [CE]  no  suitable  method  found  for  peg(Calendar,short,long)  [FE]                [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(Calendar.getInstance(),  this.year,  this.lastMillisecond);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.year,  this.lastMillisecond);	  peg(Calendar.getInstance(),    this.year);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,short,long)	3	None	replace
55	[BUG]  [BUGGY]      this.year  =(byte)LAST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;  [CE]  cannot  find  symbol  month  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]      this.year  =(byte)LAST_WEEK_IN_YEAR;  this.month  =(byte)LAST_WEEK_IN_YEAR;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	        this.year    =(byte)LAST_WEEK_IN_YEAR;    this.month  =(byte)LAST_WEEK_IN_YEAR;	  	non-compiled	[CE]  cannot  find  symbol  month	8	None	add
56	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,short)  [FE]            [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(Calendar.getInstance(),  this.week,  this.year);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  this.year);	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,short)	2	None	replace
57	[BUG]  [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);  [CE]  no  suitable  method  found  for  peg(Calendar,byte,int)  [FE]              [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;  this.year  =  (short)  year;    [BUGGY]  peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);  [BUGGY]    }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	134	134	0	replace	peg(Calendar.getInstance(),  this.week,  LAST_WEEK_IN_YEAR);	  peg(Calendar.getInstance(),    this.week);    	non-compiled	[CE]  no  suitable  method  found  for  peg(Calendar,byte,int)	2	None	replace
