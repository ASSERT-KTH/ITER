bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.year  =  (byte)year  -  1;  [CE]  possible  loss  of  precision  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =  (byte)year  -  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	133	133	0	replace	this.year  =  (byte)year  -  1;	  this.year    =    (short)year    -    1;    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
2	[BUG]  [BUGGY]  this.year  =  (short)this.year;  int  this.year  =  (short)this.year;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =  (short)this.year;  int  this.year  =  (short)this.year;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	133	133	0	replace	this.year    =    (short)this.year;    int  this.year  =  (short)this.year;	  	non-compiled	[CE]  not  a  statement	2	None	add
3	[BUG]  [BUGGY]  this.year  =  (short)this.year;  This.year  =  (short)this.year;  [CE]  cannot  find  symbol  This  [FE]        AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =  (short)this.year;  This.year  =  (short)this.year;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	133	133	0	replace	this.year    =    (short)this.year;    This.year  =  (short)this.year;	  	non-compiled	[CE]  cannot  find  symbol  This	2	None	add
4	[BUG]  [BUGGY]  this.year  =  (short)this.year  +  1;  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =  (short)this.year  +  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	133	133	0	replace	this.year  =  (short)this.year  +  1;	  this.year    =    (short)this.year;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
5	[BUG]  [BUGGY]  this.year  =  (byte)year  +  1;  [CE]  possible  loss  of  precision  [FE]          [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =  (byte)year  +  1;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	133	133	0	replace	this.year  =  (byte)year  +  1;	  this.year    =    (short)year    +    1;    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
6	[BUG]  [BUGGY]  this.year  =  (short)this.year;  this.month  =  (short)this.month;  [CE]  cannot  find  symbol  month  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =  (short)this.year;  this.month  =  (short)this.month;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	133	133	0	replace	this.year    =    (short)this.year;    this.month  =  (short)this.month;	  	non-compiled	[CE]  cannot  find  symbol  month	2	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(byte)this.year;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	133	133	0	add	this.year  =(byte)this.year;	  this.year    =    (short)this.year;    	compilable	  [FE]  AssertionFailedError  	3	12	replace
8	[BUG]  [BUGGY]  this.year  =(byte)this.year;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Week(int  week,  int  year)  {  if  ((week  <  FIRST_WEEK_IN_YEAR)  &&  (week  >  LAST_WEEK_IN_YEAR))  {  throw  new  IllegalArgumentException(     "The  'week'  argument  must  be  in  the  range  1  -  53.   ");  }  this.week  =  (byte)  week;    [BUGGY]  this.year  =(byte)this.year;  [BUGGY]    peg(Calendar.getInstance());  }  [CLASS]  Week  [METHOD]  <init>  [RETURN_TYPE]  Week(int,int)  int  week  int  year  [VARIABLES]  short  year  boolean  byte  week  long  firstMillisecond  lastMillisecond  serialVersionUID  int  FIRST_WEEK_IN_YEAR  LAST_WEEK_IN_YEAR  week  year  	projects/Chart8/source/org/jfree/data/time/Week.java	0.0	133	133	0	replace	this.year  =(byte)this.year;	  this.year    =    (short)this.year;    	compilable	  [FE]  AssertionFailedError  	3	12	replace
