projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add("-"+ch);currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add("-"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add("-"+ch);currentOption=options.getOption(i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add("-"+i);currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add("-");currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add(token.substring(i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add("-"+token.substring(i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add(token.substring(0,i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&(token.length()!=(i+1))){}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&token.length()!=(i+1)){}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add(token.substring(i));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add(token.substring(i+1),currentOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add(token.substring(i,currentOption.getArg()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280tokens.add(token.substring(i,i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&token.length()!=(i+1)){tokens.add(token.substring(i+1));break;}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&token.length()!=(i+1)){break;}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java280if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&token.length()!=(i+1)){tokens.add(token.substring
