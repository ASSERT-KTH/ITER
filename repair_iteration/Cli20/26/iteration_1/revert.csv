projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("-".equals(token)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("-".equals(token)||token.startsWith("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("-".equals(token)||"-".equals(token)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("-".equals(token)&&token.startsWith("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf("-")));tokens.add(token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf("=")));tokens.add(token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.length()-1));tokens.add(token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.length()-2));tokens.add(token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("--".equals(token)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("-".equals(token)&&stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add("-"+token.substring(0,token.indexOf('=')));tokens.add(token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iterator<String>iter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add("-"+token.substring(0,token.indexOf('>')));tokens.add(token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iterator<String>iter=options.entities().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iteratoriter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add("-");
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iteratoriter=arguments.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iteratoriter=options.values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Ileratoriter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('>')));tokens.add(token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('>')));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('>')),token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('=')));tokens.add(token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('=')));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('=')+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('-')));tokens.add(token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126if(stopAtNonOption){tokens.add(token.substring(0,token.indexOf("=")));tokens.add(token.substring(token.indexOf('=')+1,token.length()));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iterator<String>iter=options.keySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iterator<String>iter=options.values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(stopAtNonOption){tokens.add(token.substring(0,token.length()-1));tokens.add(token.substring(token.indexOf('=')+1,token.length()));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126if(stopAtNonOption){tokens.add(token.substring(0,token.length()-1));tokens.add(token.substring(token.indexOf('=')+1,token.length()));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("-".equals(token)||'-'.equals(token)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(options.hasOption(token)){tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.startsWith("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.equals("-")&&token.startsWith("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.startsWith("--")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("--".equals(token)||token.startsWith("--")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iterator<String>iter=arguments.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iterator<String>iter=currentOption.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(stopAtNonOption){tokens.add(token.substring(0,token.length()-2));tokens.add(token.substring(token.indexOf('=')+1,token.length()));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.length()));tokens.add(token.substring(token.indexOf('=')+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(stopAtNonOption.equals(token)&&token.startsWith("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.startsWith("-")&&stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(stopAtNonOption.equals(token)&&token.length()==2){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(stopAtNonOption.equals("-")&&token.equals(token)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.equals("-")||token.startsWith("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add("-"+token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126if(stopAtNonOption){tokens.add(token.substring(0,token.length()-2));tokens.add(token.substring(token.indexOf('=')+1,token.length()));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.length()-1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(stopAtNonOption.equals(token)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("-".equals(token)||stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('>'))+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('>')),token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('>')),token.length());
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.startsWith("-")||token.startsWith("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.equals("-")&&token.startsWith("--")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iterator<String>iter=currentOption.options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(!stopAtNonOption&&"--".equals(token)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("--".equals(token)&&stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126if(stopAtNonOption){for(Iterator<String>iter=options.iterator();iter.hasNext();){processOptionToken(token,stopAtNonOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126if(stopAtNonOption){for(Iterator<String>iter=options.iterator();iter.hasNext();){tokens.add(iter.next());}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126if(stopAtNonOption){tokens.add(token);}else{for(Iterator<String>iter=options.iterator();iter.hasNext();){tokens.add(iter.next());}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126if(stopAtNonOption){tokens.add(token);}else{for(Iteratoriter=options.iterator();iter.hasNext();){tokens.add(iter.next());}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(options.hasOption(token)||options.hasOption(token)){tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add("-n");
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(options.hasOption(token)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("--".equals(token)||"--".equals(token)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('-'))+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf("-"))+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('='))+1,token.length()));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(stopAtNonOption){tokens.add(token.substring(0,token.indexOf('=')));tokens.add(token.substring(token.indexOf('=')+1,token.length()));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(stopAtNonOption){tokens.add(token.substring(0,token.indexOf("=")));tokens.add(token.substring(token.indexOf('=')+1,token.length()));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iteratoriter=currentOption.options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126Iteratoriter=this.options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126if(stopAtNonOption){tokens.add(token);}else{processOptionToken(token,stopAtNonOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126if(stopAtNonOption){tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126if(stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add('-');
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('-')));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('/')));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.startsWith("-")&&token.startsWith("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.startsWith("-")){tokens.add(token.substring(0,token.indexOf('=')));tokens.add(token.substring(token.indexOf('=')+1,token.length()));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('='))+1,token.length());
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(!"-".equals(token)&&stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.startsWith("-")){tokens.add(token.substring(0,token.length()-2));tokens.add(token.substring(token.indexOf('=')+1,token.length()));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif("-".equals(token)&&"-".equals(token)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126elseif(token.startsWith("-")||token.startsWith("--")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java126tokens.add(token.substring(0,token.indexOf('=')),token.length());
