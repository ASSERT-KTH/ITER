projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143burstToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143acceptToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143burstToken(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143process(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<String>iter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token);tokens.add(currentOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<String>iter=options.keySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getOptions().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processOptionToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143burstToken(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processStringToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.remove();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processStringToken(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processStringToken(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processStringToken(token,currentOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=currentOption.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143acceptToken(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143acceptToken(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<String>iter=options.values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<String>iter=options.entrySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)+1;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.get(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.add(options.getOption(token));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token);if(stopAtNonOption){tokens.add(currentOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143||stopAtNonOption){tokens.add(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processOptionToken(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,options.size());
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143process(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=process(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143process(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add(options.getOption(token));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add("n");
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add("-");
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processOptionToken(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143burstToken(token,stopAtNonOption,arguments,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=arguments.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ileratoriter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getAllOptions().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getIterables().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<String>iter=arguments.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<String>iter=currentOption.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processOptionToken(token,stopAtNonOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=processOptionToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<String>iter=options.keySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<String>iter=currentOption.options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.keySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=currentOption.options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.keySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=currentOptions.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token);if(currentOption!=null){tokens.add(currentOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){tokens.add(token);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption)&&options.hasOption(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getOptions().values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getOptionIterator().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<Option>iter=options.getOptions().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.getOptions().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.addValue(arguments[0]);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token,stopAtNonOption);tokens.add(currentOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)-1;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=processStringToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<String>iter=options.list().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processRawToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token);if(currentOption!=null){currentOption=currentOption;}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)||options.hasOption(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.addValue(arguments[0],arguments[1]);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,argument);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=options.getOptions().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processOptionToken(token,stopAtNonOption,arguments,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=process(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=process(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<Option>iter=options.getOptionIterator().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<Option>iter=options.getOption(token).iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143||options.hasOption(token)){currentOption=options.getOption(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=options.values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption)||options.hasOption(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption)&&options.hasOption(arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption)&&options.hasOption(options.get(token));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add(options.getValue(token));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add(options.getOption(token,stopAtNonOption));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add(options.getOption(token),stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143process(token,stopAtNonOption,arguments,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143List<String>iter=options.values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=options.getIterables().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){eatTheRest=processOptionToken(token,stopAtNonOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){eatTheRest=processOptionToken(token,stopAtNonOption);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=processOptionToken(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.add(options.getValue(token));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.add(options.getOption(token),stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.add(options.getOption(token,stopAtNonOption));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=currentOption.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=options.keySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)/1;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token,stopAtNonOption)-1;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)-2;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143process(token,currentOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processOptionToken(token,stopAtNonOption,options);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processOptionToken(token,stopAtNonOption,options);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processOptionToken(token,stopAtNonOption,options);}else{thrownewIllegalArgumentException("");}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent==null||stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent!=null||stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent!=null&&stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,options.size()-1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,options.size()+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,arguments.size());
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,options.size()-2);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getOptions().keySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=options.getOptions().values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.getIterables().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.getOptionIterator().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add("-"+token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add(":");
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add(token,stopAtNonOption+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)&&options.hasOption(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)||options.hasOption(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)||options.hasValue(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.entrySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processStringToken(token,currentOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processStringToken(token,stopAtNonOption,arguments,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=options.getOptionIterator().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=options.getOption(token).iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143List<String>iter=options.keySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<String>iter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add("null");
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent==null||stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent!=null||stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token);if(stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143acceptToken(token,stopAtNonOption,arguments,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143proceed(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getIterator().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getOptionIterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=arguments.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,arguments,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,arguments,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ileratoriter=options.values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143burstToken(token,stopAtNonOption,arguments,null);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processStringToken(token,stopAtNonOption,options);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processStringToken(token,currentOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processStringToken(token,stopAtNonOption,options);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processStringToken(token,currentOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processStringToken(token,currentOption);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processStringToken(token,currentOption);}else{options.put(token,stopAtNonOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getIterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,argument,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.get(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.get(token)+1;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.get(0);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143||stopAtNonOption){tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.addValue(arguments[1]);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.addValue(arguments[0],stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add(arguments[0]);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){eatTheRest=processStringToken(token,stopAtNonOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=processStringToken(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=processStringToken(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent==null||stopAtNonOption){tokens.add(token);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent==null||stopAtNonOption){tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent!=null||stopAtNonOption){tokens.add(token);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent!=null&&stopAtNonOption){tokens.add(token);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143||stopAtNonOption&&arguments.contains(token)){tokens.add(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143||stopAtNonOption&&options.hasOption(token)){tokens.add(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143||stopAtNonOption||arguments.length<2){tokens.add(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143List<String>iter=currentOption.options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143List<String>iter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token,stopAtNonOption)+1;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=processRawToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processRawToken(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processRawToken(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.entrySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)+2;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.addValue(arguments[0],arguments[1],stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent!=null&&stopAtNonOption==processOptionToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143options.addOptionToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Optionoption=options.getOption(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<Option>iter=options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.getOptions().values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ileratoriter=options.getOptions().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143[Delete]
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent!=null&&stopAtNonOption){tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent==null&&stopAtNonOption){tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token,stopAtNonOption+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption)&&options.hasOption(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143options.addOption(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getIterableOptions().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){eatTheRest=processStringToken(token,stopAtNonOption);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=processOptionToken(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<Option>iter=options.values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getIterables().values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<Option>iter=options.getIterables().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<Option>iter=options.getOptions().values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143process(token,stopAtNonOption,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143processOptionToken(token,currentOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=processStringToken(token,currentOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<String>iter=options.values().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ilerator<Option>iter=options.keySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143||stopAtNonOption){tokens.add(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=stopAtNonOption.process(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=options.getOptions().toArray(newOption[options.size()]);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,arguments.length);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Ileratoriter=options.keySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=currentOption.options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=stopAtNonOption.processOptionToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.get(arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)/||options.hasOption(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add("--");
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143iter.addValue(arguments[0],arguments[2]);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add("-"+token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token);if(stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getIterator(token).iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processOptionToken(token,stopAtNonOption,arguments);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processOptionToken(token,stopAtNonOption,arguments);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest(token,stopAtNonOption,options);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143process(token,stopAtNonOption,arguments,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143if(stopAtNonOption){processStringToken(token,stopAtNonOption,options);}else{thrownewIllegalArgumentException("");}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.allOptions().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)/2-1;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption,options.get(token));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143==[Delete]
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143>=[Delete]
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143>>
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token,stopAtNonOption-1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<String>iter=options.allOptions().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getAllIterables().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getIterators().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143tokens.add("stop");
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143avetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiaveti
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143avetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiaveti&&options)){tokens.add(to
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143avetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiavetiaveti&&options)){tokens.addValu
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=(options.hasOption(token))?options.iterator():null;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=(options.hasOption(token))?options.get(token):options.iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143eatTheRest=stopAtNonOption?process(token,stopAtNonOption):process(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143akTokens=process(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.get(arguments[0]);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143OptioncurrentOption=options.getOption(token)/2+1;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.list().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iterator<Option>iter=options.getOptions().entrySet().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Accept(token,stopAtNonOption,arguments);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent!=(stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143parent==null&&stopAtNonOption){processOptionToken(token,stopAtNonOption);}else{tokens.add(token);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143accept(token,stopAtNonOption)&&arguments.hasOption(token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Option<Option>iter=options.getOption(arguments.iterator());
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.getAllOptions().iterator();
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java143Iteratoriter=options.getOptionIterator();
