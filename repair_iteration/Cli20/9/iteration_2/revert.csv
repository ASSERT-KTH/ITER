projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(stopAtNonOption.hasArg()&&(token.length()!=(i+1))){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){Optionoptions=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(stopAtNonOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){Optionoptions=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add("-"+ch);currentOption=options.getOption(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(options.hasArg()&&options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(!stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(stopAtNonOption){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){Optionoptions=options.getOption(ch);if(options!=null){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasArg()){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(!stopAtNonOption&&options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add("-"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add("-"+ch);currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options.add("-"+ch);currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&currentOption.hasArg()){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(token.charAt(i));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch);}else{tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options.add("-"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(token.substring(i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasArg()&&options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(options.hasArg()&&options.getOption(ch)!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(!stopAtNonOption&&options.hasArg()){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=currentOption.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=options.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=options.getOption(ch,i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.hasArg()){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.getOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=currentOption.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=options.getOption(i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273IntegercurrentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToken(currentOption,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch-1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch,i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=options.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch-1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(!currentOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.getOption(ch)!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.getOption(ch)==null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add("-"+i);currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokeneatTheRest=stopAtNonOption;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)==null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||eatTheRest){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch);if(!stopAtNonOption){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch);if(currentOption!=null){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&!token.equals(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||!token.equals(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add(token.substring(i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasArg(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i+1));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&token.length()!=(i+1)){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273||stopAtNonOption){tokens.add("-"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName.append(token.substring(i));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+i);currentOption=options.getOption(ch);if(currentOption.hasArg()&&token.length()!=(i+1)){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&token.length()==(i+1)){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273IntegercurrentOption=options.getOption(i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273IntegercurrentOption=options.getOption(ch-1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273IntegercurrentOption=options.getOption(ch+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){AssertionFailedToName(token,stopAtNonOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){AssertionFailedToName(token,stopAtNonOption);}else{tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=currentOption.getOption(ch,token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=currentOption.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options.add("-"+ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,stopAtNonOption);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,stopAtNonOption);}else{tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=options.getOption(ch,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=currentOption.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=options.getOption(ch,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=options.getOption(ch,i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){options.add("-"+ch);currentOption=options.getOption(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){options.add("-"+ch);currentOption=options.getOption(ch);}else{tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options.put(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,i+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,0);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&!token.equals("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&!token.equals("")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch,i+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,i);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,i);}else{tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,i);tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch-1+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName.append(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName.append(token.substring(i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName.append(ch,token.substring(i));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName.append(token.substring(i,ch));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273||stopAtNonOption||tokens.contains(ch)){tokens.add("-"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273||stopAtNonOption&&tokens.contains(ch)){tokens.add("-"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273||eatTheRest){tokens.add("-"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||currentOption.hasArg()){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokeneatTheRest=token;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokeneatTheRest=false;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokeneatTheRest=currentOption;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(options.hasArg()&&token.length()!=(i+1)){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i+1));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionError(token,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i+1));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i+1));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+i);currentOption=options.getOption(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add("-"+i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=currentOption.getOption(ch,token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=currentOption.getOption(ch,i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=currentOption.getOption(i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=options.getOption(ch,i+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options=options.getOption(ch,i+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=options.getOption(ch,i+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(!stopAtNonOption&&!token.equals(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||!token.equals("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.hasArg(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(ch,token.charAt(i));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(token.substring(i,token.length()-1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&eatTheRest){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||currentOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(!stopAtNonOption&&options.getOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(0));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionError(token,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionError(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,tokens[i]);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(i,token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add(ch.substring(i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add(token.substring(i+1),ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch-1+1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch-1L);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(!currentOption.hasArg()&&token.length()!=(i+1)){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasArg()&&options.getOption(ch)!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(options.hasArg()&&options.getOption(ch)==null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionError(token,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(0));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.hasArg()&&options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasArg()||options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasArg()&&options.getOption(ch)==null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add("-"+ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add("-n"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(ch,token.substring(i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(ch.substring(i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(token.substring(i+1),token.length());
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)!=null&&currentOption.hasArg()){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)!=null&&token.length()>0){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToken(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToken(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToken(currentOption,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToken(token,currentOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName.append(ch+token.substring(i));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&currentOption!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options.setOption(currentOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToken(i,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+i);currentOption=options.getOption(ch);if(!currentOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(!currentOption.hasArg()&&(token.length()!=(i+1))){tokens.add(
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=(Option)options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add(token.substring(i));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)>=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch){for(inti=1;i<token.length();i++){Stringch=String.valueOf(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+i);currentOption=options.getOption(ch);if(currentOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,eattheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(ch.charAt(i+1));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)==null||eatTheRest){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=currentOption.hasArg()?options.getOption(ch):null;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=currentOption.getOption(ch-1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options.add("-"+i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,i++);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(!stopAtNonOption&&options.getOption(ch)!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(token.substring(i));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.hasArg()||options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){options.add("-"+ch);currentOption=options.getOption(ch);}else{
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,stopAtNonOption,eatTheRest);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.getOption(ch)>=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokeneatTheRest=stopAtNonOption+1;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokeneatTheRest=stopAtNonOption&&token.charAt(i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokeneatTheRest=stopAtNonOption&&token.equals(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToken(i,currentOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName.append(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options.add(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(token.substring(i,ch));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(!stopAtNonOption&&options.getOption(ch)==null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i+1));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,null);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)!=null&&token.length()==0){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,i),stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,i)==stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,i),stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionError(ch,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokeneatTheRest=stopAtNonOption?token:ch;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokeneatTheRest=stopAtNonOption&&token.length()==0;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273IntegercurrentOption=options.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,stopAtNonOption);if(currentOption!=null){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.getOption(ch)!=null&&token.length()>0){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273||stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add(token.substring(i,ch));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=currentOption.getOptions(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||eatTheRest||token.charAt(i)!='-'){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||!eatTheRest){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)==null&&token.length()>0){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)==null&&token.equals("-")){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273||stopAtNonOption){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(options.hasOption(ch)&&options.getOption(ch)!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.hasArg()&&options.getOption(ch)!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(token.substring(i+1),ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionError(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,i);
