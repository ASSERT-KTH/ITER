projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(stopAtNonOption.hasArg()&&(token.length()!=(i+1))){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){Optionoptions=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(stopAtNonOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){Optionoptions=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add("-"+ch);currentOption=options.getOption(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(options.hasArg()&&options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(!stopAtNonOption){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(stopAtNonOption){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){Optionoptions=options.getOption(ch);if(options!=null){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasArg()){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(!stopAtNonOption&&options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add("-"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add("-"+ch);currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options.add("-"+ch);currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&currentOption.hasArg()){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(token.charAt(i));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch);}else{tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273options.add("-"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokench=newAssertionFailedToken(token.substring(i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasArg()&&options.hasOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(options.hasArg()&&options.getOption(ch)!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(!stopAtNonOption&&options.hasArg()){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=currentOption.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=options.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=options.getOption(ch,i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.hasArg()){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.getOption(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch,token);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=currentOption.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoptions=options.getOption(i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273IntegercurrentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToken(currentOption,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch-1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273OptioncurrentOption=options.getOption(ch,i);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionsoptions=options.getOption(ch,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273Optionoption=options.getOption(ch-1);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(!currentOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.getOption(ch)!=null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||options.getOption(ch)==null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add("-"+i);currentOption=options.getOption(ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedTokeneatTheRest=stopAtNonOption;
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.getOption(ch)==null){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||eatTheRest){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch);if(!stopAtNonOption){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){OptioncurrentOption=options.getOption(ch);if(currentOption!=null){tokens.add("-"+ch);}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&!token.equals(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption||!token.equals(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273tokens.add(token.substring(i+1));
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption&&options.hasArg(ch)){
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i+1));}
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&token.length()!=(i+1)){tokens.add(token.substring
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273||stopAtNonOption){tokens.add("-"+ch);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName(token,stopAtNonOption);
projects/Cli20/src/java/org/apache/commons/cli/PosixParser.java273AssertionFailedToName.append(token.substring(i));
