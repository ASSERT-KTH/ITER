bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] super(new Line(start, end), buildIntervalSet(start, end)); [FE] NullPointerException [CONTEXT] [BUGGY] super(new Line(start, end), buildIntervalSet(start, end)); [BUGGY] } [CLASS] SubLine [METHOD] <init> [RETURN_TYPE] Vector2D)  Vector2D start Vector2D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	56	56	2	replace	
2	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] super(new Line(start, end), buildIntervalSet(start, end)); } [CLASS] SubLine [METHOD] <init> [RETURN_TYPE] Vector2D)  Vector2D start Vector2D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	56	56	2	add	
3	[BUG] [BUGGY] } [FE] NullPointerException [CONTEXT] [BUGGY] } [BUGGY]  [CLASS] SubLine [METHOD] <init> [RETURN_TYPE] Vector2D)  Vector2D start Vector2D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	57	57	2	replace	
4	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] } [CLASS] SubLine [METHOD] <init> [RETURN_TYPE] Vector2D)  Vector2D start Vector2D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	57	57	2	add	
5	[BUG] [BUGGY] Line line1 = (Line) getHyperplane(); [FE] NullPointerException [CONTEXT] [BUGGY] Line line1 = (Line) getHyperplane(); [BUGGY] Line line2 = (Line) subLine.getHyperplane();  Vector2D v2D = line1.intersection(line2);  Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location loc2 = subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D)); [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector2D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	113	113	2	replace	
6	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] Line line1 = (Line) getHyperplane(); Line line2 = (Line) subLine.getHyperplane();  Vector2D v2D = line1.intersection(line2);  Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location loc2 = subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D)); [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector2D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	113	113	2	add	
7	[BUG] [BUGGY] Line line2 = (Line) subLine.getHyperplane(); [FE] NullPointerException [CONTEXT] [BUGGY] Line line2 = (Line) subLine.getHyperplane(); [BUGGY]   Vector2D v2D = line1.intersection(line2);  Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location loc2 = subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector2D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	114	114	2	replace	
8	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] Line line2 = (Line) subLine.getHyperplane();  Vector2D v2D = line1.intersection(line2);  Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location loc2 = subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector2D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	114	114	2	add	
9	[BUG] [BUGGY] Vector2D v2D = line1.intersection(line2); [FE] NullPointerException [CONTEXT] [BUGGY] Vector2D v2D = line1.intersection(line2); [BUGGY]   Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location loc2 = subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D)); if (includeEndPoints) { return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE)) ? v2D : null; } else { [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector2D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	
10	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] Vector2D v2D = line1.intersection(line2);  Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location loc2 = subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D)); if (includeEndPoints) { return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE)) ? v2D : null; } else { [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector2D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	add	
11	[BUG] [BUGGY] Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D)); [FE] NullPointerException [CONTEXT] [BUGGY] Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D)); [BUGGY]   Location loc2 = subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D)); if (includeEndPoints) { return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE)) ? v2D : null; } else { return ((loc1 == Location.INSIDE) && (loc2 == Location.INSIDE)) ? v2D : null; }  [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector2D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	120	120	2	replace	
12	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location loc2 = subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D)); if (includeEndPoints) { return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE)) ? v2D : null; } else { return ((loc1 == Location.INSIDE) && (loc2 == Location.INSIDE)) ? v2D : null; }  [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector2D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	120	120	2	add	
13	[BUG] [BUGGY] this(new Line(start, end), buildIntervalSet(start, end)); [FE] NullPointerException [CONTEXT] [BUGGY] this(new Line(start, end), buildIntervalSet(start, end)); [BUGGY] } [CLASS] SubLine [METHOD] <init> [RETURN_TYPE] Vector3D)  Vector3D start Vector3D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	56	56	2	replace	
14	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] this(new Line(start, end), buildIntervalSet(start, end)); } [CLASS] SubLine [METHOD] <init> [RETURN_TYPE] Vector3D)  Vector3D start Vector3D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	56	56	2	add	
15	[BUG] [BUGGY] } [FE] NullPointerException [CONTEXT] [BUGGY] } [BUGGY]  [CLASS] SubLine [METHOD] <init> [RETURN_TYPE] Vector3D)  Vector3D start Vector3D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	57	57	2	replace	
16	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] } [CLASS] SubLine [METHOD] <init> [RETURN_TYPE] Vector3D)  Vector3D start Vector3D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	57	57	2	add	
17	[BUG] [BUGGY] Vector3D v1D = line.intersection(subLine.line); [FE] NullPointerException [CONTEXT] [BUGGY] Vector3D v1D = line.intersection(subLine.line); [BUGGY]   Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D));  Location loc2 = subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D)); if (includeEndPoints) { return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE)) ? v1D : null; } else { [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector3D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	113	113	2	replace	
18	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] Vector3D v1D = line.intersection(subLine.line);  Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D));  Location loc2 = subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D)); if (includeEndPoints) { return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE)) ? v1D : null; } else { [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector3D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	113	113	2	add	
19	[BUG] [BUGGY] Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D)); [FE] NullPointerException [CONTEXT] [BUGGY] Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D)); [BUGGY]   Location loc2 = subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D)); if (includeEndPoints) { return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE)) ? v1D : null; } else { return ((loc1 == Location.INSIDE) && (loc2 == Location.INSIDE)) ? v1D : null; }  [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector3D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	
20	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D));  Location loc2 = subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D)); if (includeEndPoints) { return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE)) ? v1D : null; } else { return ((loc1 == Location.INSIDE) && (loc2 == Location.INSIDE)) ? v1D : null; }  [CLASS] SubLine [METHOD] intersection [RETURN_TYPE] Vector3D  SubLine subLine final boolean includeEndPoints 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	add	
21	[BUG] [BUGGY] final Line line = new Line(start, end); [FE] NullPointerException [CONTEXT] [BUGGY] final Line line = new Line(start, end); [BUGGY] return new IntervalsSet(line.toSubSpace(start).getX(), line.toSubSpace(end).getX()); } [CLASS] SubLine [METHOD] buildIntervalSet [RETURN_TYPE] IntervalsSet  Vector2D start Vector2D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.25	139	139	2	replace	
22	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] final Line line = new Line(start, end); return new IntervalsSet(line.toSubSpace(start).getX(), line.toSubSpace(end).getX()); } [CLASS] SubLine [METHOD] buildIntervalSet [RETURN_TYPE] IntervalsSet  Vector2D start Vector2D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.25	139	139	2	add	
23	[BUG] [BUGGY] return new IntervalsSet(line.toSubSpace(start).getX(),  line.toSubSpace(end).getX()); [FE] NullPointerException [CONTEXT] [BUGGY] return new IntervalsSet(line.toSubSpace(start).getX(),        line.toSubSpace(end).getX()); [BUGGY] line.toSubSpace(end).getX()); } [CLASS] SubLine [METHOD] buildIntervalSet [RETURN_TYPE] IntervalsSet  Vector2D start Vector2D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.25	140	141	2	replace	
24	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] return new IntervalsSet(line.toSubSpace(start).getX(),        line.toSubSpace(end).getX()); line.toSubSpace(end).getX()); } [CLASS] SubLine [METHOD] buildIntervalSet [RETURN_TYPE] IntervalsSet  Vector2D start Vector2D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.25	140	141	2	add	
25	[BUG] [BUGGY] final Line line = new Line(start, end); [FE] NullPointerException [CONTEXT] [BUGGY] final Line line = new Line(start, end); [BUGGY] return new IntervalsSet(line.toSubSpace(start).getX(), line.toSubSpace(end).getX()); } [CLASS] SubLine [METHOD] buildIntervalSet [RETURN_TYPE] IntervalsSet  Vector3D start Vector3D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.25	137	137	2	replace	
26	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] final Line line = new Line(start, end); return new IntervalsSet(line.toSubSpace(start).getX(), line.toSubSpace(end).getX()); } [CLASS] SubLine [METHOD] buildIntervalSet [RETURN_TYPE] IntervalsSet  Vector3D start Vector3D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.25	137	137	2	add	
27	[BUG] [BUGGY] return new IntervalsSet(line.toSubSpace(start).getX(),  line.toSubSpace(end).getX()); [FE] NullPointerException [CONTEXT] [BUGGY] return new IntervalsSet(line.toSubSpace(start).getX(),        line.toSubSpace(end).getX()); [BUGGY] line.toSubSpace(end).getX()); } [CLASS] SubLine [METHOD] buildIntervalSet [RETURN_TYPE] IntervalsSet  Vector3D start Vector3D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.25	138	139	2	replace	
28	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] return new IntervalsSet(line.toSubSpace(start).getX(),        line.toSubSpace(end).getX()); line.toSubSpace(end).getX()); } [CLASS] SubLine [METHOD] buildIntervalSet [RETURN_TYPE] IntervalsSet  Vector3D start Vector3D end 	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.25	138	139	2	add	
