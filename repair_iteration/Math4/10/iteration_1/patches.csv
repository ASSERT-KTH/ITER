bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Line  remainingRegion  =  subLine.remainingRegion.checkPoint(v1D,  v1D);  [CE]  no  suitable  method  found  for  checkPoint(Vector3D,Vector3D)  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Line  remainingRegion  =  subLine.remainingRegion.checkPoint(v1D,  v1D);  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  remainingRegion  =  subLine.remainingRegion.checkPoint(v1D,  v1D);	      Line    remainingRegion    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  no  suitable  method  found  for  checkPoint(Vector3D,Vector3D)	3	None	replace
2	[BUG]  [BUGGY]  Line  remainingRegion  =  subLine.remainingRegion.checkPoint(v1D,  v2D);  [CE]  cannot  find  symbol  v2D  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Line  remainingRegion  =  subLine.remainingRegion.checkPoint(v1D,  v2D);  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  remainingRegion  =  subLine.remainingRegion.checkPoint(v1D,  v2D);	      Line    remainingRegion    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  cannot  find  symbol  v2D	3	None	replace
3	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D.toSubSpace(v1D));  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D.toSubSpace(v1D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1D.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
4	[BUG]  [BUGGY]  Line  v1  =  subline.remainingRegion.checkPoint(v1.toSubSpace(v1));  [CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Line  v1  =  subline.remainingRegion.checkPoint(v1.toSubSpace(v1));  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subline.remainingRegion.checkPoint(v1.toSubSpace(v1));	      Line    v1    =    remainingRegion.checkPoint(v1.toSubSpace(v1));    	non-compiled	[CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;	8	None	replace
5	[BUG]  [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),  remainingRegion);  [CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),  remainingRegion);  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),  remainingRegion);	      Line    v1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));    	non-compiled	[CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;	9	None	replace
6	[BUG]  [BUGGY]  final  Vector3D  subLine  =  remainingRegion.checkPoint(v1D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  Vector3D  subLine  =  remainingRegion.checkPoint(v1D);  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	final  Vector3D  subLine  =  remainingRegion.checkPoint(v1D);	      final    Vector3D    subLine    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	1	None	replace
7	[BUG]  [BUGGY]  static  final  Vector3D  subLine  =  remainingRegion.checkPoint(v1D);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  static  final  Vector3D  subLine  =  remainingRegion.checkPoint(v1D);  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	static  final  Vector3D  subLine  =  remainingRegion.checkPoint(v1D);	      final    Vector3D    subLine    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  Line  v1  =  remainingRegion.checkPoint(v1.toSubSpace(v2D));  [CE]  cannot  find  symbol  v2D  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Line  v1  =  remainingRegion.checkPoint(v1.toSubSpace(v2D));  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  remainingRegion.checkPoint(v1.toSubSpace(v2D));	      Line    v1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));    	non-compiled	[CE]  cannot  find  symbol  v2D	10	None	replace
9	[BUG]  [BUGGY]  Line  v1  =  remainingRegion.checkPoint(subLine.remainingRegion.toSubSpace(v1D));  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Line  v1  =  remainingRegion.checkPoint(subLine.remainingRegion.toSubSpace(v1D));  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  remainingRegion.checkPoint(subLine.remainingRegion.toSubSpace(v1D));	      Line    v1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
10	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));	  	non-compiled	[CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)	6	None	add
11	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));	  	non-compiled	[CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)	6	None	add
12	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v2D));  [CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v2D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v2D));	  	non-compiled	[CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)	6	None	add
13	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));	  	non-compiled	[CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)	4	None	add
14	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));  [CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));	  	non-compiled	[CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)	4	None	add
15	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2));  [CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2));	  	non-compiled	[CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)	4	None	add
16	[BUG]  [BUGGY]  SubLine  subLine  =  remainingRegion.checkPoint(v1D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  SubLine  subLine  =  remainingRegion.checkPoint(v1D);  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	SubLine  subLine  =  remainingRegion.checkPoint(v1D);	      SubLine    subLine    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	2	None	replace
17	[BUG]  [BUGGY]  SubLine  subLine  =  remainderRegion.checkPoint(v1D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  SubLine  subLine  =  remainderRegion.checkPoint(v1D);  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	SubLine  subLine  =  remainderRegion.checkPoint(v1D);	      SubLine    subLine    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	2	None	replace
18	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D);  [CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D);  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location  loc1  =  subLine.remainingRegion.checkPoint(v1D);	  	non-compiled	[CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)	4	None	add
19	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));  [CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));	  	non-compiled	[CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)	4	None	add
20	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D);  [CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D);  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    Location  loc1  =  subLine.remainingRegion.checkPoint(v1D);	  	non-compiled	[CE]  variable  loc1  is  already  defined  in  method  intersection(SubLine,boolean)	6	None	add
21	[BUG]  [BUGGY]  SubLine  subLine  =  remainingRegion.checkpoint(v1D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  SubLine  subLine  =  remainingRegion.checkpoint(v1D);  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	SubLine  subLine  =  remainingRegion.checkpoint(v1D);	      SubLine    subLine    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	2	None	replace
22	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D  -  subLine.line.toSubSpace(v1D));  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D  -  subLine.line.toSubSpace(v1D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1D  -  subLine.line.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	5	None	replace
23	[BUG]  [BUGGY]  final  Vector3D  subLine  =  v1D.remainingRegion.checkPoint(v1D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  Vector3D  subLine  =  v1D.remainingRegion.checkPoint(v1D);  [BUGGY]    Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	final  Vector3D  subLine  =  v1D.remainingRegion.checkPoint(v1D);	      final    Vector3D    subLine    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	1	None	replace
24	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subline.line.toSubSpace(v1D));  [CE]  package  subline  does  not  exist  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subline.line.toSubSpace(v1D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(subline.line.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    	non-compiled	[CE]  package  subline  does  not  exist	7	None	replace
25	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  Line  v1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  Line  v1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    Line  v1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));	  	non-compiled	[CE]  incompatible  types	6	None	add
26	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));  [CE]  cannot  find  symbol  v2D  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));	  	non-compiled	[CE]  cannot  find  symbol  v2D	4	None	add
27	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));  [CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));  [BUGGY]      Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));	  	non-compiled	[CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;	4	None	add
