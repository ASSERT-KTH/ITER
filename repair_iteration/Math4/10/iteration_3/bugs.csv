bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    Line    v1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    	non-compiled	[CE]  incompatible  types	25	None	replace
2	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));  [CE]  cannot  find  symbol  v1  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Line    v1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));    	non-compiled	[CE]  cannot  find  symbol  v1	26	None	replace
3	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));  [CE]  cannot  find  symbol  v1  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Line    v1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));    	non-compiled	[CE]  cannot  find  symbol  v1	27	None	replace
4	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));  [CE]  cannot  find  symbol  v1  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Line    v1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v1));    	non-compiled	[CE]  cannot  find  symbol  v1	27	None	replace
5	[BUG]  [BUGGY]  SubLine  subLine  =  remainingRegion.checkPoint(v1D,  v1);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  SubLine  subLine  =  remainingRegion.checkPoint(v1D,  v1);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	SubLine  subLine  =  remainingRegion.checkPoint(v1D,  v1);	  SubLine    subLine    =    remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	16	None	replace
6	[BUG]  [BUGGY]  final  Vector3D  subLine  =  remainingRegion.checkPoint(v1D,  v1D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  Vector3D  subLine  =  remainingRegion.checkPoint(v1D,  v1D);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	final  Vector3D  subLine  =  remainingRegion.checkPoint(v1D,  v1D);	  final    Vector3D    subLine    =    remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	6	None	replace
7	[BUG]  [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(remainingRegion.toSubSpace(v1D));  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(remainingRegion.toSubSpace(v1D));  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subLine.remainingRegion.checkPoint(remainingRegion.toSubSpace(v1D));	  Line    v1    =    remainingRegion.checkPoint(subLine.remainingRegion.toSubSpace(v1D));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
8	[BUG]  [BUGGY]  Line  v1  =  subline.remainingRegion.checkPoint(remainingRegion.toSubSpace(v1D));  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  subline.remainingRegion.checkPoint(remainingRegion.toSubSpace(v1D));  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subline.remainingRegion.checkPoint(remainingRegion.toSubSpace(v1D));	  Line    v1    =    remainingRegion.checkPoint(subLine.remainingRegion.toSubSpace(v1D));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
9	[BUG]  [BUGGY]  Line  remainingRegion  =  subLine.remainingRegion.checkPoint(v1D,  v2);  [CE]  cannot  find  symbol  v2  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Line  remainingRegion  =  subLine.remainingRegion.checkPoint(v1D,  v2);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  remainingRegion  =  subLine.remainingRegion.checkPoint(v1D,  v2);	  Line    remainingRegion    =    subLine.remainingRegion.checkPoint(v1D,    v2D);    	non-compiled	[CE]  cannot  find  symbol  v2	2	None	replace
10	[BUG]  [BUGGY]  static  final  Vector3D  subLine  =  subLine.remainingRegion.checkPoint(v1D);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  static  final  Vector3D  subLine  =  subLine.remainingRegion.checkPoint(v1D);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	static  final  Vector3D  subLine  =  subLine.remainingRegion.checkPoint(v1D);	  static    final    Vector3D    subLine    =    remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  SubLine  subLine  =  remainingRegion.checkpoint(v1D,  v1D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  SubLine  subLine  =  remainingRegion.checkpoint(v1D,  v1D);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	SubLine  subLine  =  remainingRegion.checkpoint(v1D,  v1D);	  SubLine    subLine    =    remainingRegion.checkpoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	21	None	replace
12	[BUG]  [BUGGY]  SubLine  subLine  =  remainingRegion.checkpoint(v1D,  v2D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  SubLine  subLine  =  remainingRegion.checkpoint(v1D,  v2D);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	SubLine  subLine  =  remainingRegion.checkpoint(v1D,  v2D);	  SubLine    subLine    =    remainingRegion.checkpoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	21	None	replace
13	[BUG]  [BUGGY]  Line  v1  =  subline.remainingRegion.checkPoint(v1.toSubSpace(v1),  remainingRegion);  [CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  subline.remainingRegion.checkPoint(v1.toSubSpace(v1),  remainingRegion);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subline.remainingRegion.checkPoint(v1.toSubSpace(v1),  remainingRegion);	  Line    v1    =    subline.remainingRegion.checkPoint(v1.toSubSpace(v1));    	non-compiled	[CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;	4	None	replace
14	[BUG]  [BUGGY]  Line  v1  =  subline.remainingRegion.checkPoint(v1.toSubSpace(v2D));  [CE]  cannot  find  symbol  v2D  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  subline.remainingRegion.checkPoint(v1.toSubSpace(v2D));  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subline.remainingRegion.checkPoint(v1.toSubSpace(v2D));	  Line    v1    =    remainingRegion.checkPoint(v1.toSubSpace(v2D));    	non-compiled	[CE]  cannot  find  symbol  v2D	8	None	replace
15	[BUG]  [BUGGY]  Line  v1  =  remainingRegion.checkPoint(v1.toSubSpace(v1),  subLine.remainingRegion);  [CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  remainingRegion.checkPoint(v1.toSubSpace(v1),  subLine.remainingRegion);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  remainingRegion.checkPoint(v1.toSubSpace(v1),  subLine.remainingRegion);	  Line    v1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),    remainingRegion);    	non-compiled	[CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;	5	None	replace
16	[BUG]  [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),  v2D);  [CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),  v2D);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),  v2D);	  Line    v1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),    remainingRegion);    	non-compiled	[CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;	5	None	replace
17	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D  -  subLine.line.toSubSpace(v1D),  v1D);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D  -  subLine.line.toSubSpace(v1D),  v1D);  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1D  -  subLine.line.toSubSpace(v1D),  v1D);	  Location    loc1    =    subLine.remainingRegion.checkPoint(v1D    -    subLine.line.toSubSpace(v1D));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	22	None	replace
18	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));  [CE]  cannot  find  symbol  v1  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));    	non-compiled	[CE]  cannot  find  symbol  v1	19	None	replace
19	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v2.toSubSpace(v1D));  [CE]  cannot  find  symbol  v2  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v2.toSubSpace(v1D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v2.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v1D));    	non-compiled	[CE]  cannot  find  symbol  v2	19	None	replace
20	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v2D));  [CE]  cannot  find  symbol  v2D  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v2D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v2D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v2D));    	non-compiled	[CE]  cannot  find  symbol  v2D	12	None	replace
21	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2));  [CE]  cannot  find  symbol  v2  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v2));    	non-compiled	[CE]  cannot  find  symbol  v2	15	None	replace
22	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v2.toSubSpace(v1));  [CE]  cannot  find  symbol  v1  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v2.toSubSpace(v1));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v2.toSubSpace(v1));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v2));    	non-compiled	[CE]  cannot  find  symbol  v1	15	None	replace
23	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D);  [CE]  no  suitable  method  found  for  checkPoint(Vector3D)  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D);  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1D);	  Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  no  suitable  method  found  for  checkPoint(Vector3D)	20	None	replace
24	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D,  v1D);  [CE]  no  suitable  method  found  for  checkPoint(Vector3D,Vector3D)  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D,  v1D);  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1D,  v1D);	  Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  no  suitable  method  found  for  checkPoint(Vector3D,Vector3D)	20	None	replace
25	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));  [CE]  cannot  find  symbol  v2D  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));    	non-compiled	[CE]  cannot  find  symbol  v2D	14	None	replace
26	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v2D.toSubSpace(v1D));  [CE]  cannot  find  symbol  v2D  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v2D.toSubSpace(v1D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v2D.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));    	non-compiled	[CE]  cannot  find  symbol  v2D	14	None	replace
27	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D,  line.toSubSpace(v1D));  [CE]  no  suitable  method  found  for  checkPoint(Vector3D,Vector1D)  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D,  line.toSubSpace(v1D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1D,  line.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  no  suitable  method  found  for  checkPoint(Vector3D,Vector1D)	18	None	replace
28	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.line.toSubSpace(v1D));  [CE]  package  v1  does  not  exist  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1.line.toSubSpace(v1D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1.line.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(subline.line.toSubSpace(v1D));    	non-compiled	[CE]  package  v1  does  not  exist	24	None	replace
29	[BUG]  [BUGGY]  Location  loc1  =  subline.remainingRegion.checkPoint(v1.line.toSubSpace(v1D));  [CE]  package  v1  does  not  exist  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subline.remainingRegion.checkPoint(v1.line.toSubSpace(v1D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subline.remainingRegion.checkPoint(v1.line.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(subline.line.toSubSpace(v1D));    	non-compiled	[CE]  package  v1  does  not  exist	24	None	replace
30	[BUG]  [BUGGY]  SubLine  subLine  =  remainderRegion.checkPoint(v1D,  v1);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  SubLine  subLine  =  remainderRegion.checkPoint(v1D,  v1);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	SubLine  subLine  =  remainderRegion.checkPoint(v1D,  v1);	  SubLine    subLine    =    remainderRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	17	None	replace
31	[BUG]  [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),  v1D);  [CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),  v1D);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),  v1D);	  Line    v1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v1),    remainingRegion);    	non-compiled	[CE]  method  toSubSpace  in  class  Line  cannot  be  applied  to  given  types;	5	None	replace
32	[BUG]  [BUGGY]  SubLine  subLine  =  remainderRegion.checkPoint(v1D,  v1D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  SubLine  subLine  =  remainderRegion.checkPoint(v1D,  v1D);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	SubLine  subLine  =  remainderRegion.checkPoint(v1D,  v1D);	  SubLine    subLine    =    remainderRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	17	None	replace
33	[BUG]  [BUGGY]  final  static  Vector3D  subLine  =  remainingRegion.checkPoint(v1D);  [CE]  modifier  static  not  allowed  here  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  static  Vector3D  subLine  =  remainingRegion.checkPoint(v1D);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	final  static  Vector3D  subLine  =  remainingRegion.checkPoint(v1D);	  static    final    Vector3D    subLine    =    remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  modifier  static  not  allowed  here	7	None	replace
34	[BUG]  [BUGGY]  Line  v1  =  remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));	  Line    v1    =    remainingRegion.checkPoint(v1.toSubSpace(v2D));    	non-compiled	[CE]  incompatible  types	8	None	replace
35	[BUG]  [BUGGY]  Line  v1  =  remainingRegion.checkPoint(subLine.line.toSubSpace(v2D));  [CE]  cannot  find  symbol  v2D  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  remainingRegion.checkPoint(subLine.line.toSubSpace(v2D));  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  remainingRegion.checkPoint(subLine.line.toSubSpace(v2D));	  Line    v1    =    remainingRegion.checkPoint(v1.toSubSpace(v2D));    	non-compiled	[CE]  cannot  find  symbol  v2D	8	None	replace
36	[BUG]  [BUGGY]  Line  v1  =  subLine.checkPoint(remainingRegion.toSubSpace(v1D));  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  subLine.checkPoint(remainingRegion.toSubSpace(v1D));  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subLine.checkPoint(remainingRegion.toSubSpace(v1D));	  Line    v1    =    remainingRegion.checkPoint(subLine.remainingRegion.toSubSpace(v1D));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
37	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(b1D));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(b2D));  [CE]  cannot  find  symbol  b1D  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(b1D));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(b2D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(line.toSubSpace(b1D));  Line  v1  =  subLine.remainingRegion.checkPoint(v1.toSubSpace(b2D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Line    v1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));    	non-compiled	[CE]  cannot  find  symbol  b1D	26	None	replace
38	[BUG]  [BUGGY]  SubLine  subLine  =  remainingRegion.checkPoint(v1D,  v1D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  SubLine  subLine  =  remainingRegion.checkPoint(v1D,  v1D);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	SubLine  subLine  =  remainingRegion.checkPoint(v1D,  v1D);	  SubLine    subLine    =    remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	16	None	replace
39	[BUG]  [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(subRegion.toSubSpace(v1D));  [CE]  cannot  find  symbol  subRegion  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(subRegion.toSubSpace(v1D));  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subLine.remainingRegion.checkPoint(subRegion.toSubSpace(v1D));	  Line    v1    =    remainingRegion.checkPoint(subLine.remainingRegion.toSubSpace(v1D));    	non-compiled	[CE]  cannot  find  symbol  subRegion	9	None	replace
40	[BUG]  [BUGGY]  final  Vector3D  subLine  =  v1D.remainingRegion.checkPoint(v1D,  remainingRegion);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  Vector3D  subLine  =  v1D.remainingRegion.checkPoint(v1D,  remainingRegion);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	final  Vector3D  subLine  =  v1D.remainingRegion.checkPoint(v1D,  remainingRegion);	  final    Vector3D    subLine    =    v1D.remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	23	None	replace
41	[BUG]  [BUGGY]  static  final  Vector3D  subLine  =  v1D.remainingRegion.checkPoint(v1D);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  static  final  Vector3D  subLine  =  v1D.remainingRegion.checkPoint(v1D);  [BUGGY]      Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	static  final  Vector3D  subLine  =  v1D.remainingRegion.checkPoint(v1D);	  static    final    Vector3D    subLine    =    remainingRegion.checkPoint(v1D);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D.toSubSpace(v2D));  [CE]  cannot  find  symbol  v2D  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  Location  loc1  =  subLine.remainingRegion.checkPoint(v1D.toSubSpace(v2D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Location  loc1  =  subLine.remainingRegion.checkPoint(v1D.toSubSpace(v2D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(line.toSubSpace(v1D));    Location    loc1    =    subLine.remainingRegion.checkPoint(v1.toSubSpace(v2D));    	non-compiled	[CE]  cannot  find  symbol  v2D	14	None	replace
43	[BUG]  [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(v1D.toSubSpace(v1D));  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  Line  v1  =  subLine.remainingRegion.checkPoint(v1D.toSubSpace(v1D));  [BUGGY]        Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v1D  :  null;  }  else  {  return  ((loc1  ==  Location.INSIDE)  &&  (loc2  ==  Location.INSIDE))  ?  v1D  :  null;  }  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector3D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	0.2672612419124244	116	116	2	replace	Line  v1  =  subLine.remainingRegion.checkPoint(v1D.toSubSpace(v1D));	  Location    loc1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    Line    v1    =    subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
