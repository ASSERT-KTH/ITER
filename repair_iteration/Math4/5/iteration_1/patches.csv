bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Vector2D  v2D  =  subLine.intersection(v2D,  line2);  [CE]  method  intersection  in  class  SubLine  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Vector2D  v2D  =  subLine.intersection(v2D,  line2);  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  subLine.intersection(v2D,  line2);	  Vector2D    v2D    =    subLine.intersection(line2);    	non-compiled	[CE]  method  intersection  in  class  SubLine  cannot  be  applied  to  given  types;	1	None	replace
2	[BUG]  [BUGGY]  Vector2D  v2D  =  subLine.intersection(v2D);  [CE]  method  intersection  in  class  SubLine  cannot  be  applied  to  given  types;  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Vector2D  v2D  =  subLine.intersection(v2D);  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  subLine.intersection(v2D);	  Vector2D    v2D    =    subLine.intersection(line2);    	non-compiled	[CE]  method  intersection  in  class  SubLine  cannot  be  applied  to  given  types;	1	None	replace
3	[BUG]  [BUGGY]  Location  subLine  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Location  subLine  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Location  subLine  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));	      	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	3	None	replace
4	[BUG]  [BUGGY]  Line  subLine  =  line.getRemainingRegion().checkPoint(v2D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Line  subLine  =  line.getRemainingRegion().checkPoint(v2D);  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Line  subLine  =  line.getRemainingRegion().checkPoint(v2D);	      Line    subLine    =    subLine.getRemainingRegion().checkPoint(v2D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	12	None	replace
5	[BUG]  [BUGGY]  Line  subLine  =  line1.getRemainingRegion().checkPoint(v2D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Line  subLine  =  line1.getRemainingRegion().checkPoint(v2D);  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Line  subLine  =  line1.getRemainingRegion().checkPoint(v2D);	      Line    subLine    =    subLine.getRemainingRegion().checkPoint(v2D);    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	12	None	replace
6	[BUG]  [BUGGY]  final  Vector2D  line2  =  line2.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  [CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  Vector2D  line2  =  line2.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	final  Vector2D  line2  =  line2.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));	      final    Vector2D    line2    =    subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));    	non-compiled	[CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)	4	None	replace
7	[BUG]  [BUGGY]  final  Line  subLine  =  line.getRemainingRegion();  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  Line  subLine  =  line.getRemainingRegion();  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	final  Line  subLine  =  line.getRemainingRegion();	      final    Line    subLine    =    subLine.getRemainingRegion();    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	8	None	replace
8	[BUG]  [BUGGY]  final  Line  subLine  =  line1.getRemainingRegion();  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  Line  subLine  =  line1.getRemainingRegion();  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	final  Line  subLine  =  line1.getRemainingRegion();	      final    Line    subLine    =    subLine.getRemainingRegion();    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	8	None	replace
9	[BUG]  [BUGGY]  SubLine  subLine  =  line.getRemainingRegion();  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  SubLine  subLine  =  line.getRemainingRegion();  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	SubLine  subLine  =  line.getRemainingRegion();	      SubLine    subLine    =    subLine.getRemainingRegion();    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	7	None	replace
10	[BUG]  [BUGGY]  SubLine  subLine  =  line1.getRemainingRegion();  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  SubLine  subLine  =  line1.getRemainingRegion();  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	SubLine  subLine  =  line1.getRemainingRegion();	      SubLine    subLine    =    subLine.getRemainingRegion();    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	7	None	replace
11	[BUG]  [BUGGY]  Vector2D  v2D  =  subLine.intersection(v2D,  line1);  [CE]  method  intersection  in  class  SubLine  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Vector2D  v2D  =  subLine.intersection(v2D,  line1);  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  subLine.intersection(v2D,  line1);	  Vector2D    v2D    =    subLine.intersection(line1);    	non-compiled	[CE]  method  intersection  in  class  SubLine  cannot  be  applied  to  given  types;	13	None	replace
12	[BUG]  [BUGGY]  Line  subLine  =  line.getRemainingRegion();  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Line  subLine  =  line.getRemainingRegion();  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Line  subLine  =  line.getRemainingRegion();	      Line    subLine    =    subLine.getRemainingRegion();    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	6	None	replace
13	[BUG]  [BUGGY]  Line  subLine  =  line1.getRemainingRegion();  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Line  subLine  =  line1.getRemainingRegion();  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Line  subLine  =  line1.getRemainingRegion();	      Line    subLine    =    subLine.getRemainingRegion();    	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	6	None	replace
14	[BUG]  [BUGGY]  Line  line1  =  subLine.getRemainingRegion().checkPoint(v2D,  v2D);  [CE]  variable  line1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Line  line1  =  subLine.getRemainingRegion().checkPoint(v2D,  v2D);  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Line  line1  =  subLine.getRemainingRegion().checkPoint(v2D,  v2D);	      Line    line1    =    subLine.getRemainingRegion().checkPoint(v2D);    	non-compiled	[CE]  variable  line1  is  already  defined  in  method  intersection(SubLine,boolean)	11	None	replace
15	[BUG]  [BUGGY]  final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(v2D,  v2D);  [CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(v2D,  v2D);  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(v2D,  v2D);	      final    Vector2D    line2    =    subLine.getRemainingRegion().checkPoint(v2D);    	non-compiled	[CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)	5	None	replace
16	[BUG]  [BUGGY]  Vector2D  v2D  =  subLine.getRemainingRegion().intersection(v2D,  line2);  [CE]  method  intersection  in  interface  Region<S>  cannot  be  applied  to  given  types;  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Vector2D  v2D  =  subLine.getRemainingRegion().intersection(v2D,  line2);  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  subLine.getRemainingRegion().intersection(v2D,  line2);	  Vector2D    v2D    =    subLine.getRemainingRegion().intersection(line2);    	non-compiled	[CE]  method  intersection  in  interface  Region<S>  cannot  be  applied  to  given  types;	2	None	replace
17	[BUG]  [BUGGY]  Vector2D  v2D  =  subLine.getRemainingRegion().intersection(v2D);  [CE]  method  intersection  in  interface  Region<S>  cannot  be  applied  to  given  types;  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Vector2D  v2D  =  subLine.getRemainingRegion().intersection(v2D);  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  subLine.getRemainingRegion().intersection(v2D);	  Vector2D    v2D    =    subLine.getRemainingRegion().intersection(line2);    	non-compiled	[CE]  method  intersection  in  interface  Region<S>  cannot  be  applied  to  given  types;	2	None	replace
18	[BUG]  [BUGGY]  Line  line2  =  subLine.getRemainingRegion().checkPoint(v2D,  v2D);  [CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Line  line2  =  subLine.getRemainingRegion().checkPoint(v2D,  v2D);  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Line  line2  =  subLine.getRemainingRegion().checkPoint(v2D,  v2D);	      Line    line2    =    subLine.getRemainingRegion().checkPoint(v2D);    	non-compiled	[CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)	10	None	replace
19	[BUG]  [BUGGY]  Line  line2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  [CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Line  line2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Line  line2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));	      Line    line2    =    subLine.getRemainingRegion().checkPoint(v2D);    	non-compiled	[CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)	10	None	replace
20	[BUG]  [BUGGY]  Vector2D  v2D  =  line1.intersection(v2D);  [CE]  method  intersection  in  class  Line  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Vector2D  v2D  =  line1.intersection(v2D);  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  line1.intersection(v2D);	  Vector2D    v2D    =    subLine1.intersection(line2);    	non-compiled	[CE]  method  intersection  in  class  Line  cannot  be  applied  to  given  types;	9	None	replace
21	[BUG]  [BUGGY]  Vector2D  v2D  =  line2.intersection(subLine1);  [CE]  cannot  find  symbol  subLine1  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Vector2D  v2D  =  line2.intersection(subLine1);  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  line2.intersection(subLine1);	  Vector2D    v2D    =    subLine1.intersection(line2);    	non-compiled	[CE]  cannot  find  symbol  subLine1	9	None	replace
22	[BUG]  [BUGGY]  final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  [CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(line1.toSubSpace(v2D));	      final    Vector2D    line2    =    subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));    	non-compiled	[CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)	4	None	replace
23	[BUG]  [BUGGY]  final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(line2);  [CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(line2);  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(line2);	      final    Vector2D    line2    =    subLine.getRemainingRegion().checkPoint(v2D);    	non-compiled	[CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)	5	None	replace
24	[BUG]  [BUGGY]  Location  subLine  =  subLine.getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Location  subLine  =  subLine.getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Location  subLine  =  subLine.getRemainingRegion().checkPoint(line1.toSubSpace(v2D));	      	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	3	None	replace
25	[BUG]  [BUGGY]  Line  v2  =  subLine.getRemainingRegion().checkPoint(v2.toSubSpace(v2D));  [CE]  cannot  find  symbol  v2D  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Line  v2  =  subLine.getRemainingRegion().checkPoint(v2.toSubSpace(v2D));  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Line  v2  =  subLine.getRemainingRegion().checkPoint(v2.toSubSpace(v2D));	      	non-compiled	[CE]  cannot  find  symbol  v2D	3	None	replace
26	[BUG]  [BUGGY]  SubLine  subLine  =  subLine.getRemainingRegion().checkPoint(v2D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  SubLine  subLine  =  subLine.getRemainingRegion().checkPoint(v2D);  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	SubLine  subLine  =  subLine.getRemainingRegion().checkPoint(v2D);	      	non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	3	None	replace
27	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Vector2D  v2D  =  line2.intersection(line2);  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	add	Vector2D  v2D  =  line2.intersection(line2);	  Vector2D    v2D    =    subLine1.intersection(line2);    	compilable	  [FE]  NullPointerException  	9	8	replace
28	[BUG]  [BUGGY]  Vector2D  v2D  =  line2.intersection(line2);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Vector2D  v2D  =  line2.intersection(line2);  [BUGGY]      Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  line2.intersection(line2);	  Vector2D    v2D    =    subLine1.intersection(line2);    	compilable	  [FE]  NullPointerException  	9	8	replace
29	[BUG]  [BUGGY]  final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(v2D.toSubSpace(v2D));  [CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(v2D.toSubSpace(v2D));  [BUGGY]    Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(v2D.toSubSpace(v2D));	      final    Vector2D    line2    =    subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));    	non-compiled	[CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)	4	None	replace
