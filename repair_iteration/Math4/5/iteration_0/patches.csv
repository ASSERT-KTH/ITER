bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Vector2D  v2D  =  subLine.intersection(line2);  [CE]  method  intersection  in  class  SubLine  cannot  be  applied  to  given  types;  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  Vector2D  v2D  =  subLine.intersection(line2);  [BUGGY]    Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  subLine.intersection(line2);	Vector2D  v2D  =  line1.intersection(line2);  	non-compiled	[CE]  method  intersection  in  class  SubLine  cannot  be  applied  to  given  types;	9	None	replace
2	[BUG]  [BUGGY]  Vector2D  v2D  =  subLine.getRemainingRegion().intersection(line2);  [CE]  method  intersection  in  interface  Region<S>  cannot  be  applied  to  given  types;  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  Vector2D  v2D  =  subLine.getRemainingRegion().intersection(line2);  [BUGGY]    Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  subLine.getRemainingRegion().intersection(line2);	Vector2D  v2D  =  line1.intersection(line2);  	non-compiled	[CE]  method  intersection  in  interface  Region<S>  cannot  be  applied  to  given  types;	9	None	replace
3	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  v2D  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    [BUGGY]    Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	  	Vector2D  v2D  =  line1.intersection(line2);  	non-compiled	[CE]  cannot  find  symbol  v2D	9	None	replace
4	[BUG]  [BUGGY]    final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  [CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  [BUGGY]  Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	    final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));		non-compiled	[CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)	10	None	add
5	[BUG]  [BUGGY]    final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(v2D);  [CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(v2D);  [BUGGY]  Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	    final  Vector2D  line2  =  subLine.getRemainingRegion().checkPoint(v2D);		non-compiled	[CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)	10	None	add
6	[BUG]  [BUGGY]    Line  subLine  =  subLine.getRemainingRegion();  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    Line  subLine  =  subLine.getRemainingRegion();  [BUGGY]  Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	    Line  subLine  =  subLine.getRemainingRegion();		non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	10	None	add
7	[BUG]  [BUGGY]    SubLine  subLine  =  subLine.getRemainingRegion();  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    SubLine  subLine  =  subLine.getRemainingRegion();  [BUGGY]  Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	    SubLine  subLine  =  subLine.getRemainingRegion();		non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	10	None	add
8	[BUG]  [BUGGY]    final  Line  subLine  =  subLine.getRemainingRegion();  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    final  Line  subLine  =  subLine.getRemainingRegion();  [BUGGY]  Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	    final  Line  subLine  =  subLine.getRemainingRegion();		non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	10	None	add
9	[BUG]  [BUGGY]  Vector2D  v2D  =  subLine1.intersection(line2);  [CE]  cannot  find  symbol  subLine1  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  Vector2D  v2D  =  subLine1.intersection(line2);  [BUGGY]    Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  subLine1.intersection(line2);	Vector2D  v2D  =  line1.intersection(line2);  	non-compiled	[CE]  cannot  find  symbol  subLine1	9	None	replace
10	[BUG]  [BUGGY]    Line  line2  =  subLine.getRemainingRegion().checkPoint(v2D);  [CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    Line  line2  =  subLine.getRemainingRegion().checkPoint(v2D);  [BUGGY]  Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	    Line  line2  =  subLine.getRemainingRegion().checkPoint(v2D);		non-compiled	[CE]  variable  line2  is  already  defined  in  method  intersection(SubLine,boolean)	10	None	add
11	[BUG]  [BUGGY]    Line  line1  =  subLine.getRemainingRegion().checkPoint(v2D);  [CE]  variable  line1  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    Line  line1  =  subLine.getRemainingRegion().checkPoint(v2D);  [BUGGY]  Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	    Line  line1  =  subLine.getRemainingRegion().checkPoint(v2D);		non-compiled	[CE]  variable  line1  is  already  defined  in  method  intersection(SubLine,boolean)	10	None	add
12	[BUG]  [BUGGY]    Line  subLine  =  subLine.getRemainingRegion().checkPoint(v2D);  [CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    Line  subLine  =  subLine.getRemainingRegion().checkPoint(v2D);  [BUGGY]  Vector2D  v2D  =  line1.intersection(line2);  Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	    Line  subLine  =  subLine.getRemainingRegion().checkPoint(v2D);		non-compiled	[CE]  variable  subLine  is  already  defined  in  method  intersection(SubLine,boolean)	10	None	add
13	[BUG]  [BUGGY]  Vector2D  v2D  =  subLine.intersection(line1);  [CE]  method  intersection  in  class  SubLine  cannot  be  applied  to  given  types;  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  Vector2D  v2D  =  subLine.intersection(line1);  [BUGGY]    Location  loc1  =  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));  Location  loc2  =  subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));  if  (includeEndPoints)  {  return  ((loc1  !=  Location.OUTSIDE)  &&  (loc2  !=  Location.OUTSIDE))  ?  v2D  :  null;  }  else  {  [CLASS]  SubLine  [METHOD]  intersection  [RETURN_TYPE]  Vector2D  SubLine  subLine  final  boolean  includeEndPoints  	projects/Math4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	0.2672612419124244	117	117	2	replace	Vector2D  v2D  =  subLine.intersection(line1);	Vector2D  v2D  =  line1.intersection(line2);  	non-compiled	[CE]  method  intersection  in  class  SubLine  cannot  be  applied  to  given  types;	9	None	replace
