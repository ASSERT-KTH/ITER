compilation error,143,replace,[CE] not a statement,--p; ,--p > max;
compilation error,143,replace,[CE] not a statement,--p; ,--p > 0;
compilation error,143,replace,[CE] not a statement,--p; ,--p + 1;
compilation error,143,replace,[CE] not a statement,--p; ,--p - 1;
compilation error,182,add,[CE] cannot find symbol j,,  wData[p - 1][j] =(singularValues[i - 1])/ mainBidiagonal[p - 1];
compilation error,182,add,[CE] cannot find symbol j,,  wData[p - 1][j] =(singularValues[i - 1] + si * ei1[j])/ mainBidiagonal[p - 1];
compilation error,182,add,[CE] cannot find symbol j,,  wData[p - 1][j] =(singularValues[i - 1] + si * ei1[j])/ singularValues[j];
compilation error,182,add,[CE] cannot find symbol j,,  wData[p - 1][j] =(singularValues[i - 1] + si * ei1[j])/ secondaryBidiagonal[p - 1];
compilation error,182,add,[CE] cannot find symbol j,,  wData[p - 1][j] =(singularValues[i - 1] + si * ei1[j])/ mainBidiagonal[i - 1];
compilation error,98,add,[CE] constructor Object in class Object cannot be applied to given types;,,  super(matrix);
compilation error,98,add,[CE] cannot find symbol Preconditions,,  Preconditions.checkNotNull(matrix);
compilation error,98,add,[CE] call to this must be first statement in constructor,,  super();
compilation error,98,add,[CE] cannot find symbol Preconditions,,  Preconditions.checkState(matrix == null);
compilation error,98,add,[CE] cannot find symbol Preconditions,,  Preconditions.checkState(matrix!= null);
compilation error,143,add,[CE] cannot find symbol Mat,,  eigenDecomposition = Mat.sqrt(eigenValues[p - 1]);
compilation error,143,add,[CE] no suitable method found for max(double),,  p = Math.max(eigenValues[p - 1]);
compilation error,143,add,[CE] no suitable method found for max(double),,  eigenValues[p] = Math.max(eigenValues[p - 1]);
compilation error,143,add,[CE] cannot find symbol Mat,,  eigenDecomposition = Mat.sqrt(eigenValues[p - 1], p);
compilation error,143,add,[CE] cannot find symbol Mat,,  eigenDecomposition = Mat.sqrt(eigenValues[p + 1]);
increase failing tests,217,replace, [FE] NullPointerException testTruncated,if (cachedS == null) { ,if(cachedS!= null) {
compilation error,217,replace,[CE] illegal start of type,if (cachedS == null) { , 
increase failing tests,283,add, [FE] MathRuntimeException$4 testTruncated,,  RealMatrix cachedVt = getV();
compilation error,283,add,[CE] cannot find symbol,,  RealMatrix cachedVt = getV().remove();
compilation error,283,add,[CE] cannot assign a value to final variable cachedVt,,  final RealMatrix cachedVt = getV().transpose();
compilation error,283,add,[CE] cannot find symbol,,  RealMatrix cachedVt = getV().get();
compilation error,220,add,[CE] cannot find symbol singleValues,,  singleValues = MatrixUtils.createRealSingularMatrix(cachedS);
compilation error,220,add,[CE] cannot find symbol nonSingularValues,,  cachedS = MatrixUtils.createRealMatrix(nonSingularValues);
compilation error,220,add,[CE] cannot find symbol singleValues,,  singleValues = MatrixUtils.createRealSingularMatrix(nonSingular);
compilation error,220,add,[CE] cannot find symbol singleValues,,  singleValues = MatrixUtils.createRealSingularMatrix(numberValues);
compilation error,217,add,[CE] cannot find symbol,,  RealMatrix cachedS =(RealMatrix)this.singularValues.get();
compilation error,217,add,[CE] cannot find symbol,,  RealMatrix cachedS =(RealMatrix)super.getS();
compilation error,217,add,[CE] method createRealDiagonalMatrix in class MatrixUtils cannot be applied to given types;,,  RealMatrix cachedS = MatrixUtils.createRealDiagonalMatrix(cachedVt);
compilation error,217,add,[CE] cannot find symbol realMatrix,,  RealMatrix cachedS =(RealMatrix)this.realMatrix.getS();
compilation error,223,add,[CE] cannot find symbol,,  cachedS = MatrixUtils.createRealHorizontalMatrix(cachedVt, singularValues);
compilation error,223,add,[CE] cannot find symbol nonSingularValues,,  cachedS = MatrixUtils.createRealHorizontalMatrix(cachedVt, nonSingularValues);
compilation error,223,add,[CE] cannot find symbol eigenValues,,  cachedS = MatrixUtils.createRealHorizontalMatrix(cachedVt, eigenValues);
compilation error,223,add,[CE] cannot find symbol,,  cachedS = MatrixUtils.createRealHorizontalMatrix(cachedVt, null);
compilation error,223,add,[CE] cannot find symbol,,  cachedS = MatrixUtils.createRealInvertedMatrix(cachedVt, singularValues);
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getV().resolve();
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getV().remove();
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getCachedVt().transpose();
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getCachedVt().transform();
increase failing tests,284,replace, [FE] NullPointerException testTruncated,cachedVt = getV().transpose(); , 
compilation error,220,replace,[CE] cannot find symbol nonSingularValues,cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); ,cachedS = MatrixUtils.createRealDiagonalMatrix(nonSingularValues);
compilation error,220,replace,[CE] method createRealDiagonalMatrix in class MatrixUtils cannot be applied to given types;,cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); ,cachedS = MatrixUtils.createRealDiagonalMatrix(cachedVt);
compilation error,220,replace,[CE] cannot find symbol nonSingularValues,cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); ,cachedS = MatrixUtils.createRealDiagonalMatrix(cachedVt, nonSingularValues);
compilation error,220,replace,[CE] method createRealDiagonalMatrix in class MatrixUtils cannot be applied to given types;,cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); ,cachedS = MatrixUtils.createRealDiagonalMatrix(cachedVt, singularValues);
compilation error,99,add,[CE] cannot return a value from method whose result type is void,,  return SingularValueDecompositionImpl.create(matrix, Math.max(matrix.getRowDimension(), matrix.getColumnDimension()));
compilation error,99,add,[CE] cannot return a value from method whose result type is void,,  return new SingularValueDecompositionImpl(Math.max(matrix.getRowDimension(), matrix.getColumnDimension()));
compilation error,99,add,[CE] cannot return a value from method whose result type is void,,  return new SingularValueDecompositionImpl(Math.max(matrix.getInt(), matrix.getColumnDimension()));
compilation error,99,add,[CE] cannot return a value from method whose result type is void,,  return SingularValueDecompositionImpl.create(matrix, Math.max(matrix.getDoubleDimension(), matrix.getColumnDimension()));
compilation error,99,add,[CE] cannot return a value from method whose result type is void,,  return new SingularValueDecompositionImpl(Math.max(matrix.getInt(), Math.min(matrix.getRowDimension()), matrix.getColumnDimension()));
compilation error,288,add,[CE] cannot find symbol,,  cachedVt = getSingularValue().transform(cachedVt);
compilation error,288,add,[CE] cannot find symbol,,  cachedVt = getSecond().transform(cachedVt);
compilation error,288,add,[CE] cannot find symbol,,  cachedVt = getSingularValue();
compilation error,288,add,[CE] cannot find symbol,,  cachedVt = getSingularValues().transform(cachedVt);
compilation error,288,add,[CE] cannot find symbol,,  cachedVt.clear();
compilation error,223,replace,[CE] cannot find symbol nonSingular,return cachedS; ,return cachedS == null? cachedS : new RealMatrix(nonSingular);
compilation error,223,replace,[CE] cannot find symbol nonSingular,return cachedS; ,return cachedS!= null? cachedS : new RealMatrix(nonSingular);
compilation error,223,replace,[CE] cannot find symbol,return cachedS; ,return cachedS.separator();
increase failing tests,283,replace, [FE] NullPointerException testTruncated,if (cachedVt == null) { ,if(cachedVt!= null) {
compilation error,283,replace,[CE] cannot find symbol length,if (cachedVt == null) { ,if(cachedVt == null || cachedVt.length > 0) {
compilation error,99,replace,[CE] illegal start of expression,} ,return SingularValueDecompositionImpl.createSingular(matrix, Math.max(matrix.getRowDimension(), matrix.getColumnDimension()));
compilation error,99,replace,[CE] illegal start of expression,} ,setSingularValue(matrix, Math.max(matrix.getRowDimension(), matrix.getColumnDimension()));
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = getSingularValue();
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = getSingularValueDecomposition();
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = getSingularDecomposition();
compilation error,98,replace,[CE] cannot find symbol,this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension())); ,this(matrix, Math.min(matrix.getRowDimension(), matrix.getUpperBound()));
compilation error,288,replace,[CE] cannot find symbol,return cachedVt; ,return cachedVt == null? cachedVt.getValue() : null;
increase failing tests,288,replace, [FE] NullPointerException testTruncated,return cachedVt; ,return cachedVt == null? cachedVt : null;
increase failing tests,182,replace, [FE] MathRuntimeException$4 testTruncated,wData[i] = new double[p]; ,wData[i] = new double[i];
increase failing tests,182,replace, [FE] MathRuntimeException$4 testTruncated,wData[i] = new double[p]; ,wData[i] = new double[m];
compilation error,182,replace,[CE] cannot find symbol j,wData[i] = new double[p]; ,wData[i] = new double[j];
compilation error,182,replace,[CE] cannot find symbol si,wData[i] = new double[p]; ,wData[i] = new double[si];
compilation error,98,replace,[CE] cannot find symbol nonSingular,this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension())); ,this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension()), nonSingular);
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getVt().getCachedVt();
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getVt().reset();
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getVt().newInstance();
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getVt().getCache();
compilation error,99,add,[CE] cannot find symbol,,  setSingularValueDecomposition(matrix);
compilation error,99,add,[CE] cannot find symbol,,  setSingularValue(matrix);
compilation error,99,add,[CE] cannot find symbol singularValueDecomposition,,  this.singularValueDecomposition = MatrixUtil.doubleValue(matrix.getSize(), matrix.getColumnDimension());
compilation error,99,add,[CE] cannot find symbol singularValueDecomposition,,  this.singularValueDecomposition = MatrixUtils.indicator(matrix.getSize(), matrix.getColumnDimension());
compilation error,99,add,[CE] cannot find symbol singularValueDecomposition,,  this.singularValueDecomposition = MatrixUtils.indicator(matrix.getSlope(), matrix.getColumnDimension());
compilation error,217,replace,[CE] cannot find symbol length,if (cachedS == null) { ,if(cachedS == null || cachedS.length == 0) {
compilation error,217,replace,[CE] cannot find symbol,if (cachedS == null) { ,if(cachedS == null || cachedS.isArray()) {
compilation error,217,replace,[CE] cannot find symbol,if (cachedS == null) { ,if(cachedS == null || cachedS.size() == 0) {
compilation error,283,add,[CE] cannot find symbol,,  RealMatrix cachedVt =(RealMatrix)this.cachedV.get();
compilation error,283,add,[CE] cannot find symbol,,  RealMatrix cachedVt =(realMatrix)getV();
increase failing tests,283,add, [FE] MathRuntimeException$4 testTruncated,,  RealMatrix cachedVt =(RealMatrix)getV();
compilation error,283,add,[CE] cannot find symbol,,  RealMatrix cachedVt =(realMatrix)getVT();
compilation error,220,add,[CE] cannot find symbol,,  RealMatrix cachedS =(RealMatrix)this.cachedS.get();
compilation error,220,add,[CE] cannot find symbol,,  RealMatrix cachedS =(realMatrix)this.cachedS.get();
compilation error,220,add,[CE] cannot find symbol,,  RealMatrix cachedS =(RealMatrix)cachedS.get();
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = cachedUt.getCache();
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = cachedUt.getComponentType();
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = cachedUt.getCachedVt();
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = cachedUt.getChildCount();
compilation error,182,add,[CE] variable eData is already defined in method getU(),,  double[][] eData =(si * ei0[i] + si * ei1[i])/ singularValues[i];
compilation error,182,add,[CE] variable eData is already defined in method getU(),,  double[][] eData =(si * ei0[j] + si * ei1[j])/ singularValues[i];
compilation error,182,add,[CE] variable eData is already defined in method getU(),,  double[][] eData =(m * ei0[i] + si * ei1[i])/ singularValues[i];
compilation error,182,add,[CE] variable eData is already defined in method getU(),,  double[][] eData =(si * ei0[j] + si * ei1[j])/ mainBidiagonal[p - 1];
compilation error,182,add,[CE] variable eData is already defined in method getU(),,  double[][] eData =(si * ei0[i] + si * ei1[i])/ mainBidiagonal[p - 1];
compilation error,288,replace,[CE] cannot find symbol,return cachedVt; ,return cachedVt.getRealMatrix();
compilation error,288,replace,[CE] cannot find symbol realMatrix,return cachedVt; ,return cachedVt.realMatrix;
compilation error,288,replace,[CE] cannot find symbol,return cachedVt; ,return cachedVt.newInstance();
compilation error,288,replace,[CE] cannot find symbol,return cachedVt; ,return cachedVt.getResult();
compilation error,223,add,[CE] cannot find symbol,,  cachedS.addChildToFront(cachedS);
compilation error,223,add,[CE] cannot find symbol,,  cachedS.clear();
compilation error,223,add,[CE] cannot find symbol,,  cachedS.clear(); cachedS.addChildToFront(cachedS);
compilation error,220,replace,[CE] no suitable method found for createRealMatrix(SingularValueDecompositionImpl),cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); ,cachedS = MatrixUtils.createRealMatrix(this);
compilation error,220,replace,[CE] method createRealDiagonalMatrix in class MatrixUtils cannot be applied to given types;,cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); ,cachedS = MatrixUtils.createRealDiagonalMatrix(this);
compilation error,220,replace,[CE] cannot find symbol nonSingularValues,cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); ,cachedS = MatrixUtils.createRealDiagonalMatrix(this, nonSingularValues);
compilation error,99,replace,[CE] illegal start of expression,} ,this.singularValueDecomposition = MatrixUtils.indicator(matrix.getSize(), nonSingular);
compilation error,99,replace,[CE] illegal start of expression,} ,this.singularValueDecomposition = MatrixUtils.decompose(matrix, nonSingular);
compilation error,143,add,[CE] possible loss of precision,,  p = Math.min(max, eigenValues[p - 1]);
compilation error,143,add,[CE] possible loss of precision,,  p = Math.max(p, eigenValues[p - 1]);
compilation error,143,add,[CE] cannot find symbol,,  eigenDecomposition = matrix.getDecomposition();
compilation error,143,add,[CE] cannot find symbol,,  eigenDecomposition = matrix.getDecompositionInstance();
compilation error,288,add,[CE] cannot find symbol,,  cachedVt = cachedVt.get();
compilation error,288,add,[CE] cannot find symbol,,  cachedVt.addChildToFront(cachedVt);
compilation error,288,add,[CE] cannot find symbol,,  cachedVt = cachedVt.getComponentType();
compilation error,288,add,[CE] cannot find symbol,,  cachedVt = cachedVt.getParameterCount();
compilation error,223,replace,[CE] cannot find symbol,return cachedS; ,return cachedS.getSecond();
compilation error,223,replace,[CE] cannot find symbol,return cachedS; ,return cachedS.getSingularMatrix();
compilation error,223,replace,[CE] cannot find symbol,return cachedS; ,return cachedS.getRealMatrix();
compilation error,223,replace,[CE] cannot find symbol,return cachedS; ,return cachedS.getS();
compilation error,283,replace,[CE] cannot find symbol,if (cachedVt == null) { ,if(cachedVt == null || cachedVt.isInverted()) {
compilation error,283,replace,[CE] cannot find symbol,if (cachedVt == null) { ,if(cachedVt == null || cachedVt.isScalarValue()) {
compilation error,283,replace,[CE] cannot find symbol,if (cachedVt == null) { ,if(cachedVt == null || cachedVt.isNaN()) {
compilation error,98,add,[CE] cannot find symbol,,  Preconditions.checkArgument(matrix.getType() == Token.EXPR_RESULT);
compilation error,98,add,[CE] cannot find symbol,,  Preconditions.checkArgument(matrix.getType() == Token.EMPTY);
compilation error,98,add,[CE] cannot find symbol,,  Preconditions.checkArgument(matrix.getType() == Token.FUNCTION);
compilation error,217,add,[CE] cannot find symbol,,  RealMatrix cachedS =(RealMatrix)this.cachedS.get();
compilation error,217,add,[CE] cannot find symbol,,  RealMatrix cachedS =(realMatrix)this.cachedS.get();
compilation error,217,add,[CE] cannot find symbol,,  RealMatrix cachedS =(realMatrix)this.cachedUtil.getCachedSingularValues();
compilation error,143,replace,[CE] not a statement,--p; ,--p * eigenValues.length;
compilation error,143,replace,[CE] unexpected type,--p; ,--p += Math.max(eigenValues[p - 1]);
compilation error,143,replace,[CE] unexpected type,--p; ,--p += Math.min(max, eigenValues[p - 1]);
increase failing tests,182,replace, [FE] MathRuntimeException$4 testTruncated,wData[i] = new double[p]; ,wData[i] = new double[0];
increase failing tests,182,replace, [FE] MathRuntimeException$4 testTruncated,wData[i] = new double[p]; ,wData[i] = new double[2];
compilation error,98,add,[CE] cannot reference m before supertype constructor has been called,,  this(Math.min(m, matrix.getDimension(), matrix.getRowDimension()));
compilation error,98,add,[CE] cannot reference m before supertype constructor has been called,,  this(Math.min(m, matrix.getDimension()), matrix.getColumnDimension());
compilation error,98,add,[CE] no suitable method found for abs(RealMatrix),,  this(Math.abs(matrix) == Math.abs(nonSingular));
compilation error,98,add,[CE] no suitable method found for abs(RealMatrix),,  this(Math.abs(matrix) < Math.abs(nonSingular));
compilation error,217,replace,[CE] cannot find symbol realMatrix,if (cachedS == null) { ,if(cachedS == null || cachedS.equals(realMatrix)) {
compilation error,217,replace,[CE] cannot find symbol,if (cachedS == null) { ,if(cachedS == null || cachedS.isInfinite()) {
compilation error,217,replace,[CE] cannot find symbol,if (cachedS == null) { ,if(cachedS == null || cachedS.equals(realMatrix())) {
compilation error,99,replace,[CE] illegal start of expression,} ,return MatrixUtils.newInstance(Math.min(m, matrix.getColumnDimension(), matrix.getRowDimension()));
compilation error,99,replace,[CE] illegal start of expression,} ,return MatrixUtils.newInstance(Math.min(m, matrix.getEntry(nonSingular), matrix.getColumnDimension()));
compilation error,99,replace,[CE] illegal start of expression,} ,return MatrixUtils.newInstance(Math.min(m, matrix.getColumnDimension()));
compilation error,99,replace,[CE] illegal start of expression,} ,return MatrixUtils.newInstance(Math.min(m, matrix.getColumnDimension(), matrix.getSize()));
compilation error,220,replace,[CE] cannot find symbol i,cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); ,cachedS = MatrixUtils.createRealDiagonalMatrix(m, i);
compilation error,220,replace,[CE] cannot find symbol eigenValues,cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); ,cachedS = MatrixUtils.createRealDiagonalMatrix(m, eigenValues);
compilation error,220,replace,[CE] method createRealDiagonalMatrix in class MatrixUtils cannot be applied to given types;,cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); ,cachedS = MatrixUtils.createRealDiagonalMatrix(32);
increase failing tests,217,add, [FE] StackOverflowError testTruncated,,  RealMatrix cachedS =(RealMatrix)getS();
compilation error,217,add,[CE] cannot find symbol nonSingularValues,,  RealMatrix cachedS = getS(nonSingularValues);
compilation error,217,add,[CE] cannot find symbol,,  RealMatrix cachedS =(RealMatrix)getCachedS();
increase failing tests,217,add, [FE] StackOverflowError testTruncated,,  RealMatrix cachedS = getS();
compilation error,217,add,[CE] cannot find symbol,,  RealMatrix cachedS = new RealMatrix(getSize());
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = cachedUt.getV();
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = cachedUt.getSingularValue();
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = cachedS.get();
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = cachedUt.getValue();
compilation error,284,add,[CE] cannot find symbol,,  cachedVt = cachedUt.getSingleNode();
compilation error,223,replace,[CE] cannot find symbol cachedUtil,return cachedS; ,return cachedS.equals(cachedUtil.getSingularValue(singularValues))? cachedS : null;
compilation error,223,replace,[CE] cannot find symbol,return cachedS; ,return cachedS == null? cachedS.getS() : null;
compilation error,223,replace,[CE] cannot find symbol,return cachedS; ,return cachedS == null? cachedS.getS() : new RealMatrix(cachedS);
compilation error,223,replace,[CE] RealMatrix is abstract; cannot be instantiated,return cachedS; ,return cachedS == null? cachedS : new RealMatrix(singularValues);
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getV().getTarget();
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getV().getRealMatrix();
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getV().reset();
compilation error,284,replace,[CE] cannot find symbol,cachedVt = getV().transpose(); ,cachedVt = getV().getSecond();
compilation error,220,add,[CE] cannot find symbol,,  cachedS = MatrixUtils.createRealSingularMatrix(singularValues);
compilation error,220,add,[CE] cannot find symbol,,  cachedS = MatrixUtils.createRealSingularValues(singularValues);
compilation error,220,add,[CE] cannot find symbol singleValues,,  singleValues = getSingularValues();
increase failing tests,220,add, [FE] StackOverflowError testTruncated,,  RealMatrix cachedS =(RealMatrix)getS();
compilation error,220,add,[CE] cannot assign a value to final variable cachedS,,  final RealMatrix cachedS =(RealMatrix)getS();
compilation error,223,add,[CE] cannot find symbol cachedUtil,,  cachedS = cachedUtil.getSingularValue(singularValues);
compilation error,223,add,[CE] cannot find symbol cachedUtil,,  cachedS = cachedUtil.getSingularValue(cachedS);
compilation error,223,add,[CE] cannot find symbol cachedUtil,,  cachedS = cachedUtil.getSingularValue(true);
compilation error,288,replace,[CE] cannot find symbol realMatrix,return cachedVt; ,return cachedVt == null? cachedVt : new RealMatrix(realMatrix);
compilation error,288,replace,[CE] ';' expected,return cachedVt; ,return cachedVt == null? cachedVt : new RealMatrix(realMatrix));
compilation error,288,replace,[CE] cannot find symbol,return cachedVt; ,return cachedVt!= null? cachedVt.getValue() : null;
compilation error,182,add,[CE] variable p is already defined in method getU(),,  double[][] p =(si * ei0[j] + si * ei1[j])/ singularValues[i];
compilation error,182,add,[CE] variable p is already defined in method getU(),,  double[][] p =(si * ei0[j] + si * ei1[j])/ pluralValues[i];
compilation error,182,add,[CE] variable p is already defined in method getU(),,  double[][] p =(si * ei0[j] + mi * ei1[j])/ singularValues[i];
compilation error,182,add,[CE] variable p is already defined in method getU(),,  double[][] p =(si * ei0[j] + si * ei1[j])/ singularValues[i].doubleValue();
compilation error,182,add,[CE] variable p is already defined in method getU(),,  double[][] p =(sin[i - 1] * mainBidiagonal[i - 1])/ p;
compilation error,143,replace,[CE] not a statement,--p; ,--p > eigenValues.length;
compilation error,143,replace,[CE] not a statement,--p; ,--p > eigenValues[p - 1];
compilation error,143,replace,[CE] not a statement,--p; ,--p > eigenValues[p];
compilation error,98,replace,[CE] ';' expected,this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension())); ,this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension()), 0));
compilation error,98,replace,[CE] cannot reference m before supertype constructor has been called,this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension())); ,this(m, Math.min(matrix.getRowDimension(), matrix.getColumnDimension()));
compilation error,143,add,[CE] possible loss of precision,,  p = Math.min(p, eigenValues[p - 1]);
compilation error,143,add,[CE] possible loss of precision,,  p = Math.min(p + 1, eigenValues[p - 1]);
compilation error,143,add,[CE] possible loss of precision,,  p = Math.max(eigenValues[p - 1], 0);
compilation error,283,replace,[CE] cannot find symbol,if (cachedVt == null) { ,if(cachedVt == null || cachedVt.isInfinite()) {
increase failing tests,283,add, [FE] StackOverflowError testTruncated,,  RealMatrix cachedVt =(RealMatrix)getVT();
compilation error,283,add,[CE] cannot find symbol,,  RealMatrix cachedVt = cachedS.getTarget();
compilation error,283,add,[CE] cannot find symbol,,  RealMatrix cachedVt = cachedS.get(getV());
compilation error,288,add,[CE] cannot find symbol,,  cachedVt = cachedVt.getSingularValue();
compilation error,288,add,[CE] cannot find symbol,,  cachedVt = cachedUt.getSingularValue();
compilation error,288,add,[CE] cannot find symbol,,  cachedVt = cachedVt.getSingleNode();
compilation error,99,add,[CE] cannot return a value from method whose result type is void,,  return MatrixUtils.newInstance(matrix.getDouble(), matrix.getRowDimension());
compilation error,99,add,[CE] cannot return a value from method whose result type is void,,  return MatrixUtils.newInstance(matrix.getDouble(), matrix.getColumnDimension());
