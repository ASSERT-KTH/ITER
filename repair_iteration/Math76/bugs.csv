bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] --p; [FE] AssertionError [CONTEXT] mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); final double[] eigenValues = eigenDecomposition.getRealEigenvalues(); int p = Math.min(max, eigenValues.length); while ((p > 0) && (eigenValues[p - 1] <= 0)) { [BUGGY] --p; [BUGGY] } singularValues = new double[p]; for (int i = 0; i < p; ++i) { singularValues[i] = Math.sqrt(eigenValues[i]); } } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	143	143	2	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); final double[] eigenValues = eigenDecomposition.getRealEigenvalues(); int p = Math.min(max, eigenValues.length); while ((p > 0) && (eigenValues[p - 1] <= 0)) { [BUGGY] [BUGGY] --p; } singularValues = new double[p]; for (int i = 0; i < p; ++i) { singularValues[i] = Math.sqrt(eigenValues[i]); } } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	143	143	2	add	
3	[BUG] [BUGGY] if (cachedS == null) { [FE] AssertionError [CONTEXT] public RealMatrix getS() throws InvalidMatrixException { [BUGGY] if (cachedS == null) { [BUGGY]   cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); } return cachedS; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getS [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	217	217	2	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public RealMatrix getS() throws InvalidMatrixException { [BUGGY] [BUGGY] if (cachedS == null) {  cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); } return cachedS; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getS [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	217	217	2	add	
5	[BUG] [BUGGY] cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); [FE] AssertionError [CONTEXT] public RealMatrix getS() throws InvalidMatrixException { if (cachedS == null) {  [BUGGY] cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); [BUGGY]  } return cachedS; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getS [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	220	220	2	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public RealMatrix getS() throws InvalidMatrixException { if (cachedS == null) {  [BUGGY] [BUGGY] cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); } return cachedS; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getS [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	220	220	2	add	
7	[BUG] [BUGGY] return cachedS; [FE] AssertionError [CONTEXT] public RealMatrix getS() throws InvalidMatrixException { if (cachedS == null) {  cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); } [BUGGY] return cachedS; [BUGGY] } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getS [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	223	223	2	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public RealMatrix getS() throws InvalidMatrixException { if (cachedS == null) {  cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues); } [BUGGY] [BUGGY] return cachedS; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getS [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	223	223	2	add	
9	[BUG] [BUGGY] if (cachedVt == null) { [FE] AssertionError [CONTEXT] public RealMatrix getVT() throws InvalidMatrixException { [BUGGY] if (cachedVt == null) { [BUGGY] cachedVt = getV().transpose(); }  return cachedVt; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getVT [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	283	283	2	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public RealMatrix getVT() throws InvalidMatrixException { [BUGGY] [BUGGY] if (cachedVt == null) { cachedVt = getV().transpose(); }  return cachedVt; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getVT [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	283	283	2	add	
11	[BUG] [BUGGY] cachedVt = getV().transpose(); [FE] AssertionError [CONTEXT] public RealMatrix getVT() throws InvalidMatrixException { if (cachedVt == null) { [BUGGY] cachedVt = getV().transpose(); [BUGGY] }  return cachedVt; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getVT [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	284	284	2	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public RealMatrix getVT() throws InvalidMatrixException { if (cachedVt == null) { [BUGGY] [BUGGY] cachedVt = getV().transpose(); }  return cachedVt; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getVT [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	284	284	2	add	
13	[BUG] [BUGGY] return cachedVt; [FE] AssertionError [CONTEXT] public RealMatrix getVT() throws InvalidMatrixException { if (cachedVt == null) { cachedVt = getV().transpose(); }  [BUGGY] return cachedVt; [BUGGY]  } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getVT [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	288	288	2	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public RealMatrix getVT() throws InvalidMatrixException { if (cachedVt == null) { cachedVt = getV().transpose(); }  [BUGGY] [BUGGY] return cachedVt; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getVT [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.8164965809277261	288	288	2	add	
15	[BUG] [BUGGY] wData[i] = new double[p]; [FE] AssertionError [CONTEXT] final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } for (int j = 0; j < p; ++j) { wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } for (int i = p; i < m; ++i) { [BUGGY] wData[i] = new double[p]; [BUGGY] } cachedU = transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); } else {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1); cachedU = transformer.getU().multiply(e); }  [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.7071067811865475	182	182	2	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } for (int j = 0; j < p; ++j) { wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } for (int i = p; i < m; ++i) { [BUGGY] [BUGGY] wData[i] = new double[p]; } cachedU = transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); } else {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1); cachedU = transformer.getU().multiply(e); }  [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.7071067811865475	182	182	2	add	
17	[BUG] [BUGGY] this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension())); [FE] AssertionError [CONTEXT] public SingularValueDecompositionImpl(final RealMatrix matrix) throws InvalidMatrixException { [BUGGY] this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension())); [BUGGY] } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix)  RealMatrix matrix [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse BiDiagonalTransformer transformer int m n  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	98	98	2	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public SingularValueDecompositionImpl(final RealMatrix matrix) throws InvalidMatrixException { [BUGGY] [BUGGY] this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension())); } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix)  RealMatrix matrix [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse BiDiagonalTransformer transformer int m n  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	98	98	2	add	
19	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public SingularValueDecompositionImpl(final RealMatrix matrix) throws InvalidMatrixException { this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension())); [BUGGY] } [BUGGY]  [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix)  RealMatrix matrix [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse BiDiagonalTransformer transformer int m n  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	99	99	2	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public SingularValueDecompositionImpl(final RealMatrix matrix) throws InvalidMatrixException { this(matrix, Math.min(matrix.getRowDimension(), matrix.getColumnDimension())); [BUGGY] [BUGGY] } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix)  RealMatrix matrix [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse BiDiagonalTransformer transformer int m n  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	99	99	2	add	
21	[BUG] [BUGGY] if (cachedU == null) { [FE] AssertionError [CONTEXT] throws InvalidMatrixException { [BUGGY] if (cachedU == null) { [BUGGY]  final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) { [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	156	156	2	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { [BUGGY] [BUGGY] if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) { [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	156	156	2	add	
23	[BUG] [BUGGY] final int p = singularValues.length; [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedU == null) { [BUGGY] final int p = singularValues.length; [BUGGY] if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	158	158	2	replace	
24	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedU == null) { [BUGGY] [BUGGY] final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	158	158	2	add	
25	[BUG] [BUGGY] if (m >= n) { [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedU == null) { final int p = singularValues.length; [BUGGY] if (m >= n) { [BUGGY]  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	159	159	2	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedU == null) { final int p = singularValues.length; [BUGGY] [BUGGY] if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	159	159	2	add	
27	[BUG] [BUGGY] final RealMatrix e =  eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  [BUGGY] final RealMatrix e =     eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); [BUGGY] eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	161	162	2	replace	
28	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  [BUGGY] [BUGGY] final RealMatrix e =     eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	161	162	2	add	
29	[BUG] [BUGGY] final double[][] eData = e.getData(); [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); [BUGGY] final double[][] eData = e.getData(); [BUGGY] final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	163	163	2	replace	
30	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); [BUGGY] [BUGGY] final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	163	163	2	add	
31	[BUG] [BUGGY] final double[][] wData = new double[m][p]; [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); [BUGGY] final double[][] wData = new double[m][p]; [BUGGY] double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	164	164	2	replace	
32	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); [BUGGY] [BUGGY] final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	164	164	2	add	
33	[BUG] [BUGGY] double[] ei1 = eData[0]; [FE] AssertionError [CONTEXT] if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; [BUGGY] double[] ei1 = eData[0]; [BUGGY] for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	165	165	2	replace	
34	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; [BUGGY] [BUGGY] double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	165	165	2	add	
35	[BUG] [BUGGY] for (int i = 0; i < p - 1; ++i) { [FE] AssertionError [CONTEXT] if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; [BUGGY] for (int i = 0; i < p - 1; ++i) { [BUGGY]  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	166	166	2	replace	
36	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (cachedU == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[m][p]; double[] ei1 = eData[0]; [BUGGY] [BUGGY] for (int i = 0; i < p - 1; ++i) {  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	166	166	2	add	
37	[BUG] [BUGGY] for (int j = 0; j < p; ++j) { [FE] AssertionError [CONTEXT]  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } [BUGGY] for (int j = 0; j < p; ++j) { [BUGGY] wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } for (int i = p; i < m; ++i) { wData[i] = new double[p]; } cachedU = transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); } else {  [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	177	177	2	replace	
38	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } [BUGGY] [BUGGY] for (int j = 0; j < p; ++j) { wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } for (int i = p; i < m; ++i) { wData[i] = new double[p]; } cachedU = transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); } else {  [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	177	177	2	add	
39	[BUG] [BUGGY] wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; [FE] AssertionError [CONTEXT] final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } for (int j = 0; j < p; ++j) { [BUGGY] wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; [BUGGY] } for (int i = p; i < m; ++i) { wData[i] = new double[p]; } cachedU = transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); } else {  final RealMatrix e = [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	178	178	2	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; final double[] wi= wData[i]; ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } for (int j = 0; j < p; ++j) { [BUGGY] [BUGGY] wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } for (int i = p; i < m; ++i) { wData[i] = new double[p]; } cachedU = transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); } else {  final RealMatrix e = [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	178	178	2	add	
41	[BUG] [BUGGY] for (int i = p; i < m; ++i) { [FE] AssertionError [CONTEXT] ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } for (int j = 0; j < p; ++j) { wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } [BUGGY] for (int i = p; i < m; ++i) { [BUGGY] wData[i] = new double[p]; } cachedU = transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); } else {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1); cachedU = transformer.getU().multiply(e); } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	181	181	2	replace	
42	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] ei1 = eData[i + 1]; final double si = secondaryBidiagonal[i]; for (int j = 0; j < p; ++j) { wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } for (int j = 0; j < p; ++j) { wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } [BUGGY] [BUGGY] for (int i = p; i < m; ++i) { wData[i] = new double[p]; } cachedU = transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); } else {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1); cachedU = transformer.getU().multiply(e); } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	181	181	2	add	
43	[BUG] [BUGGY] cachedU =  transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); [FE] AssertionError [CONTEXT] wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } for (int j = 0; j < p; ++j) { wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } for (int i = p; i < m; ++i) { wData[i] = new double[p]; } [BUGGY] cachedU =     transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); [BUGGY] transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); } else {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1); cachedU = transformer.getU().multiply(e); } }  [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	184	185	2	replace	
44	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j]; } } for (int j = 0; j < p; ++j) { wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } for (int i = p; i < m; ++i) { wData[i] = new double[p]; } [BUGGY] [BUGGY] cachedU =     transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); } else {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1); cachedU = transformer.getU().multiply(e); } }  [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	184	185	2	add	
45	[BUG] [BUGGY] } else { [FE] AssertionError [CONTEXT] } for (int j = 0; j < p; ++j) { wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } for (int i = p; i < m; ++i) { wData[i] = new double[p]; } cachedU = transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); [BUGGY] } else { [BUGGY]  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1); cachedU = transformer.getU().multiply(e); } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	186	186	2	replace	
46	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } for (int j = 0; j < p; ++j) { wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j]; } for (int i = p; i < m; ++i) { wData[i] = new double[p]; } cachedU = transformer.getU().multiply(MatrixUtils.createRealMatrix(wData)); [BUGGY] [BUGGY] } else {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1); cachedU = transformer.getU().multiply(e); } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	186	186	2	add	
47	[BUG] [BUGGY] return cachedU; [FE] AssertionError [CONTEXT] } else {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1); cachedU = transformer.getU().multiply(e); } }  [BUGGY] return cachedU; [BUGGY]  } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	196	196	2	replace	
48	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } else {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1); cachedU = transformer.getU().multiply(e); } }  [BUGGY] [BUGGY] return cachedU; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getU [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	196	196	2	add	
49	[BUG] [BUGGY] if (cachedV == null) { [FE] AssertionError [CONTEXT] throws InvalidMatrixException { [BUGGY] if (cachedV == null) { [BUGGY]  final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); cachedV = transformer.getV().multiply(e); } else {   [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	236	236	2	replace	
50	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { [BUGGY] [BUGGY] if (cachedV == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); cachedV = transformer.getV().multiply(e); } else {   [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	236	236	2	add	
51	[BUG] [BUGGY] final int p = singularValues.length; [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedV == null) { [BUGGY] final int p = singularValues.length; [BUGGY] if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); cachedV = transformer.getV().multiply(e); } else {   final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	238	238	2	replace	
52	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedV == null) { [BUGGY] [BUGGY] final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); cachedV = transformer.getV().multiply(e); } else {   final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	238	238	2	add	
53	[BUG] [BUGGY] if (m >= n) { [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedV == null) { final int p = singularValues.length; [BUGGY] if (m >= n) { [BUGGY]  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); cachedV = transformer.getV().multiply(e); } else {   final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	239	239	2	replace	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedV == null) { final int p = singularValues.length; [BUGGY] [BUGGY] if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); cachedV = transformer.getV().multiply(e); } else {   final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	239	239	2	add	
55	[BUG] [BUGGY] final RealMatrix e =  eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedV == null) { final int p = singularValues.length; if (m >= n) {  [BUGGY] final RealMatrix e =     eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); [BUGGY] eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); cachedV = transformer.getV().multiply(e); } else {   final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[n][p]; double[] ei1 = eData[0]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	241	242	2	replace	
56	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedV == null) { final int p = singularValues.length; if (m >= n) {  [BUGGY] [BUGGY] final RealMatrix e =     eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); cachedV = transformer.getV().multiply(e); } else {   final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[n][p]; double[] ei1 = eData[0]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	241	242	2	add	
57	[BUG] [BUGGY] cachedV = transformer.getV().multiply(e); [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedV == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); [BUGGY] cachedV = transformer.getV().multiply(e); [BUGGY] } else {   final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[n][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) { final double mi = mainBidiagonal[i]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	243	243	2	replace	
58	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedV == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); [BUGGY] [BUGGY] cachedV = transformer.getV().multiply(e); } else {   final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[n][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) { final double mi = mainBidiagonal[i]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	243	243	2	add	
59	[BUG] [BUGGY] } else { [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedV == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); cachedV = transformer.getV().multiply(e); [BUGGY] } else { [BUGGY]   final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[n][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) { final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	244	244	2	replace	
60	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { if (cachedV == null) { final int p = singularValues.length; if (m >= n) {  final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1); cachedV = transformer.getV().multiply(e); [BUGGY] [BUGGY] } else {   final RealMatrix e = eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1); final double[][] eData = e.getData(); final double[][] wData = new double[n][p]; double[] ei1 = eData[0]; for (int i = 0; i < p - 1; ++i) { final double mi = mainBidiagonal[i]; final double[] ei0 = ei1; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	244	244	2	add	
61	[BUG] [BUGGY] return cachedV; [FE] AssertionError [CONTEXT] for (int i = p; i < n; ++i) { wData[i] = new double[p]; } cachedV = transformer.getV().multiply(MatrixUtils.createRealMatrix(wData)); } }  [BUGGY] return cachedV; [BUGGY]  } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	275	275	2	replace	
62	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] for (int i = p; i < n; ++i) { wData[i] = new double[p]; } cachedV = transformer.getV().multiply(MatrixUtils.createRealMatrix(wData)); } }  [BUGGY] [BUGGY] return cachedV; } [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] getV [RETURN_TYPE] RealMatrix  [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] ei0 ei1 eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues suTi wi RealMatrix cachedS cachedU cachedUt cachedV cachedVt e matrix pseudoInverse uT v double mi si double[][] eData wData BiDiagonalTransformer transformer int i j m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5773502691896258	275	275	2	add	
63	[BUG] [BUGGY] throws InvalidMatrixException { [FE] AssertionError [CONTEXT] [BUGGY] throws InvalidMatrixException { [BUGGY]  m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;   [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	109	109	2	replace	
64	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] throws InvalidMatrixException { m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;   [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	109	109	2	add	
65	[BUG] [BUGGY] m = matrix.getRowDimension(); [FE] AssertionError [CONTEXT] throws InvalidMatrixException { [BUGGY] m = matrix.getRowDimension(); [BUGGY] n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	111	111	2	replace	
66	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { [BUGGY] [BUGGY] m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	111	111	2	add	
67	[BUG] [BUGGY] n = matrix.getColumnDimension(); [FE] AssertionError [CONTEXT] throws InvalidMatrixException { m = matrix.getRowDimension(); [BUGGY] n = matrix.getColumnDimension(); [BUGGY]  cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef(); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	112	112	2	replace	
68	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { m = matrix.getRowDimension(); [BUGGY] [BUGGY] n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef(); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	112	112	2	add	
69	[BUG] [BUGGY] cachedU= null; [FE] AssertionError [CONTEXT] throws InvalidMatrixException { m = matrix.getRowDimension(); n = matrix.getColumnDimension(); [BUGGY] cachedU= null; [BUGGY] cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();   [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	114	114	2	replace	
70	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { m = matrix.getRowDimension(); n = matrix.getColumnDimension(); [BUGGY] [BUGGY] cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();   [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	114	114	2	add	
71	[BUG] [BUGGY] cachedS= null; [FE] AssertionError [CONTEXT] throws InvalidMatrixException { m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; [BUGGY] cachedS= null; [BUGGY] cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	115	115	2	replace	
72	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; [BUGGY] [BUGGY] cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	115	115	2	add	
73	[BUG] [BUGGY] cachedV= null; [FE] AssertionError [CONTEXT] throws InvalidMatrixException { m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; [BUGGY] cachedV= null; [BUGGY] cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	116	116	2	replace	
74	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; [BUGGY] [BUGGY] cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	116	116	2	add	
75	[BUG] [BUGGY] cachedVt = null; [FE] AssertionError [CONTEXT] throws InvalidMatrixException { m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; [BUGGY] cachedVt = null; [BUGGY]   transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	117	117	2	replace	
76	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws InvalidMatrixException { m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; [BUGGY] [BUGGY] cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	117	117	2	add	
77	[BUG] [BUGGY] transformer = new BiDiagonalTransformer(matrix); [FE] AssertionError [CONTEXT] m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  [BUGGY] transformer = new BiDiagonalTransformer(matrix); [BUGGY] mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	120	120	2	replace	
78	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  [BUGGY] [BUGGY] transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	120	120	2	add	
79	[BUG] [BUGGY] mainBidiagonal= transformer.getMainDiagonalRef(); [FE] AssertionError [CONTEXT] m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); [BUGGY] mainBidiagonal= transformer.getMainDiagonalRef(); [BUGGY] secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	121	121	2	replace	
80	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] m = matrix.getRowDimension(); n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); [BUGGY] [BUGGY] mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	121	121	2	add	
81	[BUG] [BUGGY] secondaryBidiagonal = transformer.getSecondaryDiagonalRef(); [FE] AssertionError [CONTEXT] n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); [BUGGY] secondaryBidiagonal = transformer.getSecondaryDiagonalRef(); [BUGGY]   mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	122	122	2	replace	
82	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] n = matrix.getColumnDimension(); cachedU= null; cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); [BUGGY] [BUGGY] secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	122	122	2	add	
83	[BUG] [BUGGY] mainTridiagonal= new double[mainBidiagonal.length]; [FE] AssertionError [CONTEXT] cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  [BUGGY] mainTridiagonal= new double[mainBidiagonal.length]; [BUGGY] secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	125	125	2	replace	
84	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] cachedS= null; cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  [BUGGY] [BUGGY] mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	125	125	2	add	
85	[BUG] [BUGGY] secondaryTridiagonal = new double[mainBidiagonal.length - 1]; [FE] AssertionError [CONTEXT] cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; [BUGGY] secondaryTridiagonal = new double[mainBidiagonal.length - 1]; [BUGGY] double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }   [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	126	126	2	replace	
86	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] cachedV= null; cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; [BUGGY] [BUGGY] secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }   [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	126	126	2	add	
87	[BUG] [BUGGY] double a = mainBidiagonal[0]; [FE] AssertionError [CONTEXT] cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; [BUGGY] double a = mainBidiagonal[0]; [BUGGY] mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	127	127	2	replace	
88	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] cachedVt = null;  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; [BUGGY] [BUGGY] double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	127	127	2	add	
89	[BUG] [BUGGY] mainTridiagonal[0] = a * a; [FE] AssertionError [CONTEXT]  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; [BUGGY] mainTridiagonal[0] = a * a; [BUGGY] for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	128	128	2	replace	
90	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; [BUGGY] [BUGGY] mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	128	128	2	add	
91	[BUG] [BUGGY] for (int i = 1; i < mainBidiagonal.length; ++i) { [FE] AssertionError [CONTEXT]  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; [BUGGY] for (int i = 1; i < mainBidiagonal.length; ++i) { [BUGGY] final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	129	129	2	replace	
92	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; [BUGGY] [BUGGY] for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	129	129	2	add	
93	[BUG] [BUGGY] final double b= secondaryBidiagonal[i - 1]; [FE] AssertionError [CONTEXT] transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { [BUGGY] final double b= secondaryBidiagonal[i - 1]; [BUGGY] secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); final double[] eigenValues = eigenDecomposition.getRealEigenvalues(); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	130	130	2	replace	
94	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] transformer = new BiDiagonalTransformer(matrix); mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { [BUGGY] [BUGGY] final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); final double[] eigenValues = eigenDecomposition.getRealEigenvalues(); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	130	130	2	add	
95	[BUG] [BUGGY] secondaryTridiagonal[i - 1] = a * b; [FE] AssertionError [CONTEXT] mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; [BUGGY] secondaryTridiagonal[i - 1] = a * b; [BUGGY] a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); final double[] eigenValues = eigenDecomposition.getRealEigenvalues(); int p = Math.min(max, eigenValues.length); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	131	131	2	replace	
96	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] mainBidiagonal= transformer.getMainDiagonalRef(); secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; [BUGGY] [BUGGY] secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); final double[] eigenValues = eigenDecomposition.getRealEigenvalues(); int p = Math.min(max, eigenValues.length); [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	131	131	2	add	
97	[BUG] [BUGGY] a = mainBidiagonal[i]; [FE] AssertionError [CONTEXT] secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; [BUGGY] a = mainBidiagonal[i]; [BUGGY] mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); final double[] eigenValues = eigenDecomposition.getRealEigenvalues(); int p = Math.min(max, eigenValues.length); while ((p > 0) && (eigenValues[p - 1] <= 0)) { [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	132	132	2	replace	
98	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] secondaryBidiagonal = transformer.getSecondaryDiagonalRef();  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; [BUGGY] [BUGGY] a = mainBidiagonal[i]; mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); final double[] eigenValues = eigenDecomposition.getRealEigenvalues(); int p = Math.min(max, eigenValues.length); while ((p > 0) && (eigenValues[p - 1] <= 0)) { [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	132	132	2	add	
99	[BUG] [BUGGY] mainTridiagonal[i] = a * a + b * b; [FE] AssertionError [CONTEXT]  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; [BUGGY] mainTridiagonal[i] = a * a + b * b; [BUGGY] }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); final double[] eigenValues = eigenDecomposition.getRealEigenvalues(); int p = Math.min(max, eigenValues.length); while ((p > 0) && (eigenValues[p - 1] <= 0)) { --p; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	133	133	2	replace	
100	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  mainTridiagonal= new double[mainBidiagonal.length]; secondaryTridiagonal = new double[mainBidiagonal.length - 1]; double a = mainBidiagonal[0]; mainTridiagonal[0] = a * a; for (int i = 1; i < mainBidiagonal.length; ++i) { final double b= secondaryBidiagonal[i - 1]; secondaryTridiagonal[i - 1] = a * b; a = mainBidiagonal[i]; [BUGGY] [BUGGY] mainTridiagonal[i] = a * a + b * b; }  eigenDecomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN); final double[] eigenValues = eigenDecomposition.getRealEigenvalues(); int p = Math.min(max, eigenValues.length); while ((p > 0) && (eigenValues[p - 1] <= 0)) { --p; [CLASS] SingularValueDecompositionImpl 1 Solver [METHOD] <init> [RETURN_TYPE] RealMatrix,int)  RealMatrix matrix final int max [VARIABLES] EigenDecomposition eigenDecomposition boolean nonSingular double[] eigenValues mainBidiagonal mainTridiagonal secondaryBidiagonal secondaryTridiagonal singularValues RealMatrix cachedS cachedU cachedUt cachedV cachedVt matrix pseudoInverse double a b BiDiagonalTransformer transformer int i m max n p  	projects/Math76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java	0.5345224838248488	133	133	2	add	
