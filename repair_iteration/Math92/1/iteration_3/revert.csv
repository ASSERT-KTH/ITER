projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));result=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnresult;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k));result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(result,binomialCoefficientDouble(n,k));result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),n);result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;result=Math.round(binomialCoefficientDouble(n,k));return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;result=Math.round(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;result=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,k));return0;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;k=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;k=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;result=Math.round(binomialCoefficientDouble(n,k));return1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;result=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;finalintk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;result=Math.round(binomialCoefficientDouble(n,k));return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return3;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("resulttoolargetorepresentinalonginteger");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("resulttoolargetorepresentinalonginteger.");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),k);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(result,binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factororials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.log(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(k,n));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,1));result=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.floor(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("Missingnforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+3;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182doublen=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>=kforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>=0forbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.floor(binomialCoefficientDouble(n,k));returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.floor(binomialCoefficientDouble(n),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182doublen=Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)+1);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;intk=(int)Math.floor(binomialCoefficientDouble(n,k));return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;intk=(int)Math.floor(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;intk=(int)Math.floor(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;n=Math.min(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intn=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)+1);result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length*2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,1));if(result==Long.MAX_VALUE){return0;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,1));if(result==Long.MAX_VALUE){thrownewArithmeticException("");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,1));if(result==Integer.MAX_VALUE){return0;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;if(n<0){thrownewArithmeticException("musthaven>=0forbinomialcoefficient(n,k)");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;if(n<0){thrownewArithmeticException("musthaven>>0forbinomialcoefficient(n,k)");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;if(n<0){thrownewArithmeticException("musthaven>=kforbinomialcoefficient(n,k)");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;if(n<0){thrownewArithmeticException("musthaven>=0forbinomialcoefficient(n,k")");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven<kforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>>kforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));result=Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k));result=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=factorials.length;returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)-1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1));result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;return1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;longreturn1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;k=n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intn=factorials.size();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=(int)Math.floor(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk+1;intn=(int)Math.floor(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k));returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));returnresult+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k));returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("resulttoolargetorepresentinalonginteger.n");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.min(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/coefficients.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182k=(int)Math.floor(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intk=(int)Math.floor(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182k=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k)/factororials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k)/factorials.length+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(k,n)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k)/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k)+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven==kforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(n,binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(k,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1)/factorials.length*2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k*1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1)/factororials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>>0forbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182doublen=Math.log(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182Throwables.thrownewArithmeticException("");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.log(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.log(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182=Math.max(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(n,binomialCoefficientDouble(n,k));result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182Resultresult=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,1));if(result==Long.MAX_VALUE){return0;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,1));if(result==Long.MAX_VALUE){return1;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));if(result==Long.MAX_VALUE){return0;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));if(result==Long.MAX_VALUE){return1;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;intn=factorials.size();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=factorials.size();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intn=this.factorials.size();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=factorials.size();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182finalintk=Math.min(n,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182finalintk=Math.min(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182finalintk=Math.min(factorials.length,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182finalintk=Math.min(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182k=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk+3;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k),result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k)/factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k),n,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));if(result==Long.MAX_VALUE){thrownewArithmeticException("");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,1));if(result==Long.MAX_VALUE){thrownewArithmeticException("");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,2));if(result==Long.MAX_VALUE){thrownewArithmeticException("");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=n+1;returnresult+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longreturn1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longreturn0;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intreturn1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));return1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182Resultresult=Math.round(binomialCoefficientDouble(n,k));returnresult;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));return3;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=factorials.length;returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longn=factorials.length;returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=factorials.length;returnn+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=1;intn=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longn=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intn=factorials.length-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182k=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(k,n));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k*1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k+1)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),0);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,1),n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.min(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;n=Math.min(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.min(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=(int)Math.floor(binomialCoefficientDouble(n),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)/k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),n,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),result,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),k,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=(int)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk+1;intn=(int)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182k=(int)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length*2+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk/1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("Missingbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("Missingnforbinarycoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,1),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));return0;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,1));return0;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),0);result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),1);result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),k,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),k,factorials);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),factorials);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),n,k);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(result,binomialCoefficientDouble(n,k+1));result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1));result=Math.round(factorialsToInt(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=n;returnresult;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven<0forbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(k,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.rint(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)+2);result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn+=1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn+=2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,1),n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),0);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longk=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;k=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k));result=Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,1),result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1),result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)/result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k)/factorials.length+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k)/result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.log(binomialCoefficientDouble(n,k)/factororials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.log(binomialCoefficientDouble(k,n)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.log(binomialCoefficientDouble(n,k)/factorials.length+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,1));if(result==Integer.MAX_VALUE){return1;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,1));if(result==Integer.MAX_VALUE){return0;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));if(result==Integer.MAX_VALUE){return1;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));if(result==Integer.MAX_VALUE){return0;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("Resulttoolargetorepresentinalonginteger");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182ThrownewArithmeticException("resulttoolargetorepresentinalonginteger");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182doublen=Math.round(binomialCoefficientDouble(n,1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longn=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));returnresult;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;k=n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182k=n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;k=n+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182k=(int)Math.floor(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intk=(int)Math.floor(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k)/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k)+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(bomialCoefficientDouble(n,1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,2));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,1));result=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182Resultresult=Math.round(binomialCoefficientDouble(n,k));return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length*3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length*2-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.ceil(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.ceil(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.ceil(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)/1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)-1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)-1,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longk=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182k=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longresult=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,1)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k)-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk+1;n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;n+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=n+1;n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),dataArea,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),n,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(k,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k*1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182=Math.max(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.floor(binomialCoefficientDouble(n,k));returnresult;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longn=(long)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=(int)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k*1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k*1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(k,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(k,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k)-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intk=(int)Math.floor(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;intk=(int)Math.floor(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven!=0forbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException(",");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("binomialcoefficientmustnotbenegative");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException(""+n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182finalintk=Math.min(factorials.length,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k)+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(result,binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182if(k==1){return2;intk=(int)Math.floor(binomialCoefficientDouble(n,k));return2;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182if(k==2){return2;intk=(int)Math.floor(binomialCoefficientDouble(n,k));return2;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182if(k==0){return2;intk=(int)Math.floor(binomialCoefficientDouble(n,k));return2;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;k=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthavenforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182Result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intk=(int)Math.floor(binomialCoefficientDouble(n,k));returnk+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k));returnn+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1),n);result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k)+1);result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.coefficient(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1)+1);result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k)+1);result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;intk=(int)Math.floor(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k+1));result=Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.floor(n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k+1)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k+1)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;n=k+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/BYTE_PI);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1),n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.ceil(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn+=2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk+1;intn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=0;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intk+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k)+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k)/factorials.length*2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.log(binomialCoefficientDouble(n,k+1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>=0forbinomialcoefficient(n,k")");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn*2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)/factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.min(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182k=Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven<=kforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven<1forbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k)+1,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;n+=2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k)/factorials.length*2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.ceil(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;intn=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intn=n;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>=forbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intn=binomials.size();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;intn=factorials.size();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven<alonginteger.");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k)-1,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1)+1);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;n=Math.min(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;n=Math.min(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k+1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),n+1);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return3;intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.ceil(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1),k);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=(int)Math.floor(binomialCoefficientDouble(n,k));returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k*1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longresult=Math.round(binomialCoefficientDouble(n,k));return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;n=Math.min(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+2;n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182intn=(int)Math.floor(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn+=1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longresult=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longn=Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn-2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven<kforbinarycoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>kforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longreturnn;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k+1)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k+1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),factorials,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven==0forbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/amount);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(result,n+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/1);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)+1);result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intk=(int)Math.floor(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)-1,n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;k=n-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)/1);result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)+1);result=Math.round(factorialsToInt(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k+1,n));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1,n));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182if(k<1){return2;intk=(int)Math.floor(binomialCoefficientDouble(n,k));return2;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182if(k>0){return2;intk=(int)Math.floor(binomialCoefficientDouble(n,k));return2;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182if(k<2){return2;intk=(int)Math.floor(binomialCoefficientDouble(n,k));return2;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.cos(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1),result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(factorials.length+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>0forbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1,n));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k));result=Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k+1));result=Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(result,binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.cos(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1),n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182finalintk=Math.min(factorials.length,n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1,k+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(k,n),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(k,n+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182longresult=Math.round(binomialCoefficientDouble(n,k));return1;
