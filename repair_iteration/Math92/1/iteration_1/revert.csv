projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));result=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnresult;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k));result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(result,binomialCoefficientDouble(n,k));result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),n);result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;result=Math.round(binomialCoefficientDouble(n,k));return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;result=Math.round(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;result=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,k));return0;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;k=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;k=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;result=Math.round(binomialCoefficientDouble(n,k));return1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;result=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;finalintk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;result=Math.round(binomialCoefficientDouble(n,k));return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return3;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("resulttoolargetorepresentinalonginteger");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("resulttoolargetorepresentinalonginteger.");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),k);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(result,binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factororials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.log(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(k,n));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182result=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,1));result=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.floor(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("Missingnforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnk+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+3;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182doublen=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>=kforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>=0forbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.floor(binomialCoefficientDouble(n,k));returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=(int)Math.floor(binomialCoefficientDouble(n),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182doublen=Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)+1);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;intk=(int)Math.floor(binomialCoefficientDouble(n,k));return2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;intk=(int)Math.floor(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return2;intk=(int)Math.floor(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;n=Math.min(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intn=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)+1);result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length*2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,1));if(result==Long.MAX_VALUE){return0;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,1));if(result==Long.MAX_VALUE){thrownewArithmeticException("");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;result=Math.round(binomialCoefficientDouble(n,1));if(result==Integer.MAX_VALUE){return0;}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;if(n<0){thrownewArithmeticException("musthaven>=0forbinomialcoefficient(n,k)");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;if(n<0){thrownewArithmeticException("musthaven>>0forbinomialcoefficient(n,k)");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;if(n<0){thrownewArithmeticException("musthaven>=kforbinomialcoefficient(n,k)");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return0;if(n<0){thrownewArithmeticException("musthaven>=0forbinomialcoefficient(n,k")");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven<kforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182thrownewArithmeticException("musthaven>>kforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));result=Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k));result=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182returnn+1;intn=factorials.length;returnn+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k)-1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.round(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k),n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k+1));result=Math.round(factorialsToInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.max(binomialCoefficientDouble(n,k),result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;return1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;longreturn1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;k=n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182return1;intn=factorials.size();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(int)Math.floor(binomialCoefficientDouble(n,k+1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java182n=(long)Math.floor(binomialCoefficientDouble(n,k)/factorials.length);
