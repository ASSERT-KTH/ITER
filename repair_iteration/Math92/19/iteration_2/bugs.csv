bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  if(a  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  if(a  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  if(a  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Long.MAX_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(a  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(a  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MIN_VALUE)  {  if(a  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Long.MAX_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  if(b  <  Long.MAX_VALUE)  {  if(a  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MAX_VALUE)  {  if(a  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MAX_VALUE)  {  if(a  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Long.MAX_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  if(b  <  Long.MAX_VALUE)  {  if(a  >  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MAX_VALUE)  {  if(a  >  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MAX_VALUE)  {  if(a  >  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Long.MAX_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  ret  =  b  +  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  b  +  Long.MAX_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  b  +  Long.MAX_VALUE;	      ret    =    Long.MAX_VALUE    +    b;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  b  =  a  -  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  b  =  a  -  Long.MAX_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	b  =  a  -  Long.MAX_VALUE;	      b    =    Long.MAX_VALUE    -    a;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  b  =  Long.MAX_VALUE  -  a  +  1;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  b  =  Long.MAX_VALUE  -  a  +  1;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	b  =  Long.MAX_VALUE  -  a  +  1;	      b    =    Long.MAX_VALUE    -    a;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  b  =  Long.MAX_VALUE  -  b;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  b  =  Long.MAX_VALUE  -  b;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	b  =  Long.MAX_VALUE  -  b;	      b    =    Long.MAX_VALUE    -    a;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  if(a  <  =  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(a  <  =  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(a  <  =  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  if(a  <  =  Long.MAX_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(a  <  =  Long.MAX_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(a  <  =  Long.MAX_VALUE)  {  throw  new  ArithmeticException(msg);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  ret  =  a  +  b  +  3;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  a  +  b  +  3;  [BUGGY]    }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  a  +  b  +  3;	  ret    =    a    +    b    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  ret  =  a  +  b  +  4;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  a  +  b  +  4;  [BUGGY]    }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  a  +  b  +  4;	  ret    =    a    +    b    +    2;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  ret  =  a;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  a;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  a;	      ret    =    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  ret  =  a  +  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  a  +  Long.MAX_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  a  +  Long.MAX_VALUE;	      ret    =    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  ret  =  b;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  b;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  b;	      ret    =    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  msg  =  a  +  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  msg  =  a  +  Long.MAX_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	msg  =  a  +  Long.MAX_VALUE;	      msg    =    msg    +    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  msg  =  b  +  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  msg  =  b  +  Long.MAX_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	msg  =  b  +  Long.MAX_VALUE;	      msg    =    msg    +    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  msg  +=  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  msg  +=  Long.MAX_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	msg  +=  Long.MAX_VALUE;	      msg    =    msg    +    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  msg  =  a  +  long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  msg  =  a  +  long.MAX_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	msg  =  a  +  long.MAX_VALUE;	      msg    =    msg    +    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  while(b  <  Long.MAX_VALUE  &&  a  <  =  Long.MAX_VALUE  -  b)  {  ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  while(b  <  Long.MAX_VALUE  &&  a  <  =  Long.MAX_VALUE  -  b)  {  ret  =  a  +  b;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	while(b  <  Long.MAX_VALUE  &&  a  <  =  Long.MAX_VALUE  -  b)  {  ret  =  a  +  b;	      if(b    <    =    Long.MAX_VALUE)    {    ret    =    a    +    b;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  while(a  <  =  Long.MAX_VALUE  -  b)  {  ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  while(a  <  =  Long.MAX_VALUE  -  b)  {  ret  =  a  +  b;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	while(a  <  =  Long.MAX_VALUE  -  b)  {  ret  =  a  +  b;	      if(b    <    =    Long.MAX_VALUE)    {    ret    =    a    +    b;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  rea  <  =  Long.MAX_VALUE  -  b)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  rea  <  =  Long.MAX_VALUE  -  b)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	rea  <  =  Long.MAX_VALUE  -  b)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    ret    =    a    +    b;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  ret  =  a  +  1;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  a  +  1;  [BUGGY]    }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  a  +  1;	  ret    =    a    +    2;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  b  =  Long.MAX_VALUE  +  b;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  b  =  Long.MAX_VALUE  +  b;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	b  =  Long.MAX_VALUE  +  b;	      b    =    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  b  =  Long.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  b  =  Long.MIN_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	b  =  Long.MIN_VALUE;	      b    =    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  ret  =  a  -  b;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  a  -  b;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  a  -  b;	      ret    =    Long.MAX_VALUE    -    b;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  ret  =  b  -  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  b  -  Long.MAX_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  b  -  Long.MAX_VALUE;	      ret    =    Long.MAX_VALUE    -    b;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  ret  =  Long.MAX_VALUE  -  a;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  Long.MAX_VALUE  -  a;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  Long.MAX_VALUE  -  a;	      ret    =    Long.MAX_VALUE    -    b;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Integer.MIN_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  if(b  <  Long.MAX_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MAX_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MAX_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Integer.MIN_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MIN_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Integer.MIN_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Integer.MIN_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
33	[BUG]  [BUGGY]  ret  =  a  +  b  /  2;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  a  +  b  /  2;  [BUGGY]    }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  a  +  b  /  2;	  ret    =    a    +    b    *    2;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  ret  =  a  +  b  *  4;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  a  +  b  *  4;  [BUGGY]    }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  a  +  b  *  4;	  ret    =    a    +    b    *    2;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  if(b  <  =  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  =  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  =  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  if(b  <  Long.MAX_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MAX_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MAX_VALUE)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  if(b  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(a  <  Long.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(a  <  Long.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MIN_VALUE)  {  if(a  <  Long.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Integer.MIN_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(a  <  =  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(a  <  =  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(a  <  =  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Integer.MIN_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError(msg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError(msg);  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	aughtExceptionHandler.throwAsSertionFailedError(msg);	      if(b    <    =    Long.MAX_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSurrogate(msg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  aughtExceptionHandler.throwAsSurrogate(msg);  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	aughtExceptionHandler.throwAsSurrogate(msg);	      if(b    <    =    Long.MAX_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  Ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  Ret  =  a  +  b;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	Ret  =  a  +  b;	      if(b    <    =    Long.MAX_VALUE)    {    ret    =    a    +    b;    }    else    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  read  =  new  StringBuffer();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  read  =  new  StringBuffer();  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	read  =  new  StringBuffer();	      if(b    <    =    Long.MAX_VALUE)    {    ret    =    a    +    b;    }    else    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  ret  =  Long.MAX_VALUE  +  b  +  1;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  Long.MAX_VALUE  +  b  +  1;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  Long.MAX_VALUE  +  b  +  1;	      ret    =    Long.MAX_VALUE    +    b;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(a  >  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(a  >  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  Long.MIN_VALUE)  {  if(a  >  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Long.MAX_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(a  <  =  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(a  <  =  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(a  <  =  Long.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Long.MAX_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  ret  =  Long.MAX_VALUE  -  b  +  1;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  Long.MAX_VALUE  -  b  +  1;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  Long.MAX_VALUE  -  b  +  1;	      ret    =    Long.MAX_VALUE    -    b;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  msg  =  a  +  Long.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  msg  =  a  +  Long.MIN_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	msg  =  a  +  Long.MIN_VALUE;	      msg    =    msg    +    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  ret  =  0;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  0;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  0;	      ret    =    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  b  =  a;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  b  =  a;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	b  =  a;	      b    =    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  b  =  a  +  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  b  =  a  +  Long.MAX_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	b  =  a  +  Long.MAX_VALUE;	      b    =    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  ret  =  b  +  a;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  b  +  a;  [BUGGY]    }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  b  +  a;	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  read()  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  read()  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	read()  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  pendOrder(a,  b);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  pendOrder(a,  b);  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	pendOrder(a,  b);	      if(b    <    =    Long.MAX_VALUE)    {    ret    =    a    +    b;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
56	[BUG]  [BUGGY]  ret  =  a  +  b  *  1;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  a  +  b  *  1;  [BUGGY]    }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  a  +  b  *  1;	  ret    =    a    +    b    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  if(b  <  =  Long.MAX_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  =  Long.MAX_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  =  Long.MAX_VALUE)  {  if(a  <  Integer.MIN_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Integer.MIN_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
58	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(a  <  =  Integer.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(a  <  =  Integer.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(a  <  =  Integer.MAX_VALUE  -  b)  {  throw  new  ArithmeticException(msg);  }	      if(b    <    =    Long.MAX_VALUE)    {    if(a    <    =    Integer.MIN_VALUE    -    b)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
59	[BUG]  [BUGGY]  ret  =  a  *  Long.MAX_VALUE  +  b;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  ret  =  a  *  Long.MAX_VALUE  +  b;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	ret  =  a  *  Long.MAX_VALUE  +  b;	      ret    =    Long.MAX_VALUE    +    b;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  a  =  Long.MAX_VALUE  -  b;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  a  =  Long.MAX_VALUE  -  b;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	a  =  Long.MAX_VALUE  -  b;	      b    =    Long.MAX_VALUE    -    a;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  msg  -=  msg  +  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  msg  -=  msg  +  Long.MAX_VALUE;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	msg  -=  msg  +  Long.MAX_VALUE;	      msg    =    msg    +    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
62	[BUG]  [BUGGY]  pendOrCreate(a,  b);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  pendOrCreate(a,  b);  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	pendOrCreate(a,  b);	      if(b    <    =    Long.MAX_VALUE)    {    ret    =    a    +    b;    }    else    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  read  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    }  else  {  ret  =  a  +  b;  }  }  else  {    if  (a  <=  Long.MAX_VALUE  -  b)  {    [BUGGY]  read  =  a  +  b;  [BUGGY]    ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	read  =  a  +  b;	      if(b    <    =    Long.MAX_VALUE)    {    ret    =    a    +    b;    }    else    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
