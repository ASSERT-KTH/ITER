projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))+1.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientDouble(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))*0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.log(n).doubleValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))+2.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.floor(Math.exp(binomialCoefficientLog(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=(int)Math.floor(binomialCoefficientLog(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.floor(Math.exp(binomialCoefficientLog(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236doublen=Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
