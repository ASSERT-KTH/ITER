projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))+1.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientDouble(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))*0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.log(n).doubleValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))+2.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.floor(Math.exp(binomialCoefficientLog(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=(int)Math.floor(binomialCoefficientLog(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.floor(Math.exp(binomialCoefficientLog(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236doublen=Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(n,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.log(Math.exp(binomialCoefficientLog(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.ceil(Math.exp(binomialCoefficientLog(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.floor(Math.exp(binomialCoefficientLog(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.max(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(n,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.ceil(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.log(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.floor(Math.exp(binomialCoefficientDouble(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.log(Math.exp(binomialCoefficientLog(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.ceil(Math.exp(binomialCoefficientLog(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.log(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.ceil(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.floor(Math.exp(binomialCoefficientDouble(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n+2,k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.floor(n).doubleValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.ceil(n).doubleValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.pow(10,n).doubleValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236doublen=Math.log(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236doublen=Math.ceil(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236doublen=Math.floor(Math.exp(binomialCoefficientDouble(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))*2.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientDouble(n,k))*0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))*20.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))*1.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.log(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.ceil(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.floor(Math.exp(binomialCoefficientDouble(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientDouble(n,k))+1.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientDouble(n,k))+2.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))/2.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.log(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.ceil(Math.exp(binomialCoefficientLog(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.floor(Math.exp(binomialCoefficientDouble(n,k))+0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,n+2,k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236if(n<=k){thrownewIllegalArgumentException("");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236if(n<=k){thrownewIllegalStateException("");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236if(n<=k){thrownewIllegalArgumentException("Missingdoublevalue");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.max(0,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=(int)Math.ceil(binomialCoefficientLog(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=(double)Math.floor(binomialCoefficientLog(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=(int)Math.log(binomialCoefficientLog(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,n+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236for(finalintk=0;k<n;k++){finallong[]factorials=newlong[factorials.length];System.arraycopy(factorials,0,binomialCoefficients,0,factorials.length);for(inti=0;i<factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236for(finalintk=0;k<n;k++){finallong[]factorials=newlong[factorials.length];System.arraycopy(factorials,0,binomialCoefficients,0,factorials.length);for(inti=0;i<factorials.length;i++)
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236((Double)n).doubleValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236for(finalintk=0;k<n;k++){finallong[]factorials=newlong[factorials.length];System.arraycopy(factorials,0,binomialCoefficients,0,factorials.length);for(intj=0;j<factorials.length;j++)
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.floor(Math.exp(binomialCoefficientDouble(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.log(Math.exp(binomialCoefficientDouble(n,k))*0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))/0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.log(Math.exp(binomialCoefficientLog(n,k))+1.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientDouble(n,k))*1.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.min(factorials.length,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.floor(Math.exp(binomialCoefficientDouble(n,k)));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k+1))*0.5);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finaldoublek=Math.cos(n).doubleValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.log(Math.exp(binomialCoefficientLog(n,k))/2.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intk=Math.max(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236returnMath.floor(Math.exp(binomialCoefficientLog(n,k))/1.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=Math.min(factorials.length,n*k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236finalintk=(int)Math.floor(binomialCoefficientLog(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.min(factorials.length,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236intn=Math.min(factorials.length,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.max(factorials.length,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java236n=Math.min(factorials.size(),k);
