projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)||(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n==0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n==k){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n<k){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n<0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n>=0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientShort(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(k==n-1)){
