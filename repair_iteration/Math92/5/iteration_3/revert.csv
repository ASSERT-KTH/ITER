projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)||(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n==0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n==k){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n<k){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n<0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n>=0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientShort(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n),k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.random()+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.random()*2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k==n){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n,2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k==0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k<0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(k==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)||(k==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181k=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k<n){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n<=k){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k<=0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.log(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k>=0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k>0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+factorials.length+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+factorials.length-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k==1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==n)||(k==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==0)||(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)&&(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181bytek=(byte)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.random()+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.floor(binomialCoefficientDouble(n));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n),k-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n>k){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n>0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(n==k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)&&(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)||(n==k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k>0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n==k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k<1){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n<0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.max(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.min(factorials.length,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientShort(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181longk=(long)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k+1)+factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k+1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n<k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n<k)||(n>k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==n)||(k<0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n==k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientDouble(n),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.ceil(binomialCoefficientShort(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181bytek=(byte)Math.ceil(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(binomialCoefficientDouble(n,k+1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k+1)/factorials.length*2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(binomialCoefficientDouble(n,k+1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k!=n){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n*2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n<k)||(n>0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n<k)||(n==k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n<k)||(n>=k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n<k)||(n>MAX_VALUE)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181k=(int)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k>n){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n,k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181k=(int)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181k=(int)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k<0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k<=0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientDouble(n),k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.ceil(binomialCoefficientDouble(n),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k<=n){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.max(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.min(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(n-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(n-1+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==0)||(n==k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==0)||(k==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k!=0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==0)||(k>0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k>=0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n,k-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181bytek=(byte)Math.ceil(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.ceil(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==0)||(n==k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)&&(n==k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(binomialCoefficientDouble(n,k)/result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n-1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==0)||(k==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==0)||(k==n)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+factorials.length+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+factorials.length*2+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.ceil(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Stringk=(String)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k*1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k+1)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length*2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k)/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k)-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n),k-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181bytek=(byte)Math.ceil(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181bytek=(byte)Math.floor(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n<=0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==0)&&(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)&&(k==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==n)&&(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(n*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.random()*2+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.random()/2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.random()*4;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.min(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.min(k,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n),k+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k),result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k),dataArea,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==0)||(k<0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)&&(n==k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)&&(k==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+factorials.length-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n/2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(n<1){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if(k==1){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n>k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==0)||(n<k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n>=k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)&&(n==k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n>=k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.rint(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.rint(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Stringk=(String)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)factorials.get(0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length*2+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rindom();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.ceil(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k*1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(binomialCoefficientDouble(n,k)/factorials.length+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(binomialCoefficientDouble(n,k)/result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(binomialCoefficientDouble(n,k)/factorials.length+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181longk=(long)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Stringk=(String)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(binomialCoefficientInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.ceil(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n,1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n,3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n,4);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181longk=(long)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181longk=(long)Math.random()+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k)+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)||(k!=0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)||(k==2)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==0)||(k==1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==n)||(k==1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(binomialCoefficientDouble(n,k+1)+factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(binomialCoefficientDouble(n,k+1)+factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n,k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n,k-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k)/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k)+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.round(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k),result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k),dataArea,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(k==2)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(k!=0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(k==0-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n*3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181floatk=(float)Math.floor(binomialCoefficientInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.ceil(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.ceil(binomialCoefficientInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n<=k)||(n>k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.ceil(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k-1)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientBigInt(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientLong(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n>k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.min(binomialCoefficientDouble(n,k),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n>=0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==0)||(k<n)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.floor(binomialCoefficientDouble(n),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.log(binomialCoefficientInt(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n>0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+factorials.length*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(k==1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k*1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k)-3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k+1)/result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientDouble(n+1),k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181k=(int)Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k+1)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n,0,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k),coefficients);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.random()*3;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(n>k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(n==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(n-1+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials.length*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.random();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)||(k>0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(Integer)factorials.get(n+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.max(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)&&(k==1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(k>1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(binomialCoefficientDouble(n,k)/factorials.length-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)||(k>0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n+1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(n/2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k)/factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k)-1,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.log(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.log(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181k=(int)Math.floor(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientDouble(n),k-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n<=k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.floor(binomialCoefficientDouble(k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)&&(k==n-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181k=(int)Math.floor(binomialCoefficientDouble(n,k+1)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181bytek=(byte)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k+1),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k+1)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.max(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.min(factorials.length,k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)-1,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.floor(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==1)&&(n==k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)||(k==1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181k=(int)Math.floor(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.log(n*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.rint(n+1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)||(k<0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.rint(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n-3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n/3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((k==1)||(k==0-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181n=Math.round(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n<1)||(n>1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n<k-1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k)+factorials.length/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181Integerk=(int)Math.floor(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181chark=(char)Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(n-1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==k)||(n<1)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.ceil(n-1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181if((n==2)||(k==0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k+1),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.floor(binomialCoefficientDouble(n,k+1),n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.cos(binomialCoefficientDouble(n,k)/factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java181intk=(int)Math.cos(n);
