projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if(n<k){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if(n==k){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if(n<0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.max(result,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=(int)Math.floor(factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.max(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(factorials[0],n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if(k<n){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(factorials.length,n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(factorials.length,n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(factorials.length,n+1,k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170chark=(char)Math.floor(factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.log(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if(k==n){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.max(n,result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(result,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(result,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.max(result,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.min(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(factorials[0],n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(factorials[0],n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(factorials[0],n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.log(factorials[0],n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if(k<0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if(k==0){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(factorials[n],k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.log(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170chark=(char)Math.floor(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=n.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=n;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=n+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170longk=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(factorials.length,n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(n,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=(int)Math.floor(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finallongk=(long)Math.floor(factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=(int)Math.floor(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=(int)Math.log(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.max(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.max(factorials.length,n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.max(n,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.min(factorials.length,n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.min(n,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.min(factorials.length,n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(factorials.length,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(factorials[0],n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=(int)Math.log(factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.max(factorials.length,n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.max(factorials.length,0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(n,result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.min(factorials.length,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(factorials[n]-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(factorials[n]+k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.log(factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170floatk=(float)Math.floor(factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(factorials.length,n+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=(int)Math.floor(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=(int)Math.floor(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(factorials.length,n*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if(!(n<k)||(n<k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if(!(n<k)||(n<0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if((n<k)||(n>k)){thrownewIllegalArgumentException("musthaven>=kforbinomialcoefficient(n,k)");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if((n<k)||(n>k)){thrownewIllegalArgumentException("musthaven>>kforbinomialcoefficient(n,k)");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if((n<k)||(n>k)){thrownewIllegalArgumentException("musthaven==kforbinomialcoefficient(n,k)");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if((n<k)||(n>k)){thrownewIllegalArgumentException("musthaven!=kforbinomialcoefficient(n,k)");}
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if((n<k)||(n<k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if((n<k)||(n>k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if((n>=k)||(n<k)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.max(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalintk=Math.min(factorials.length,n*k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=n,factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170if((n==k)||(n<0)){
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170finalbytek=(byte)Math.floor(factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java170intk=Math.min(factorials.length,n*k);
