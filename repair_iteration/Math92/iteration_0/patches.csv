bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action3	[BUG]  [BUGGY]  int  result  =  Math.round(binomialCoefficientDouble(n,  k));  [CE]  possible  loss  of  precision  [CONTEXT]  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  binomial  coefficient  (n,k) ");  }  if  ((n  ==  k)  ||  (k  ==  0))  {  return  1;  }  if  ((k  ==  1)  ||  (k  ==  n  -  1))  {  return  n;  }  [BUGGY]  int  result  =  Math.round(binomialCoefficientDouble(n,  k));  [BUGGY]  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "result  too  large  to  represent  in  a  long  integer ");  }        [CLASS]  MathUtils  [METHOD]  binomialCoefficient  [RETURN_TYPE]  long  final  int  n  final  int  k  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  k  n  long  result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	184	184	1	replace	int  result  =  Math.round(binomialCoefficientDouble(n,  k));	long  result  =  Math.round(binomialCoefficientDouble(n,  k));  	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
5	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  result  [CONTEXT]  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  binomial  coefficient  (n,k) ");  }  if  ((n  ==  k)  ||  (k  ==  0))  {  return  1;  }  if  ((k  ==  1)  ||  (k  ==  n  -  1))  {  return  n;  }  [BUGGY]    [BUGGY]  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "result  too  large  to  represent  in  a  long  integer ");  }        [CLASS]  MathUtils  [METHOD]  binomialCoefficient  [RETURN_TYPE]  long  final  int  n  final  int  k  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  k  n  long  result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	184	184	1	replace	  	long  result  =  Math.round(binomialCoefficientDouble(n,  k));  	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
12	[BUG]  [BUGGY]  return  add(a,  b, "overflow:  add ");  [CE]  cannot  find  symbol  [CONTEXT]  public  static  long  addAndCheck(long  a,  long  b)  {  [BUGGY]  return  add(a,  b, "overflow:  add ");  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  long  a  b  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	95	95	1	replace	return  add(a,  b, "overflow:  add ");	return  addAndCheck(a,  b,   "overflow:  add ");  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
13	[BUG]  [BUGGY]  return  add(a,  b), "overflow:  add ");  [CE]  [CONTEXT]  public  static  long  addAndCheck(long  a,  long  b)  {  [BUGGY]  return  add(a,  b), "overflow:  add ");  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  long  a  b  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	95	95	1	replace	return  add(a,  b), "overflow:  add ");	return  addAndCheck(a,  b,   "overflow:  add ");  	non-compiled	[CE]  	5	None	replace
14	[BUG]  [BUGGY]  return  addAndCheck(a,  b), "overflow:  add ");  [CE]  [CONTEXT]  public  static  long  addAndCheck(long  a,  long  b)  {  [BUGGY]  return  addAndCheck(a,  b), "overflow:  add ");  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  long  a  b  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	95	95	1	replace	return  addAndCheck(a,  b), "overflow:  add ");	return  addAndCheck(a,  b,   "overflow:  add ");  	non-compiled	[CE]  	5	None	replace
15	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  static  long  addAndCheck(long  a,  long  b)  {  [BUGGY]    [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  long  a  b  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	95	95	1	replace	  	return  addAndCheck(a,  b,   "overflow:  add ");  	non-compiled	[CE]  missing  return  statement	5	None	replace
