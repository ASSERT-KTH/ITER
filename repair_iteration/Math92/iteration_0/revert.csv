projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java95returnaddAndCheck(a,b,"overflow:add");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java95returnadd(a,b,"overflow:add");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java95returnadd(a,b),"overflow:add");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java95returnaddAndCheck(a,b),"overflow:add");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java95
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java179return1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java179return0;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java179thrownewIllegalArgumentException("");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java179thrownewIllegalArgumentException("musthaven>=kforbinomialcoefficient(n,k)");
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java179thrownewIllegalArgumentException("musthaven>=0forbinomialcoefficient(n,k)");
