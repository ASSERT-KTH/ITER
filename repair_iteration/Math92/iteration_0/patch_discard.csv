increase failing tests,184,replace, [FE] AssertionFailedError testBinomialCoefficient,long result = Math.round(binomialCoefficientDouble(n, k)); ,long result = Math.round(binomialCoefficientDouble(n, k + 1));
compilation error,184,replace,[CE] possible loss of precision,long result = Math.round(binomialCoefficientDouble(n, k)); ,int result = Math.round(binomialCoefficientDouble(n, k));
increase failing tests,184,replace, [FE] AssertionFailedError testBinomialCoefficient,long result = Math.round(binomialCoefficientDouble(n, k)); ,long result = Math.round(binomialCoefficientDouble(n, k)+ 1);
compilation error,184,replace,[CE] cannot find symbol result,long result = Math.round(binomialCoefficientDouble(n, k)); , 
compilation error,95,replace,[CE] cannot find symbol,return addAndCheck(a, b, "overflow: add"); ,return add(a, b,"overflow: add");
compilation error,95,replace,[CE] ,return addAndCheck(a, b, "overflow: add"); ,return add(a, b),"overflow: add");
compilation error,95,replace,[CE] ,return addAndCheck(a, b, "overflow: add"); ,return addAndCheck(a, b),"overflow: add");
compilation error,95,replace,[CE] missing return statement,return addAndCheck(a, b, "overflow: add"); , 
increase failing tests,179,replace, [FE] AssertionFailedError testBinomialCoefficient,return 1; ,return 0;
increase failing tests,179,replace, [FE] IllegalArgumentException testBinomialCoefficient,return 1; ,throw new IllegalArgumentException("");
increase failing tests,179,replace, [FE] java.lang.IllegalArgumentException: must have n >= k for binomial coefficient(n testBinomialCoefficient,return 1; ,throw new IllegalArgumentException("must have n >= k for binomial coefficient(n,k)");
