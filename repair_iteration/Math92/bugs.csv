bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return n; [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } if ((k == 1) || (k == n - 1)) { [BUGGY] return n; [BUGGY] } long result = Math.round(binomialCoefficientDouble(n, k)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); }     [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	182	182	1	replace	
2	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } if ((k == 1) || (k == n - 1)) { [BUGGY] [BUGGY] return n; } long result = Math.round(binomialCoefficientDouble(n, k)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); }     [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	182	182	1	add	
3	[BUG] [BUGGY] return result; [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]           [BUGGY] return result; [BUGGY] } [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	208	208	1	replace	
4	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]           [BUGGY] [BUGGY] return result; } [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	208	208	1	add	
5	[BUG] [BUGGY] return addAndCheck(a, b, "overflow: add"); [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static long addAndCheck(long a, long b) { [BUGGY] return addAndCheck(a, b, "overflow: add"); [BUGGY] } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB long a b  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	95	95	1	replace	
6	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static long addAndCheck(long a, long b) { [BUGGY] [BUGGY] return addAndCheck(a, b, "overflow: add"); } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB long a b  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	95	95	1	add	
7	[BUG] [BUGGY] return 1; [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static long binomialCoefficient(final int n, final int k) { if (n < k) { throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { [BUGGY] return 1; [BUGGY] } if ((k == 1) || (k == n - 1)) { return n; } long result = Math.round(binomialCoefficientDouble(n, k)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); }  [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	179	179	1	replace	
8	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static long binomialCoefficient(final int n, final int k) { if (n < k) { throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { [BUGGY] [BUGGY] return 1; } if ((k == 1) || (k == n - 1)) { return n; } long result = Math.round(binomialCoefficientDouble(n, k)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); }  [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	179	179	1	add	
9	[BUG] [BUGGY] if ((k == 1) || (k == n - 1)) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } [BUGGY] if ((k == 1) || (k == n - 1)) { [BUGGY] return n; } long result = Math.round(binomialCoefficientDouble(n, k)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); }    [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	181	181	1	replace	
10	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } [BUGGY] [BUGGY] if ((k == 1) || (k == n - 1)) { return n; } long result = Math.round(binomialCoefficientDouble(n, k)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); }    [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	181	181	1	add	
11	[BUG] [BUGGY] long result = Math.round(binomialCoefficientDouble(n, k)); [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } if ((k == 1) || (k == n - 1)) { return n; } [BUGGY] long result = Math.round(binomialCoefficientDouble(n, k)); [BUGGY] if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); }       [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	184	184	1	replace	
12	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } if ((k == 1) || (k == n - 1)) { return n; } [BUGGY] [BUGGY] long result = Math.round(binomialCoefficientDouble(n, k)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); }       [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	184	184	1	add	
13	[BUG] [BUGGY] if (result == Long.MAX_VALUE) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } if ((k == 1) || (k == n - 1)) { return n; } long result = Math.round(binomialCoefficientDouble(n, k)); [BUGGY] if (result == Long.MAX_VALUE) { [BUGGY] throw new ArithmeticException( "result too large to represent in a long integer"); }        [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	185	185	1	replace	
14	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } if ((k == 1) || (k == n - 1)) { return n; } long result = Math.round(binomialCoefficientDouble(n, k)); [BUGGY] [BUGGY] if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); }        [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	185	185	1	add	
15	[BUG] [BUGGY] if ((k == 1) || (k == n - 1)) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 0; } [BUGGY] if ((k == 1) || (k == n - 1)) { [BUGGY] return Math.log((double) n); }        [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	269	269	1	replace	
16	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 0; } [BUGGY] [BUGGY] if ((k == 1) || (k == n - 1)) { return Math.log((double) n); }        [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	269	269	1	add	
17	[BUG] [BUGGY] double logSum = 0; [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]          [BUGGY] double logSum = 0; [BUGGY]   for (int i = k + 1; i <= n; i++) { logSum += Math.log((double)i); }  for (int i = 2; i <= n - k; i++) { logSum -= Math.log((double)i); } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	286	286	1	replace	
18	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]          [BUGGY] [BUGGY] double logSum = 0;  for (int i = k + 1; i <= n; i++) { logSum += Math.log((double)i); }  for (int i = 2; i <= n - k; i++) { logSum -= Math.log((double)i); } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	286	286	1	add	
19	[BUG] [BUGGY] for (int i = k + 1; i <= n; i++) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]       double logSum = 0;  [BUGGY] for (int i = k + 1; i <= n; i++) { [BUGGY] logSum += Math.log((double)i); }  for (int i = 2; i <= n - k; i++) { logSum -= Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	289	289	1	replace	
20	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]       double logSum = 0;  [BUGGY] [BUGGY] for (int i = k + 1; i <= n; i++) { logSum += Math.log((double)i); }  for (int i = 2; i <= n - k; i++) { logSum -= Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	289	289	1	add	
21	[BUG] [BUGGY] logSum += Math.log((double)i); [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]      double logSum = 0;  for (int i = k + 1; i <= n; i++) { [BUGGY] logSum += Math.log((double)i); [BUGGY] }  for (int i = 2; i <= n - k; i++) { logSum -= Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	290	290	1	replace	
22	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]      double logSum = 0;  for (int i = k + 1; i <= n; i++) { [BUGGY] [BUGGY] logSum += Math.log((double)i); }  for (int i = 2; i <= n - k; i++) { logSum -= Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	290	290	1	add	
23	[BUG] [BUGGY] for (int i = 2; i <= n - k; i++) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]   double logSum = 0;  for (int i = k + 1; i <= n; i++) { logSum += Math.log((double)i); }  [BUGGY] for (int i = 2; i <= n - k; i++) { [BUGGY] logSum -= Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	294	294	1	replace	
24	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]   double logSum = 0;  for (int i = k + 1; i <= n; i++) { logSum += Math.log((double)i); }  [BUGGY] [BUGGY] for (int i = 2; i <= n - k; i++) { logSum -= Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	294	294	1	add	
25	[BUG] [BUGGY] logSum -= Math.log((double)i); [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]  double logSum = 0;  for (int i = k + 1; i <= n; i++) { logSum += Math.log((double)i); }  for (int i = 2; i <= n - k; i++) { [BUGGY] logSum -= Math.log((double)i); [BUGGY] } return logSum; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	295	295	1	replace	
26	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]  double logSum = 0;  for (int i = k + 1; i <= n; i++) { logSum += Math.log((double)i); }  for (int i = 2; i <= n - k; i++) { [BUGGY] [BUGGY] logSum -= Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	295	295	1	add	
27	[BUG] [BUGGY] return logSum; [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]  for (int i = k + 1; i <= n; i++) { logSum += Math.log((double)i); }  for (int i = 2; i <= n - k; i++) { logSum -= Math.log((double)i); } [BUGGY] return logSum; [BUGGY] } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	298	298	1	replace	
28	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]  for (int i = k + 1; i <= n; i++) { logSum += Math.log((double)i); }  for (int i = 2; i <= n - k; i++) { logSum -= Math.log((double)i); } [BUGGY] [BUGGY] return logSum; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5773502691896258	298	298	1	add	
29	[BUG] [BUGGY] if (a > b) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] private static long addAndCheck(long a, long b, String msg) { long ret; [BUGGY] if (a > b) { [BUGGY]  ret = addAndCheck(b, a, msg); } else {  if (a < 0) { if (b < 0) {  if (Long.MIN_VALUE - b <= a) { ret = a + b; [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	111	111	1	replace	
30	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] private static long addAndCheck(long a, long b, String msg) { long ret; [BUGGY] [BUGGY] if (a > b) {  ret = addAndCheck(b, a, msg); } else {  if (a < 0) { if (b < 0) {  if (Long.MIN_VALUE - b <= a) { ret = a + b; [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	111	111	1	add	
31	[BUG] [BUGGY] ret = addAndCheck(b, a, msg); [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] private static long addAndCheck(long a, long b, String msg) { long ret; if (a > b) {  [BUGGY] ret = addAndCheck(b, a, msg); [BUGGY] } else {  if (a < 0) { if (b < 0) {  if (Long.MIN_VALUE - b <= a) { ret = a + b; } else { throw new ArithmeticException(msg); [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	113	113	1	replace	
32	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] private static long addAndCheck(long a, long b, String msg) { long ret; if (a > b) {  [BUGGY] [BUGGY] ret = addAndCheck(b, a, msg); } else {  if (a < 0) { if (b < 0) {  if (Long.MIN_VALUE - b <= a) { ret = a + b; } else { throw new ArithmeticException(msg); [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	113	113	1	add	
33	[BUG] [BUGGY] if (a < 0) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] if (a > b) {  ret = addAndCheck(b, a, msg); } else {  [BUGGY] if (a < 0) { [BUGGY] if (b < 0) {  if (Long.MIN_VALUE - b <= a) { ret = a + b; } else { throw new ArithmeticException(msg); } } else {  ret = a + b; [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	
34	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] if (a > b) {  ret = addAndCheck(b, a, msg); } else {  [BUGGY] [BUGGY] if (a < 0) { if (b < 0) {  if (Long.MIN_VALUE - b <= a) { ret = a + b; } else { throw new ArithmeticException(msg); } } else {  ret = a + b; [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	add	
35	[BUG] [BUGGY] if (a <= Long.MAX_VALUE - b) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] } } else {  ret = a + b; } } else {    [BUGGY] if (a <= Long.MAX_VALUE - b) { [BUGGY] ret = a + b; } else { throw new ArithmeticException(msg); } } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	134	134	1	replace	
36	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] } } else {  ret = a + b; } } else {    [BUGGY] [BUGGY] if (a <= Long.MAX_VALUE - b) { ret = a + b; } else { throw new ArithmeticException(msg); } } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	134	134	1	add	
37	[BUG] [BUGGY] ret = a + b; [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] } else {  ret = a + b; } } else {    if (a <= Long.MAX_VALUE - b) { [BUGGY] ret = a + b; [BUGGY] } else { throw new ArithmeticException(msg); } } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	replace	
38	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] } else {  ret = a + b; } } else {    if (a <= Long.MAX_VALUE - b) { [BUGGY] [BUGGY] ret = a + b; } else { throw new ArithmeticException(msg); } } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	135	135	1	add	
39	[BUG] [BUGGY] return ret; [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]   if (a <= Long.MAX_VALUE - b) { ret = a + b; } else { throw new ArithmeticException(msg); } } } [BUGGY] return ret; [BUGGY] } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	141	141	1	replace	
40	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT]   if (a <= Long.MAX_VALUE - b) { ret = a + b; } else { throw new ArithmeticException(msg); } } } [BUGGY] [BUGGY] return ret; } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	141	141	1	add	
41	[BUG] [BUGGY] if (n < k) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static long binomialCoefficient(final int n, final int k) { [BUGGY] if (n < k) { [BUGGY] throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	170	170	1	replace	
42	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static long binomialCoefficient(final int n, final int k) { [BUGGY] [BUGGY] if (n < k) { throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	170	170	1	add	
43	[BUG] [BUGGY] if (n < 0) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static long binomialCoefficient(final int n, final int k) { if (n < k) { throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } [BUGGY] if (n < 0) { [BUGGY] throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } if ((k == 1) || (k == n - 1)) { return n; } long result = Math.round(binomialCoefficientDouble(n, k)); [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	174	174	1	replace	
44	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static long binomialCoefficient(final int n, final int k) { if (n < k) { throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } [BUGGY] [BUGGY] if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 1; } if ((k == 1) || (k == n - 1)) { return n; } long result = Math.round(binomialCoefficientDouble(n, k)); [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	174	174	1	add	
45	[BUG] [BUGGY] if ((n == k) || (k == 0)) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static long binomialCoefficient(final int n, final int k) { if (n < k) { throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } [BUGGY] if ((n == k) || (k == 0)) { [BUGGY] return 1; } if ((k == 1) || (k == n - 1)) { return n; } long result = Math.round(binomialCoefficientDouble(n, k)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); } [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	178	178	1	replace	
46	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static long binomialCoefficient(final int n, final int k) { if (n < k) { throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } [BUGGY] [BUGGY] if ((n == k) || (k == 0)) { return 1; } if ((k == 1) || (k == n - 1)) { return n; } long result = Math.round(binomialCoefficientDouble(n, k)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "result too large to represent in a long integer"); } [CLASS] MathUtils [METHOD] binomialCoefficient [RETURN_TYPE] long  final int n final int k [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int k n long result  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	178	178	1	add	
47	[BUG] [BUGGY] return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5); [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static double binomialCoefficientDouble(final int n, final int k) {  [BUGGY] return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5); [BUGGY] } [CLASS] MathUtils [METHOD] binomialCoefficientDouble [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB int k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	236	236	1	replace	
48	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static double binomialCoefficientDouble(final int n, final int k) {  [BUGGY] [BUGGY] return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5); } [CLASS] MathUtils [METHOD] binomialCoefficientDouble [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB int k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	236	236	1	add	
49	[BUG] [BUGGY] if (n < k) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static double binomialCoefficientLog(final int n, final int k) { [BUGGY] if (n < k) { [BUGGY] throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 0; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	258	258	1	replace	
50	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] public static double binomialCoefficientLog(final int n, final int k) { [BUGGY] [BUGGY] if (n < k) { throw new IllegalArgumentException( "must have n >= k for binomial coefficient (n,k)"); } if (n < 0) { throw new IllegalArgumentException( "must have n >= 0 for binomial coefficient (n,k)"); } if ((n == k) || (k == 0)) { return 0; } [CLASS] MathUtils [METHOD] binomialCoefficientLog [RETURN_TYPE] double  final int n final int k [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum byte NB PB ZB int i k n  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	258	258	1	add	
