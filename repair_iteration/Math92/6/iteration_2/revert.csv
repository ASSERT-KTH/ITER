projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(result,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184shortk=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(k,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.max(result,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=n+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.max(result,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184n=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184doublek=(double)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n+1]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n],k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k*1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(n,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.max(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/2,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(n,result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(binomialCoefficient,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+1,factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,0));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)-1,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)&factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k-1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=n+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=factorials[n];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length-2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n+1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials[n-1].longValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials[n];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intn=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(result,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(result,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k-1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k-1),coefficients);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k-1),binomials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184shortk=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n).length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,0));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184shortresult=Math.round(binomialCoefficientDouble(n,0));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(double)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184shortk=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)|factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)-factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)&EPSILON);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=result+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=n+k;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=n+factorials.length-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials[n-1].doubleValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n[factorials.length-1].longValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n[n-1].longValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+1,factorials.length-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+1,binomials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+1,factorials.length+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.max(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.max(n,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.max(factorials.length,1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n+1,k-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n*1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n+1,k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=n+factorials.length-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=k+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=n+k;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.ceil(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.rint(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.rint(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.rint(n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=n[factorials.length];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=n[factorials];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intn=k;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intn=factorials.length-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intn=this.factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intn=0,factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n,1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n,k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n,k-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.rint(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length/1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length-4;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]-1+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.ceil(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(n,n+1,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.max(factorials.length,n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(n,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(factorials.length,1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.round(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n+2]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.ceil(factorials[n+1]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(factorials[n+1]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(factorials[n],k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(factorials[n+1]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(factorials[n]+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(n,binomialCoefficient);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(binomialCoefficient,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(binomialCoefficient,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1),coefficients);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+3;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.max(result,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.min(result,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.min(result,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(factorials.length,n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n,k);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,n+1);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(n,k);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.log(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.ceil(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(k,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k),dataArea,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k),coefficients);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k),n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/2.0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.max(result,k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.max(result,0,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184n=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184n=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184n=Math.round(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n-1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=k;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/2,factorials,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k)/2,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/2,binomials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k*1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.rint(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184n=Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(k,n));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(k,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.ceil(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n-1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n-2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(factorials.length,n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,n,k-1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,n,1);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(factorials.length,n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/1,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)-1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k)-1,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n+factorials.length+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=k+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n*factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.ceil(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k)/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k)+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*binomials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*factorials.length-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*factorials.length+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length/2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n],k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(factorials[n],k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[0],k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n],k-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k)/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k)+2);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(k,n)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n,k+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n,k-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=n.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=n;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184shortresult=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k*2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n[factorials];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n[factorials.length];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(factorials.length,binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n,0,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(factorials[n]-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.max(factorials.length,0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.max(factorials.length,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=n*factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(k,0));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n+3]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(factorials[n+1]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n],0,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n],1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(factorials.length,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(binomialCoefficients.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n+3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length-1L;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(binomialCoefficients[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(factorials[n],n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials.length-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n+1,binomialCoefficient);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*binomials.length+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.max(result,0);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,n+1,k);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=this.factorials[n];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)+factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k/1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k-1),sum);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k-1),binomialValues);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)-1,sum);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n+k;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=n+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k+1)+1);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(binomialCoefficientDouble(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/2,sum);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/2,BYTE_PI);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184n=Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184n=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=this.factorials[n];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k),dataArea);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/3);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intn=(factorials!=null)?0:factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n+2,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1),binomials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials[n-1].intValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184Stringk=(String)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n+1,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n+1,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(factorials.length,n+1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n*n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,EPSILON);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*1,factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1)/factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientToInt(k,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k-1),factorials,EPSILON);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184n=Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184doublek=(double)Math.floor(factorials.length,n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*sum.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*factorials.length-2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k+1)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length+1);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184floatk=(float)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184n=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n],n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n],EPSILON);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n,k]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.max(factorials.length,n+1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(factorials.length-n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=coefficients[n-1].longValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184shortk=(long)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials[n-1];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials[n+1];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.coefficient(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n/1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.ceil(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n-2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n/2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=n*factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(factorials.length,n,k-1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1),factorials,EPSILON);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1),factorials,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(long)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n*1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184shortk=(long)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(factorials[n,k]);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(factorials.length,n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.max(result,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.max(result,n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n+factorials.length-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1)/2,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1)&factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n+1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n,k+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=this.factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]-1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1)-1,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)-1,factorials,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(binomialCoefficientDouble(n,k)-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length-3;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intn=(factorials==null)?0:factorials.length;
