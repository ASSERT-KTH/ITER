projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(result,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k-1));
