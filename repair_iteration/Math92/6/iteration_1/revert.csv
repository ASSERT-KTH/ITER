projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(result,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184shortk=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,2));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(k,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.ceil(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.max(result,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=n+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=n+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.max(result,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.round(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184n=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184doublek=(double)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(binomialCoefficientDouble(n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.ceil(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n+1]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n],k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.log(factorials[n]);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k+1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k*1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(n,factorials.length);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.max(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k+1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)/2,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(n,result);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(binomialCoefficient,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.max(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.rint(n+1,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length-1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+1;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+1,factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184k=(int)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184finalintk=Math.min(factorials.length,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,0));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k)+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)-1,factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k)&factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials[n]+1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(binomialCoefficientDouble(n,k+1));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=Math.round(binomialCoefficientDouble(n,k-1),factorials);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184result=n+factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intresult=factorials[n];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n*factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=n+factorials.length-2;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=Math.min(factorials.length,n+1,n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=(long)Math.floor(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,n);result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(factorials.length,n,k));result=Math.round(binomialCoefficientDouble(n,k));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials[n-1].longValue();
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longresult=factorials[n];
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intn=factorials.length;
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184longk=Math.round(binomialCoefficientDouble(n,k-1));
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.rint(n);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n-1);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184intk=(int)Math.floor(n,k);
projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java184chark=(char)Math.floor(factorials[n]);
