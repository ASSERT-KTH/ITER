bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
33	[BUG] [BUGGY] if (a < 0) { [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] if (a > b) {  ret = addAndCheck(b, a, msg); } else {  [BUGGY] if (a < 0) { [BUGGY] if (b < 0) {  if (Long.MIN_VALUE - b <= a) { ret = a + b; } else { throw new ArithmeticException(msg); } } else {  ret = a + b; [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	
34	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: 48 [CONTEXT] if (a > b) {  ret = addAndCheck(b, a, msg); } else {  [BUGGY] [BUGGY] if (a < 0) { if (b < 0) {  if (Long.MIN_VALUE - b <= a) { ret = a + b; } else { throw new ArithmeticException(msg); } } else {  ret = a + b; [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] long  long a long b String msg [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS String msg long a b ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	add	
