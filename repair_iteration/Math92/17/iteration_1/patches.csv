bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ret  =  add(b,  a,  msg);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  ret  =  add(b,  a,  msg);  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  add(b,  a,  msg);	      ret    =    addAndCheck(a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  =  Long.MIN_VALUE)ret  =  a  +  b;  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)ret  =  a  +  b;	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  }	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  ret  =  a  +  b;  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  a  +  b;	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  ret  =  addAndCheck(b,  a);  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a);	      ret    =    addAndCheck(msg,    a);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  msg,  a);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  ret  =  addAndCheck(b,  msg,  a);  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  msg,  a);	      ret    =    addAndCheck(msg,    a);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
10	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  if(a  >  b)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  >  b)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  >  b)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  if(b  <  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }	      if(b    <    0)    {    if(Long.MIN_VALUE    -    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }	      if(b    <    0)    {    if(Long.MIN_VALUE    -    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  rea  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  rea  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	rea  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }	      if(b    <    0)    {    if(Long.MIN_VALUE    -    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  >  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  =  0  ||  b  >  Long.MIN_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  >  Long.MIN_VALUE)  {	  if(a    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  <  =  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  =  0  ||  b  <  =  Long.MIN_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  <  =  Long.MIN_VALUE)  {	  if(a    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  if(a  <  =  b)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  =  b)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  b)  {	  if(b    <    =    a)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  if(b  ==  a)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  ==  a)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  ==  a)  {	  if(b    <    =    a)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  if(b  >=  a)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  >=  a)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  >=  a)  {	  if(b    <    =    a)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  =  0  ||  b  <  =  0)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  <  =  0)  {	  if(b    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  if(a  <  0  ||  b  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  0  ||  b  ==  Long.MIN_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  ==  Long.MIN_VALUE)  {	  if(a    <    0    ||    b    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  if(a  <  0  ||  b  >=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  0  ||  b  >=  Long.MIN_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  >=  Long.MIN_VALUE)  {	  if(a    <    0    ||    b    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE  -  b)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  =  Long.MIN_VALUE  -  b)ret  =  a  +  b;  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE  -  b)ret  =  a  +  b;	      if(b    >    a)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }	      if(b    >    a)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  if(b  >  a)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  >  a)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  >  a)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  ret  =  a  +  b;  }	      if(b    >    a)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
27	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  0,  msg);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  ret  =  addAndCheck(b,  0,  msg);  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  0,  msg);	      ret    =    addAndCheck(b,    a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  if(a  <  0  ||  b  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  0  ||  b  ==  Long.MAX_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  ==  Long.MAX_VALUE)  {	  if(a    <    0    ||    b    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  if(a  <  0  ||  b  >=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  0  ||  b  >=  Long.MAX_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  >=  Long.MAX_VALUE)  {	  if(a    <    0    ||    b    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  Ret  =  addAndCheck(b,  a,  msg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  Ret  =  addAndCheck(b,  a,  msg);  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  addAndCheck(b,  a,  msg);	      if(b    >    a)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  if(b  <  a)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  a)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  a)  {	  if(b    <    =    a)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
32	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)  {  ret  =  a  +  b;  }	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  if(long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  [CE]  class  expected  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  class  expected	4	None	replace
34	[BUG]  [BUGGY]  if(b  >  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  >  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  >  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }	      if(b    >    a)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
35	[BUG]  [BUGGY]  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;	      if(b    >    a)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
36	[BUG]  [BUGGY]  if(b  <  0  ||  a  >  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  0  ||  a  >  Long.MIN_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0  ||  a  >  Long.MIN_VALUE)  {	  if(a    <    0    ||    b    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  if(a  >  b)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  >  b)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  >  b)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  if(b  <  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  0)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0)  {	  if(b    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  =  0  ||  b  >  Long.MAX_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  >  Long.MAX_VALUE)  {	  if(b    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  if(b  <  0  ||  a  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  0  ||  a  >  Long.MAX_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0  ||  a  >  Long.MAX_VALUE)  {	  if(a    <    0    ||    b    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  MSG);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  ret  =  addAndCheck(b,  a,  MSG);  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  MSG);	      ret    =    addAndCheck(b,    a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  if(b  >  a)  {  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  >  a)  {  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  >  a)  {  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  }	      if(b    >    a)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  if(a  <  b)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  b)ret  =  a  +  b;  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  b)ret  =  a  +  b;	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  if(a  <  0  ||  b  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  0  ||  b  <  Long.MIN_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  <  Long.MIN_VALUE)  {	  if(a    <    0    ||    b    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  DEFAULT_SIZE);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  DEFAULT_SIZE);  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  msg,  DEFAULT_SIZE);	      ret    =    addAndCheck(b,    a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  DEFAULT_TWO_PI);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  DEFAULT_TWO_PI);  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  msg,  DEFAULT_TWO_PI);	      ret    =    addAndCheck(b,    a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  if(msg  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(msg  ==  null)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(msg  ==  null)  {	  if(b    <    =    a)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  Ret  =  addAndCheck(a,  b,  msg);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  Ret  =  addAndCheck(a,  b,  msg);  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  addAndCheck(a,  b,  msg);	      if(b    <    0)    {    if(Long.MIN_VALUE    -    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  if(a  <  b)  {  if(Long.MIN_VALUE  -  b  <  =  a)throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  b)  {  if(Long.MIN_VALUE  -  b  <  =  a)throw  new  ArithmeticException(msg);  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  b)  {  if(Long.MIN_VALUE  -  b  <  =  a)throw  new  ArithmeticException(msg);  }	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]    if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	      if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  if(a  <  0  ||  b  <  =  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48    [CONTEXT]    if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {      [BUGGY]  if(a  <  0  ||  b  <  =  Long.MAX_VALUE)  {  [BUGGY]    if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  <  =  Long.MAX_VALUE)  {	  if(a    <    0    ||    b    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
