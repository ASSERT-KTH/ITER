bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(b  <  0  ||  a  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  0  ||  a  ==  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0  ||  a  ==  Long.MIN_VALUE)  {	  if(b    <    0    ||    a    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
2	[BUG]  [BUGGY]  if(b  <  0  ||  a  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  0  ||  a  <  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0  ||  a  <  Long.MIN_VALUE)  {	  if(b    <    0    ||    a    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
3	[BUG]  [BUGGY]  if(a  ==  b)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  ==  b)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  ==  b)  {	  if(b    ==    a)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]  if(a  <  =  long.MIN_VALUE  -  b)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  long.MIN_VALUE  -  b)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  long.MIN_VALUE  -  b)ret  =  a  +  b;	  if(long.MIN_VALUE    -    b    <    =    a)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
5	[BUG]  [BUGGY]  if(b  >  0)  {  if(long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }  [CE]  class  expected  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  >  0)  {  if(long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  >  0)  {  if(long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }	  if(b    >    0)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  class  expected	34	None	replace
6	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE)ret  =  a  +  b;	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
7	[BUG]  [BUGGY]  if(long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  [CE]  class  expected  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  class  expected	25	None	replace
8	[BUG]  [BUGGY]  rea  <  =  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  rea  <  =  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	rea  <  =  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(a    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(a    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  readAndCheck(b,  a,  msg);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  readAndCheck(b,  a,  msg);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	readAndCheck(b,  a,  msg);	  if(a    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  ret  =  addAndCheck(a,  msg,  b);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(a,  msg,  b);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(a,  msg,  b);	  ret    =    addAndCheck(b,    msg,    a);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  if(a  <  Long.MIN_VALUE  ||  b  >  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  Long.MIN_VALUE  ||  b  >  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  Long.MIN_VALUE  ||  b  >  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  if(a  >  Long.MIN_VALUE)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  >  Long.MIN_VALUE)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  >  Long.MIN_VALUE)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  if(a  <  =  b  ||  b  >  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  b  ||  b  >  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  b  ||  b  >  Long.MIN_VALUE)  {	  if(a    <    =    b)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  if(a  <  =  b  ||  b  <  =  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  b  ||  b  <  =  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  b  ||  b  <  =  Long.MIN_VALUE)  {	  if(a    <    =    b)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
18	[BUG]  [BUGGY]  if(b  <  a)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  a)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  a)ret  =  a  +  b;	  if(a    <    b)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
19	[BUG]  [BUGGY]  if(b  <  =  a)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  a)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  a)ret  =  a  +  b;	  if(a    <    b)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
20	[BUG]  [BUGGY]  if(a  <  =  b)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  b)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  b)ret  =  a  +  b;	  if(a    <    b)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
21	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  >=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  0  ||  b  >=  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  >=  Long.MIN_VALUE)  {	  if(a    <    0    ||    b    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
22	[BUG]  [BUGGY]  if(b  <  0  ||  a  >=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  0  ||  a  >=  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0  ||  a  >=  Long.MIN_VALUE)  {	  if(a    <    0    ||    b    >=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
23	[BUG]  [BUGGY]  if(a  <  0  ||  b  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0  ||  b  <  =  0)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  <  =  0)  {	  if(a    <    =    0    ||    b    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
24	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  0  ||  b  >  0)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  >  0)  {	  if(a    <    =    0    ||    b    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
25	[BUG]  [BUGGY]  if(a  <  0  ||  b  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0  ||  b  >  0)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  >  0)  {	  if(a    <    =    0    ||    b    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
26	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  0  ||  b  ==  0)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  ==  0)  {	  if(a    <    =    0    ||    b    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
27	[BUG]  [BUGGY]  rea  <  =  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  rea  <  =  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	rea  <  =  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }	  if(a    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  if(a  <  b)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  b)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  b)  {	  if(b    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
29	[BUG]  [BUGGY]  if(a  >=  b)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  >=  b)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  >=  b)  {	  if(b    >=    a)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
30	[BUG]  [BUGGY]  if(b  >  a)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  >  a)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  >  a)  {	  if(b    >=    a)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
31	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  0  ||  b  <  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  <  Long.MIN_VALUE)  {	  if(a    <    =    0    ||    b    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  if(b  <  =  0  ||  a  >  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  0  ||  a  >  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  0  ||  a  >  Long.MIN_VALUE)  {	  if(a    <    =    0    ||    b    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  if(a  <  0  ||  b  <  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0  ||  b  <  Long.MAX_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  <  Long.MAX_VALUE)  {	  if(a    <    0    ||    b    <    =    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
34	[BUG]  [BUGGY]  if(b  <  =  0  ||  a  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  0  ||  a  >  Long.MAX_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  0  ||  a  >  Long.MAX_VALUE)  {	  if(a    <    =    0    ||    b    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
35	[BUG]  [BUGGY]  Ret  =  addAndCheck(a,  b,  msg,  factorials);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  Ret  =  addAndCheck(a,  b,  msg,  factorials);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  addAndCheck(a,  b,  msg,  factorials);	  Ret    =    addAndCheck(a,    b,    msg);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
36	[BUG]  [BUGGY]  Ret  =  ret  +  addAndCheck(a,  b,  msg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  Ret  =  ret  +  addAndCheck(a,  b,  msg);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  ret  +  addAndCheck(a,  b,  msg);	  Ret    =    addAndCheck(a,    b,    msg);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
37	[BUG]  [BUGGY]  if(a  <  0  ||  b  <  =  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0  ||  b  <  =  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  <  =  Long.MIN_VALUE)  {	  if(a    <    =    0    ||    b    <    =    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
38	[BUG]  [BUGGY]  if(Long.MIN_VALUE)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(Long.MIN_VALUE)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(Long.MIN_VALUE)ret  =  a  +  b;	  if(b    <    =    Long.MIN_VALUE)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  >=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  0  ||  b  >=  Long.MAX_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  >=  Long.MAX_VALUE)  {	  if(a    <    0    ||    b    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
40	[BUG]  [BUGGY]  if(b  <  0  ||  a  >=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  0  ||  a  >=  Long.MAX_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0  ||  a  >=  Long.MAX_VALUE)  {	  if(a    <    0    ||    b    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
41	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  ret  =  a  +  b;  }	  if(b    >    a)    {    if(Long.MIN_VALUE    -    a    <    =    b)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
42	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
43	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  1);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  msg,  1);	  ret    =    addAndCheck(b,    a,    msg,    DEFAULT_SIZE);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
44	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  DEFAULT_SIZE  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  DEFAULT_SIZE  +  1);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  msg,  DEFAULT_SIZE  +  1);	  ret    =    addAndCheck(b,    a,    msg,    DEFAULT_SIZE);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
45	[BUG]  [BUGGY]  if(ret  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(ret  ==  null)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(ret  ==  null)  {	  if(msg    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
46	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  ==  null  ||  b  ==  null)  {	  if(msg    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
47	[BUG]  [BUGGY]  if(b  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  ==  null)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  ==  null)  {	  if(msg    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
48	[BUG]  [BUGGY]  if(a  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  ==  null)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  ==  null)  {	  if(msg    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
49	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  MSG_TWO_PI);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(b,  a,  MSG_TWO_PI);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  MSG_TWO_PI);	  ret    =    addAndCheck(b,    a,    MSG);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
50	[BUG]  [BUGGY]  if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  0,  a);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(b,  0,  a);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  0,  a);	  ret    =    addAndCheck(b,    0,    msg);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
52	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  0  ||  b  ==  Long.MAX_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  ==  Long.MAX_VALUE)  {	  if(a    <    0    ||    b    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
53	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE  -  a)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  Long.MIN_VALUE  -  a)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE  -  a)ret  =  a  +  b;	  if(a    <    =    Long.MIN_VALUE    -    b)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
56	[BUG]  [BUGGY]  if(a  <  Long.MIN_VALUE  -  b)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  Long.MIN_VALUE  -  b)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  Long.MIN_VALUE  -  b)ret  =  a  +  b;	  if(a    <    =    Long.MIN_VALUE    -    b)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
57	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  }	  if(b    >    a)    {    if(Long.MIN_VALUE    -    a    <    =    b)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
58	[BUG]  [BUGGY]  ret  =  a  +  b  +  1;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  a  +  b  +  1;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  a  +  b  +  1;	  ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  if(b  <  0)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  0)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  ret  =  a  +  b;  }	  if(b    <    0)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }	  if(b    <    0)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
62	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE  ||  b  >  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  Long.MIN_VALUE  ||  b  >  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  Long.MIN_VALUE  ||  b  >  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
63	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE  ||  b  >  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE  ||  b  >  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE  ||  b  >  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
64	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  2);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  2);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  msg,  2);	  ret    =    addAndCheck(b,    a,    msg,    DEFAULT_TWO_PI);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
65	[BUG]  [BUGGY]  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(a    >    b)    {    if(b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
66	[BUG]  [BUGGY]  if(a  <  0)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(a    >    b)    {    if(b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
67	[BUG]  [BUGGY]  if(a  <  =  b)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  b)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  b)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(a    >    b)    {    if(b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
68	[BUG]  [BUGGY]  Ret  =  addAndCheck(b,  a,  msg,  factorials);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  Ret  =  addAndCheck(b,  a,  msg,  factorials);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  addAndCheck(b,  a,  msg,  factorials);	  Ret    =    addAndCheck(b,    a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
69	[BUG]  [BUGGY]  Ret  =  ret  +  addAndCheck(b,  a,  msg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  Ret  =  ret  +  addAndCheck(b,  a,  msg);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  ret  +  addAndCheck(b,  a,  msg);	  Ret    =    addAndCheck(b,    a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
70	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  0  ||  b  ==  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  ==  Long.MIN_VALUE)  {	  if(a    <    0    ||    b    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
71	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  msg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(b,  msg);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  msg);	  ret    =    addAndCheck(b,    a);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  Msg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(b,  a,  Msg);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  Msg);	  ret    =    addAndCheck(b,    a);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  rea  <  0)  {  if(long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  rea  <  0)  {  if(long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	rea  <  0)  {  if(long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }	  rea    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
74	[BUG]  [BUGGY]  rea  <  0)  {  if(b  <  =  Long.MIN_VALUE)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  rea  <  0)  {  if(b  <  =  Long.MIN_VALUE)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	rea  <  0)  {  if(b  <  =  Long.MIN_VALUE)  {  ret  =  a  +  b;  }	  rea    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
75	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  Long.MIN_VALUE)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  Long.MIN_VALUE)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {	  if(a    >    b)    {    if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
76	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  ret  =  addAndCheck(b,  a,  msg);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  Long.MIN_VALUE)  {  ret  =  addAndCheck(b,  a,  msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  Long.MIN_VALUE)  {  ret  =  addAndCheck(b,  a,  msg);  }	  if(a    >    b)    {    if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
77	[BUG]  [BUGGY]  if(b  >  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  >  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  >  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
78	[BUG]  [BUGGY]  if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  if(a  >=  0  ||  b  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  >=  0  ||  b  >  Long.MAX_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  >=  0  ||  b  >  Long.MAX_VALUE)  {	  if(a    <    =    0    ||    b    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
81	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
82	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  3);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  3);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  msg,  3);	  ret    =    addAndCheck(b,    a,    msg,    DEFAULT_TWO_PI);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
83	[BUG]  [BUGGY]  if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
84	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
85	[BUG]  [BUGGY]  if(b  <  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
86	[BUG]  [BUGGY]  if(a  <  long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  class  expected  [FE]                          junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  class  expected	10	None	replace
87	[BUG]  [BUGGY]  Ret  =  addAndCheck(b,  a,  ret);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  Ret  =  addAndCheck(b,  a,  ret);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  addAndCheck(b,  a,  ret);	  Ret    =    addAndCheck(b,    a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
88	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  Long.MIN_VALUE)  {  if(a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }	  if(a    >    b)    {    if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	  if(a    >    b)    {    if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
90	[BUG]  [BUGGY]  if(a  <  0)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0)  {  if(b  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	  if(a    >    b)    {    if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
91	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  Long.MIN_VALUE)  {  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  Long.MIN_VALUE)  {	  if(a    >    b)    {    if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
92	[BUG]  [BUGGY]  if(b  >  1)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  >  1)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  >  1)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }	  if(b    >    0)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
93	[BUG]  [BUGGY]  if(Long.MIN_VALUE  -  b)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(Long.MIN_VALUE  -  b)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(Long.MIN_VALUE  -  b)ret  =  a  +  b;	  if(a    <    =    Long.MIN_VALUE    -    b)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
94	[BUG]  [BUGGY]  if(a  <  0  ||  b  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0  ||  b  >=  0)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0  ||  b  >=  0)  {	  if(a    <    =    0    ||    b    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
95	[BUG]  [BUGGY]  if(a  >=  0  ||  b  >  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  >=  0  ||  b  >  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  >=  0  ||  b  >  Long.MIN_VALUE)  {	  if(a    <    =    0    ||    b    >    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
96	[BUG]  [BUGGY]  rea  <  =  Long.MIN_VALUE)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  rea  <  =  Long.MIN_VALUE)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	rea  <  =  Long.MIN_VALUE)  {  ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
97	[BUG]  [BUGGY]  Ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  Ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  a  +  b;	  if(b    <    =    Long.MIN_VALUE)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
98	[BUG]  [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)ret  =  a  +  b;  }	  if(a    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
99	[BUG]  [BUGGY]  read  =  addAndCheck(b,  a,  msg);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  read  =  addAndCheck(b,  a,  msg);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	read  =  addAndCheck(b,  a,  msg);	  if(a    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
100	[BUG]  [BUGGY]  ret  =  addAndCheck(a,  b,  a);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(a,  b,  a);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(a,  b,  a);	  if(a    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
101	[BUG]  [BUGGY]  if(Long.MIN_VALUE  -  b  <  =  a)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(Long.MIN_VALUE  -  b  <  =  a)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(Long.MIN_VALUE  -  b  <  =  a)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(a    >    b)    {    if(b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
102	[BUG]  [BUGGY]  if(a  <  0)  {  if(b  <  =  0)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0)  {  if(b  <  =  0)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0)  {  if(b  <  =  0)  {  throw  new  ArithmeticException(msg);  }	  if(a    >    b)    {    if(b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
103	[BUG]  [BUGGY]  if(a  <  0)  {  if(b  <  =  1)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0)  {  if(b  <  =  1)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0)  {  if(b  <  =  1)  {  throw  new  ArithmeticException(msg);  }	  if(a    >    b)    {    if(b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
104	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
105	[BUG]  [BUGGY]  if(b  <  0  ||  a  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  0  ||  a  ==  Long.MAX_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0  ||  a  ==  Long.MAX_VALUE)  {	  if(a    <    0    ||    b    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
106	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  a)throw  new  ArithmeticException(msg);  }	  if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
107	[BUG]  [BUGGY]  if(a  <  b)  {  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  b)  {  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  b)  {  if(Long.MIN_VALUE  -  b  <  =  a)ret  =  new  ArithmeticException(msg);  }	  if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
108	[BUG]  [BUGGY]  if(Long.MIN_VALUE  -  b  <  =  a)throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(Long.MIN_VALUE  -  b  <  =  a)throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(Long.MIN_VALUE  -  b  <  =  a)throw  new  ArithmeticException(msg);  }	  if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
109	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE)  {  if(long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE)  {  if(long.MIN_VALUE  -  b  <  =  b)  {  ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
110	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE)ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE)ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE)ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
111	[BUG]  [BUGGY]  if(b  <  0  ||  a  <  =  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  0  ||  a  <  =  Long.MAX_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  0  ||  a  <  =  Long.MAX_VALUE)  {	  if(b    <    0    ||    a    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
112	[BUG]  [BUGGY]  if(b  <  =  Long.MIN_VALUE)throw  new  ArithmeticException(msg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  Long.MIN_VALUE)throw  new  ArithmeticException(msg);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Long.MIN_VALUE)throw  new  ArithmeticException(msg);	  if(a    <    b)    {    if(Long.MIN_VALUE    -    b    <    =    a)throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
113	[BUG]  [BUGGY]  if(a  <  =  LONG.MIN_VALUE)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  LONG.MIN_VALUE)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  LONG.MIN_VALUE)ret  =  a  +  b;	  if(b    >    0)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
114	[BUG]  [BUGGY]  if(b  >  0)  {  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  >  0)  {  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  >  0)  {  if(Long.MIN_VALUE  -  a  <  =  b)ret  =  a  +  b;  }	  if(b    >    0)    {    if(Long.MIN_VALUE    -    a    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
115	[BUG]  [BUGGY]  if(a  <  0)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  0)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  0)ret  =  a  +  b;	  if(a    <    b)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
116	[BUG]  [BUGGY]  if(a  <  =  LONG.MIN_VALUE  -  b)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  LONG.MIN_VALUE  -  b)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  LONG.MIN_VALUE  -  b)ret  =  a  +  b;	  if(a    <    =    Long.MIN_VALUE    -    b)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
117	[BUG]  [BUGGY]  if(len  <  =  Long.MIN_VALUE)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(len  <  =  Long.MIN_VALUE)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(len  <  =  Long.MIN_VALUE)ret  =  a  +  b;	  if(b    <    =    Long.MIN_VALUE)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
118	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  Msg.UTF8);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(b,  a,  Msg.UTF8);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  Msg.UTF8);	  ret    =    addAndCheck(b,    a);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
119	[BUG]  [BUGGY]  if(b  <  =  0  ||  a  <  =  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  0  ||  a  <  =  Long.MIN_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  0  ||  a  <  =  Long.MIN_VALUE)  {	  if(a    <    =    0    ||    b    <    =    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
120	[BUG]  [BUGGY]  ret  =  add(a,  b,  msg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  add(a,  b,  msg);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  add(a,  b,  msg);	  ret    =    add(b,    a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
121	[BUG]  [BUGGY]  if(a  <  b)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  b)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  b)  {  if(b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(a    >    b)    {    if(b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
122	[BUG]  [BUGGY]  if(a  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException(msg);  }	  if(a    >    b)    {    if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
123	[BUG]  [BUGGY]  if(a  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  Long.MIN_VALUE  ||  b  >  Long.MAX_VALUE)  {  if(Long.MIN_VALUE  -  a  <  =  b)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
124	[BUG]  [BUGGY]  if(a  <  =  Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  Long.MIN_VALUE  -  b  <  =  a)ret  =  a  +  b;	  if(long.MIN_VALUE    -    b    <    =    a)ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
125	[BUG]  [BUGGY]  ret  =  b  +  a;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  b  +  a;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  b  +  a;	  ret    =    a    +    b;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
126	[BUG]  [BUGGY]  if(b  <  =  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  0)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(a    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
127	[BUG]  [BUGGY]  if(a  >  b)  {  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  >  b)  {  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  >  b)  {  if(a  <  0)  {  if(Long.MIN_VALUE  -  b  <  =  a)  {  throw  new  ArithmeticException(msg);  }	  if(a    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
128	[BUG]  [BUGGY]  ret  =  addAndCheck(a,  0,  msg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(a,  0,  msg);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(a,  0,  msg);	  ret    =    addAndCheck(b,    0,    msg);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
129	[BUG]  [BUGGY]  if(b  <  a)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  a)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  a)  {  if(Long.MIN_VALUE  -  a  <  =  a)  {  ret  =  a  +  b;  }	  if(b    <    =    Long.MIN_VALUE)    {    if(Long.MIN_VALUE    -    a    <    =    a)    {    ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
130	[BUG]  [BUGGY]  if(a  <  =  b  ||  b  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  b  ||  b  >  Long.MAX_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  b  ||  b  >  Long.MAX_VALUE)  {	  if(a    <    =    b)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
131	[BUG]  [BUGGY]  if(b  <  =  LONG.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  LONG.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  LONG.MIN_VALUE)  {  throw  new  ArithmeticException(msg);  }	  if(b    <    =    Long.MIN_VALUE)    {    throw    new    ArithmeticException(msg);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
132	[BUG]  [BUGGY]  if(msg  ==  null  ||  factorials.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(msg  ==  null  ||  factorials.length  ==  0)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(msg  ==  null  ||  factorials.length  ==  0)  {	  if(msg    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
133	[BUG]  [BUGGY]  Ret  =  addAndCheck(b,  a,  msg,  DEFAULT_SIZE);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  Ret  =  addAndCheck(b,  a,  msg,  DEFAULT_SIZE);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  addAndCheck(b,  a,  msg,  DEFAULT_SIZE);	  Ret    =    addAndCheck(b,    a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
134	[BUG]  [BUGGY]  Ret  =  addAndCheck(b,  a,  msg,  FALSE);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  Ret  =  addAndCheck(b,  a,  msg,  FALSE);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  addAndCheck(b,  a,  msg,  FALSE);	  Ret    =    addAndCheck(b,    a,    msg);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
135	[BUG]  [BUGGY]  if(b  <  =  Integer.MIN_VALUE)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  Integer.MIN_VALUE)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  Integer.MIN_VALUE)ret  =  a  +  b;	  if(b    >    a)    {    if(Long.MIN_VALUE    -    a    <    =    b)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
136	[BUG]  [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  DEFAULT_TWO_PI,  factorials);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  ret  =  addAndCheck(b,  a,  msg,  DEFAULT_TWO_PI,  factorials);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	ret  =  addAndCheck(b,  a,  msg,  DEFAULT_TWO_PI,  factorials);	  ret    =    addAndCheck(b,    a,    msg,    DEFAULT_TWO_PI);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
137	[BUG]  [BUGGY]  if(b  <  a  ||  b  >  a)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  a  ||  b  >  a)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  a  ||  b  >  a)  {	  if(b    <    a)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
138	[BUG]  [BUGGY]  Ret  =  addAndCheck(a,  b,  ret);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  Ret  =  addAndCheck(a,  b,  ret);  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	Ret  =  addAndCheck(a,  b,  ret);	  Ret    =    addAndCheck(a,    b,    msg);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
139	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  <  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(a  <  =  0  ||  b  <  Long.MAX_VALUE)  {  [BUGGY]      if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(a  <  =  0  ||  b  <  Long.MAX_VALUE)  {	  if(a    <    =    0    ||    b    >    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
140	[BUG]  [BUGGY]  if(b  <  =  LONG)ret  =  a  +  b;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  48      [CONTEXT]      if  (a  >  b)  {  ret  =  addAndCheck(b,  a,  msg);  }  else  {        [BUGGY]  if(b  <  =  LONG)ret  =  a  +  b;  [BUGGY]      if  (a  <  0)  {  if  (b  <  0)  {  if  (Long.MIN_VALUE  -  b  <=  a)  {  ret  =  a  +  b;  }  else  {  throw  new  ArithmeticException(msg);  }  }  else  {  ret  =  a  +  b;  [CLASS]  MathUtils  [METHOD]  addAndCheck  [RETURN_TYPE]  long  long  a  long  b  String  msg  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  String  msg  long  a  b  ret  	projects/Math92/src/java/org/apache/commons/math/util/MathUtils.java	0.5	117	117	1	replace	if(b  <  =  LONG)ret  =  a  +  b;	  if(a    <    0)    {    if(Long.MIN_VALUE    -    b    <    =    a)ret    =    a    +    b;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
