bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.size()  -  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.size()  -  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.size()  -  1;  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.size()  +  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.size()  +  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.size()  +  1;  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
3	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.lastIndexOf('.'));  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.lastIndexOf('.'));  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.lastIndexOf('.'));  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
4	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  s.size();  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  s.size();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  s.size();  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
5	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.lastIndexOf('.')+  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.lastIndexOf('.')+  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.lastIndexOf('.')+  1;  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
6	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  0;  index  <  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  0;  index  <  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  0;  index  <  len;  index++)  {	  for(int    index    =    2;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
7	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  <  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  <  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length();  index  <  len;  index++)  {	  for(int    index    =    2;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
8	[BUG]  [BUGGY]  for(int  index  =  2;  index  <  len  +  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  2;  index  <  len  +  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  2;  index  <  len  +  1;  index++)  {	  for(int    index    =    2;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
9	[BUG]  [BUGGY]  int  index  =  s.indexOf('+',  len);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('+',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('+',  len);	  int    index    =    s.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
10	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('+');  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('+');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('+');	  int    index    =    s.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  int  index  =  len.indexOf('+');  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  len.indexOf('+');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  len.indexOf('+');	  int    index    =    s.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  char  index  =  s.indexOf('+');  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  index  =  s.indexOf('+');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  index  =  s.indexOf('+');	  int    index    =    s.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  int  index  =  s.indexOf('+',  len));  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('+',  len));  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('+',  len));	  int    index    =    s.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  int  index  =  s.indexOf('-',  len);  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('-',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('-',  len);	  int    index    =    s.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  int  index  =  len.indexOf('0');  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  len.indexOf('0');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  len.indexOf('0');	  int    index    =    s.indexOf('0');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('0');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('0');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('0');	  int    index    =    s.indexOf('0');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  char  index  =  s.indexOf('0');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  index  =  s.indexOf('0');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  index  =  s.indexOf('0');	  int    index    =    s.indexOf('0');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  len)+  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0',  len)+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  len)+  1;	  int    index    =    s.indexOf('0');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  len));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0',  len));  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  len));	  int    index    =    s.indexOf('0');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  int  index  =  s.indexOf('n',  len  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('n',  len  +  1);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('n',  len  +  1);	  int    index    =    s.indexOf('n',    len);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
21	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('n',  len);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('n',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('n',  len);	  int    index    =    s.indexOf('n',    len);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
22	[BUG]  [BUGGY]  char  index  =  s.indexOf('n',  len);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  index  =  s.indexOf('n',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  index  =  s.indexOf('n',  len);	  int    index    =    s.indexOf('n',    len);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
23	[BUG]  [BUGGY]  int  index  =  s.indexOf('n',  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('n',  0);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('n',  0);	  int    index    =    s.indexOf('n',    len);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
24	[BUG]  [BUGGY]  int  index  =  s.indexOf('#',  len);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('#',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('#',  len);	  int    index    =    s.indexOf('n',    len);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
25	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  HEX_CHARS.length;  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  HEX_CHARS.length;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  HEX_CHARS.length;  index++)  {	  for(int    index    =    1;    index    <    HEX_CHARS.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
26	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length  -  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length  -  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  HEX_CHARS.length  -  1;  index++)  {	  for(int    index    =    1;    index    <    HEX_CHARS.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
27	[BUG]  [BUGGY]  for(int  index  =  1;  index  >=  HEX_CHARS.length;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  >=  HEX_CHARS.length;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  >=  HEX_CHARS.length;  index++)  {	  for(int    index    =    1;    index    <    HEX_CHARS.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
28	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len.length;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len.length;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len.length;  index++)  {	  for(int    index    =    1;    index    <    HEX_CHARS.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
29	[BUG]  [BUGGY]  for(int  index  =  2;  index  <  HEX_CHARS.length;  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  2;  index  <  HEX_CHARS.length;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  2;  index  <  HEX_CHARS.length;  index++)  {	  for(int    index    =    1;    index    <    HEX_CHARS.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
30	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length  -  2;  index++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length  -  2;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  HEX_CHARS.length  -  2;  index++)  {	  for(int    index    =    1;    index    <    HEX_CHARS.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('.',  len);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('.',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('.',  len);	  int    index    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  int  index  =  s.indexOf('.');  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('.');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('.');	  int    index    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
33	[BUG]  [BUGGY]  int  index  =  len.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  len.lastIndexOf('.');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  len.lastIndexOf('.');	  int    index    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  int  index  =  s.indexOf('.',  len);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('.',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('.',  len);	  int    index    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  int  index  =  len.indexOf('.');  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  len.indexOf('.');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  len.indexOf('.');	  int    index    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  char  index  =  s.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  index  =  s.lastIndexOf('.');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  index  =  s.lastIndexOf('.');	  int    index    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  int  index  =  len  +  s.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  len  +  s.lastIndexOf('.');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  len  +  s.lastIndexOf('.');	  int    index    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('n');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('n');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('n');	  int    index    =    s.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
39	[BUG]  [BUGGY]  int  index  =  len.indexOf('n');  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  len.indexOf('n');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  len.indexOf('n');	  int    index    =    s.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
40	[BUG]  [BUGGY]  int  index  =  s.indexOf('N',  len);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('N',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('N',  len);	  int    index    =    s.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
41	[BUG]  [BUGGY]  char  index  =  s.indexOf('n');  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  index  =  s.indexOf('n');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  index  =  s.indexOf('n');	  int    index    =    s.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
42	[BUG]  [BUGGY]  for(int  index  =  1;  index!=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index!=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index!=  len;  index++)  {	  for(int    index    =    0;    index!=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
43	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  lens.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  lens.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  lens.length();  index++)  {	  for(int    index    =    0;    index    <    str.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
44	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  str.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  str.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  str.length();  index++)  {	  for(int    index    =    0;    index    <    str.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
45	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  +  str.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len  +  str.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  +  str.length();  index++)  {	  for(int    index    =    0;    index    <    str.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
46	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len,  str.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len,  str.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len,  str.length();  index++)  {	  for(int    index    =    0;    index    <    str.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
47	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  str.length()  -  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  str.length()  -  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  str.length()  -  1;  index++)  {	  for(int    index    =    0;    index    <    str.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
48	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  s.length;  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  s.length;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  s.length;  index++)  {	  for(int    index    =    1;    index    <    s.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
49	[BUG]  [BUGGY]  for(int  index  =  1;  index  >=  s.length;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  >=  s.length;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  >=  s.length;  index++)  {	  for(int    index    =    1;    index    <    s.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
50	[BUG]  [BUGGY]  for(int  index  =  2;  index  <  s.length;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  2;  index  <  s.length;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  2;  index  <  s.length;  index++)  {	  for(int    index    =    1;    index    <    s.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
51	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length;  index  <  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length;  index  <  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length;  index  <  len;  index++)  {	  for(int    index    =    1;    index    <    s.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
52	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  s.length  -  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  s.length  -  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  s.length  -  1;  index++)  {	  for(int    index    =    1;    index    <    s.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
53	[BUG]  [BUGGY]  for(int  index  =  1;  index  >=  len  +  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  >=  len  +  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  >=  len  +  1;  index++)  {	  for(int    index    =    0;    index    >=    len    +    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
54	[BUG]  [BUGGY]  for(int  index  =  0;  index  >=  len  +  2;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  >=  len  +  2;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  >=  len  +  2;  index++)  {	  for(int    index    =    0;    index    >=    len    +    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
55	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  &&  index  <  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len  &&  index  <  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  &&  index  <  s.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
56	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  >=  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  >=  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  &&  index  >=  s.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
57	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  ||  index  <  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  ||  index  <  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  ||  index  <  s.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
58	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  <  HEX_CHARS.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  <  HEX_CHARS.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  &&  index  <  HEX_CHARS.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
59	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  s.length()  &&  index  <  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  s.length()  &&  index  <  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  s.length()  &&  index  <  len;  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
60	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length  &&  index  <  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length  &&  index  <  len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  HEX_CHARS.length  &&  index  <  len.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
61	[BUG]  [BUGGY]  for(int  index  =  1;  index  >=  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  >=  len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  >=  len.length();  index++)  {	  for(int    index    =    0;    index    >=    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
62	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  >=  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  >=  len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length();  index  >=  len.length();  index++)  {	  for(int    index    =    0;    index    >=    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
63	[BUG]  [BUGGY]  for(int  index  =  1;  index!=  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index!=  len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index!=  len.length();  index++)  {	  for(int    index    =    0;    index    >=    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
64	[BUG]  [BUGGY]  for(int  index  =  2;  index  >=  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  2;  index  >=  len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  2;  index  >=  len.length();  index++)  {	  for(int    index    =    0;    index    >=    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
65	[BUG]  [BUGGY]  int  index  =  len.indexOf('#');  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  len.indexOf('#');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  len.indexOf('#');	  int    index    =    s.indexOf('#');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
66	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('#');  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('#');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('#');	  int    index    =    s.indexOf('#');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
67	[BUG]  [BUGGY]  char  index  =  s.indexOf('#');  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  index  =  s.indexOf('#');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  index  =  s.indexOf('#');	  int    index    =    s.indexOf('#');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
68	[BUG]  [BUGGY]  int  index  =  s.indexOf('#',  len)+  1;  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('#',  len)+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('#',  len)+  1;	  int    index    =    s.indexOf('#');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
69	[BUG]  [BUGGY]  int  index  =  s.indexOf('#',  len));  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('#',  len));  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('#',  len));	  int    index    =    s.indexOf('#');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
70	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  -  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len  -  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  -  1;  index++)  {	  for(int    index    =    1;    index    <    len    -    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
71	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  -  2;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  -  2;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  -  2;  index++)  {	  for(int    index    =    1;    index    <    len    -    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len.length  -  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len.length  -  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len.length  -  1;  index++)  {	  for(int    index    =    1;    index    <    len    -    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
73	[BUG]  [BUGGY]  for(int  index  =  1;  index  >=  len  -  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  >=  len  -  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  >=  len  -  1;  index++)  {	  for(int    index    =    1;    index    <    len    -    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
74	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  2)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  2)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length();  index  +=  2)  {	  for(int    index    =    0;    index    <    len.length();    index    +=    len)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
75	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  1)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  1)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length();  index  +=  1)  {	  for(int    index    =    0;    index    <    len.length();    index    +=    len)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
76	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length()  +  1;  index  +=  len)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.length()  +  1;  index  +=  len)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length()  +  1;  index  +=  len)  {	  for(int    index    =    0;    index    <    len.length();    index    +=    len)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
77	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  2  *  len)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  2  *  len)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length();  index  +=  2  *  len)  {	  for(int    index    =    0;    index    <    len.length();    index    +=    len)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
78	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  s.length();  index  +=  len)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  s.length();  index  +=  len)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  s.length();  index  +=  len)  {	  for(int    index    =    0;    index    <    len.length();    index    +=    len)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
79	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  length())  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  length())  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length();  index  +=  length())  {	  for(int    index    =    0;    index    <    len.length();    index    +=    len)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
80	[BUG]  [BUGGY]  For(int  index  =  0;  index  <  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  For(int  index  =  0;  index  <  len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	For(int  index  =  0;  index  <  len.length();  index++)  {	  for(int    index    =    0;    index    <    len.length()    -    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  int  index  =  0;  index  <  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  0;  index  <  len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  0;  index  <  len.length();  index++)  {	  for(int    index    =    0;    index    <    len.length()    -    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
82	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  <  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  <  len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length();  index  <  len.length();  index++)  {	  for(int    index    =    0;    index    <    len.length()    +    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
83	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  LENA.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  LENA.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  LENA.length();  index++)  {	  for(int    index    =    0;    index    <    len.length()    +    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('-',  len);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('-',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('-',  len);	  int    index    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
85	[BUG]  [BUGGY]  int  index  =  len.lastIndexOf('-');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  len.lastIndexOf('-');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  len.lastIndexOf('-');	  int    index    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
86	[BUG]  [BUGGY]  int  index  =  len.indexOf('-');  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  len.indexOf('-');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  len.indexOf('-');	  int    index    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
87	[BUG]  [BUGGY]  char  index  =  s.lastIndexOf('-');  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  index  =  s.lastIndexOf('-');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  index  =  s.lastIndexOf('-');	  int    index    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
88	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len.length()  -  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len.length()  -  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len.length()  -  1;  index++)  {	  for(int    index    =    1;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
89	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  HEX_CHARS.length();  index++)  {	  for(int    index    =    1;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
90	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len.length()  -  2;  index++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len.length()  -  2;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len.length()  -  2;  index++)  {	  for(int    index    =    1;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
91	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  s.length();  index++)  {	  for(int    index    =    1;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
92	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len.length()  +  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len.length()  +  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len.length()  +  1;  index++)  {	  for(int    index    =    1;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
93	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  Len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  Len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  Len.length();  index++)  {	  for(int    index    =    0;    index    <    len.length()    +    2;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
94	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  LEGN.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  LEGN.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  LEGN.length();  index++)  {	  for(int    index    =    0;    index    <    len.length()    +    2;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
95	[BUG]  [BUGGY]  for(int  index  =  2;  index  >=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  2;  index  >=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  2;  index  >=  len;  index++)  {	  for(int    index    =    1;    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
96	[BUG]  [BUGGY]  for(int  index  =  0;  index  >>  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  >>  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  >>  len;  index++)  {	  for(int    index    =    1;    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
97	[BUG]  [BUGGY]  char  index  =  s.indexOf('-');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  index  =  s.indexOf('-');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  index  =  s.indexOf('-');	  int    index    =    s.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
98	[BUG]  [BUGGY]  int  index  =  s.indexOf('-',  len)+  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('-',  len)+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('-',  len)+  1;	  int    index    =    s.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
99	[BUG]  [BUGGY]  int  index  =  s.indexOf('-',  len));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('-',  len));  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('-',  len));	  int    index    =    s.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
100	[BUG]  [BUGGY]  char  c  =  s.charAt(index  +  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  c  =  s.charAt(index  +  1);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  c  =  s.charAt(index  +  1);	  char    c    =    s.charAt(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
101	[BUG]  [BUGGY]  char  c  =  s.charAt(len);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  c  =  s.charAt(len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  c  =  s.charAt(len);	  char    c    =    s.charAt(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
102	[BUG]  [BUGGY]  char  c  =  s.charAt(index++);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  c  =  s.charAt(index++);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  c  =  s.charAt(index++);	  char    c    =    s.charAt(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
103	[BUG]  [BUGGY]  char  c  =  s.charAt(index  +  2);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  c  =  s.charAt(index  +  2);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  c  =  s.charAt(index  +  2);	  char    c    =    s.charAt(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
104	[BUG]  [BUGGY]  char  c  =  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  c  =  s.charAt(0);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  c  =  s.charAt(0);	  char    c    =    s.charAt(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
105	[BUG]  [BUGGY]  char  c  =  s.charAt(index  +  len);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  c  =  s.charAt(index  +  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  c  =  s.charAt(index  +  len);	  char    c    =    s.charAt(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
106	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  +  8;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len  +  8;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  +  8;  index++)  {	  for(int    index    =    0;    index    <    len    +    9;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
107	[BUG]  [BUGGY]  int  index  =  s.indexOf(':',  len);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf(':',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf(':',  len);	  int    index    =    s.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
108	[BUG]  [BUGGY]  int  index  =  len.indexOf(':');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  len.indexOf(':');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  len.indexOf(':');	  int    index    =    s.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
109	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf(':');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf(':');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf(':');	  int    index    =    s.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
110	[BUG]  [BUGGY]  char  index  =  s.indexOf(':');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  index  =  s.indexOf(':');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  index  =  s.indexOf(':');	  int    index    =    s.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
111	[BUG]  [BUGGY]  int  index  =  s.indexOf(':',  len)+  1;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf(':',  len)+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf(':',  len)+  1;	  int    index    =    s.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
112	[BUG]  [BUGGY]  int  index  =  s.indexOf(':',  len));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf(':',  len));  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf(':',  len));	  int    index    =    s.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
113	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len();  index++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len();  index++)  {	  for(int    index    =    0;    index    <    length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
114	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len();  index++)  {	  for(int    index    =    0;    index    <    length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
115	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  lens();  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  lens();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  lens();  index++)  {	  for(int    index    =    0;    index    <    length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
116	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len(0);  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len(0);  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len(0);  index++)  {	  for(int    index    =    0;    index    <    length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
117	[BUG]  [BUGGY]  for(int  index  =  0;  index  >=  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  >=  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  >=  s.length();  index++)  {	  for(int    index    =    0;    index    <    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
118	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  +  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len  +  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  +  s.length();  index++)  {	  for(int    index    =    0;    index    <    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
119	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length()  +  1;  index  >=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length()  +  1;  index  >=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length()  +  1;  index  >=  len;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index!=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
120	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  ==  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  ==  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length();  index  ==  len;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index!=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
121	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length()  *  2;  index  >=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length()  *  2;  index  >=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length()  *  2;  index  >=  len;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index!=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
122	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length()  +  1;  index!=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length()  +  1;  index!=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length()  +  1;  index!=  len;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index!=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
123	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  &&  index  <=  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len  &&  index  <=  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  &&  index  <=  s.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <=    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
124	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  s.length()  &&  index  <=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  s.length()  &&  index  <=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  s.length()  &&  index  <=  len;  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <=    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
125	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length  &&  index  <=  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length  &&  index  <=  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  HEX_CHARS.length  &&  index  <=  s.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <=    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
126	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  ||  index  <=  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  ||  index  <=  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  ||  index  <=  s.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <=    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
127	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  ==  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  ==  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  &&  index  ==  s.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <=    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
128	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  +  2;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  +  2;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  +  2;  index++)  {	  for(int    index    =    1;    index    <    len    +    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
129	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  +  3;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  +  3;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  +  3;  index++)  {	  for(int    index    =    1;    index    <    len    +    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
130	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  +  5;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  +  5;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  +  5;  index++)  {	  for(int    index    =    1;    index    <    len    +    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
131	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  +  6;  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  +  6;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  +  6;  index++)  {	  for(int    index    =    1;    index    <    len    +    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
132	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  +  4;  index++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  +  4;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  +  4;  index++)  {	  for(int    index    =    1;    index    <    len    +    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
133	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length()  +  2;  index  >=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length()  +  2;  index  >=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length()  +  2;  index  >=  len;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
134	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  len  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0',  len  +  1);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  len  +  1);	  int    index    =    s.indexOf('0',    len);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
135	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  len  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0',  len  -  1);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  len  -  1);	  int    index    =    s.indexOf('0',    len);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
136	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('0',  len);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('0',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('0',  len);	  int    index    =    s.indexOf('0',    len);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
137	[BUG]  [BUGGY]  char  index  =  s.indexOf('0',  len);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  index  =  s.indexOf('0',  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  index  =  s.indexOf('0',  len);	  int    index    =    s.indexOf('0',    len);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
138	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  len  *  2);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0',  len  *  2);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  len  *  2);	  int    index    =    s.indexOf('0',    len);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
139	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  len  +  2);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0',  len  +  2);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  len  +  2);	  int    index    =    s.indexOf('0',    len);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
140	[BUG]  [BUGGY]  for(int  index  =  0;  index  ==  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  ==  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  ==  len;  index++)  {	  for(int    index    =    0;    index!=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
141	[BUG]  [BUGGY]  for(int  index  =  1;  index  >=  len  &&  index  <  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  >=  len  &&  index  <  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  >=  len  &&  index  <  s.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
142	[BUG]  [BUGGY]  int  index  =  s.indexOf('#'  +  len);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('#'  +  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('#'  +  len);	  int    index    =    s.indexOf('#');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
143	[BUG]  [BUGGY]  int  index  =  s.indexOf('-'  +  len);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('-'  +  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('-'  +  len);	  int    index    =    s.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
144	[BUG]  [BUGGY]  char  c  =  s.charAt(len;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  c  =  s.charAt(len;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  c  =  s.charAt(len;	  char    c    =    s.charAt(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
145	[BUG]  [BUGGY]  char  c  =  s.charAt(len  +  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  c  =  s.charAt(len  +  1);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  c  =  s.charAt(len  +  1);	  char    c    =    s.charAt(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
146	[BUG]  [BUGGY]  int  index  =  s.indexOf('n',  len  -  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('n',  len  -  1);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('n',  len  -  1);	  int    index    =    s.indexOf('n',    len);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
147	[BUG]  [BUGGY]  int  index  =  s.indexOf('n',  -1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('n',  -1);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('n',  -1);	  int    index    =    s.indexOf('n',    len);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
148	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  HEX_CHARS.size();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  HEX_CHARS.size();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  HEX_CHARS.size();  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
149	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  ESCAPED_JS_STRINGS.size();  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  ESCAPED_JS_STRINGS.size();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  ESCAPED_JS_STRINGS.size();  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
150	[BUG]  [BUGGY]  for(int  index  =  0;  index  >=  len.size();  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  >=  len.size();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  >=  len.size();  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
151	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len.size();  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len.size();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len.size();  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
152	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  len)-  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0',  len)-  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  len)-  1;	  int    index    =    s.indexOf('0',    len);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
153	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0',  0);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  0);	  int    index    =    s.indexOf('0',    len);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
154	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  >=  len  +  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  >=  len  +  1;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length();  index  >=  len  +  1;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
155	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  >>  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  >>  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length();  index  >>  len;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
156	[BUG]  [BUGGY]  For(int  index  =  0;  index  <  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  For(int  index  =  0;  index  <  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	For(int  index  =  0;  index  <  len;  index++)  {	  for(int    index    =    2;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
157	[BUG]  [BUGGY]  int  index  =  s.indexOf(':'  +  len);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf(':'  +  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf(':'  +  len);	  int    index    =    s.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
158	[BUG]  [BUGGY]  int  index  =  s.indexOf('0'  +  len);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0'  +  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0'  +  len);	  int    index    =    s.indexOf('0');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
159	[BUG]  [BUGGY]  int  index  =  s.indexOf('0')+  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0')+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0')+  1;	  int    index    =    s.indexOf('0');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
160	[BUG]  [BUGGY]  int  index  =  s.indexOf('.')+  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('.')+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('.')+  1;	  int    index    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
161	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('.'  +  len);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('.'  +  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('.'  +  len);	  int    index    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
162	[BUG]  [BUGGY]  int  index  =  s.indexOf('+'  +  len);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('+'  +  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('+'  +  len);	  int    index    =    s.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
163	[BUG]  [BUGGY]  for(int  index  =  2;  index  <  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  2;  index  <  len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  2;  index  <  len.length();  index++)  {	  for(int    index    =    1;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
164	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  HEX_CHARS.length;  index  <  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  HEX_CHARS.length;  index  <  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  HEX_CHARS.length;  index  <  len;  index++)  {	  for(int    index    =    1;    index    <    HEX_CHARS.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
165	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  length();  index++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  length();  index++)  {	  for(int    index    =    0;    index    <    length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
166	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  s.length())  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  s.length())  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length();  index  +=  s.length())  {	  for(int    index    =    0;    index    <    len.length();    index    +=    len)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
167	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  HEX_CHARS.length();  index  +=  len)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  HEX_CHARS.length();  index  +=  len)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  HEX_CHARS.length();  index  +=  len)  {	  for(int    index    =    0;    index    <    len.length();    index    +=    len)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
168	[BUG]  [BUGGY]  int  index  =  s.indexOf('-')+  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('-')+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('-')+  1;	  int    index    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
169	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('-'  +  len);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('-'  +  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('-'  +  len);	  int    index    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
170	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  s.length()  &&  index  <=  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  s.length()  &&  index  <=  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  s.length()  &&  index  <=  s.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <=    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
171	[BUG]  [BUGGY]  int  index  =  s.indexOf(':')+  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf(':')+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf(':')+  1;	  int    index    =    s.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
172	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  +  11;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len  +  11;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  +  11;  index++)  {	  for(int    index    =    0;    index    <    len    +    9;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
173	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  +  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  +  s.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  +  s.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <=    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
174	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  <  str.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  <  str.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  &&  index  <  str.length();  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <=    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
175	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.lastIndexOf('.');  index  >=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.lastIndexOf('.');  index  >=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.lastIndexOf('.');  index  >=  len;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
176	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.indexOf(':');  index  >=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.indexOf(':');  index  >=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.indexOf(':');  index  >=  len;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
177	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.lastIndexOf('.'));  index  >=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.lastIndexOf('.'));  index  >=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.lastIndexOf('.'));  index  >=  len;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
178	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.indexOf(',');  index  >=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0,  len  =  s.indexOf(',');  index  >=  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.indexOf(',');  index  >=  len;  index++)  {	  for(int    index    =    0,    len    =    s.length();    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
179	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  LEN.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  LEN.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  LEN.length();  index++)  {	  for(int    index    =    0;    index    <    len.length()    +    1;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
180	[BUG]  [BUGGY]  int  index  =  s.indexOf('n',  '-');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('n',  '-');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('n',  '-');	  int    index    =    s.indexOf('n',    len);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
181	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  &&  isSimpleNumber(s.length());  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  len  &&  isSimpleNumber(s.length());  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  &&  isSimpleNumber(s.length());  index++)  {	  for(int    index    =    1;    index    <    len    &&    index    <    s.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
182	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('-')+  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('-')+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('-')+  1;	  int    index    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
183	[BUG]  [BUGGY]  int  index  =  s.indexOf('/');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('/');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('/');	  int    index    =    s.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
184	[BUG]  [BUGGY]  for(int  index  =  1  <  <  len;  index  <  HEX_CHARS.length;  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1  <  <  len;  index  <  HEX_CHARS.length;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1  <  <  len;  index  <  HEX_CHARS.length;  index++)  {	  for(int    index    =    1;    index    <    HEX_CHARS.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
185	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length  -  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length  -  len;  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  HEX_CHARS.length  -  len;  index++)  {	  for(int    index    =    1;    index    <    HEX_CHARS.length;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
186	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  len);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  len);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length();  index  +=  len);	  for(int    index    =    0;    index    <    len.length();    index    +=    len)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
187	[BUG]  [BUGGY]  FOR(int  index  =  0;  index  <  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  FOR(int  index  =  0;  index  <  len.length();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	FOR(int  index  =  0;  index  <  len.length();  index++)  {	  for(int    index    =    0;    index    <    len.length()    +    2;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
188	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  '-');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0',  '-');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  '-');	  int    index    =    s.indexOf('0',    len);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
189	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  '9');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('0',  '9');  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  '9');	  int    index    =    s.indexOf('0',    len);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
190	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  str.indexOf(s);  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  str.indexOf(s);  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  str.indexOf(s);  index++)  {	  for(int    index    =    0;    index    <    str.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
191	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  str.size();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  str.size();  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  str.size();  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
192	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.indexOf(s);  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  for(int  index  =  0;  index  <  len.indexOf(s);  index++)  {  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.indexOf(s);  index++)  {	  for(int    index    =    0;    index    <    len.size();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
193	[BUG]  [BUGGY]  int  index  =  s.indexOf('#')+  1;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('#')+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('#')+  1;	  int    index    =    s.indexOf('#');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
194	[BUG]  [BUGGY]  int  index  =  s.indexOf('+')+  1;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.indexOf('+')+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('+')+  1;	  int    index    =    s.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
195	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('.')+  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  int  index  =  s.lastIndexOf('.')+  1;  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('.')+  1;	  int    index    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
196	[BUG]  [BUGGY]  char  c  =  s.charAt(index  *  2);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();      [BUGGY]  char  c  =  s.charAt(index  *  2);  [BUGGY]      char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  c  =  s.charAt(index  *  2);	  char    c    =    s.charAt(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
