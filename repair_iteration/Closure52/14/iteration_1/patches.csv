bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  +  3;  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len  +  3;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  +  3;  index++)  {	  for(int    index    =    0;    index    <    len    +    2;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  +  9;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len  +  9;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  +  9;  index++)  {	  for(int    index    =    0;    index    <    len    +    2;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  +  4;  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len  +  4;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  +  4;  index++)  {	  for(int    index    =    0;    index    <    len    +    2;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  +  6;  index++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len  +  6;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  +  6;  index++)  {	  for(int    index    =    0;    index    <    len    +    2;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len  +  5;  index++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len  +  5;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len  +  5;  index++)  {	  for(int    index    =    0;    index    <    len    +    2;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length()  -  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len.length()  -  1;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length()  -  1;  index++)  {	  for(int    index    =    0;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length()  +  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len.length()  +  1;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length()  +  1;  index++)  {	  for(int    index    =    0;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length()  -  2;  index++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len.length()  -  2;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length()  -  2;  index++)  {	  for(int    index    =    0;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length()  +  2;  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len.length()  +  2;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length()  +  2;  index++)  {	  for(int    index    =    0;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  1;  index  <  len.length();  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len.length();  index++)  {	  for(int    index    =    0;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  int  index  =  s.indexOf('0');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  int  index  =  s.indexOf('0');  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0');	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  int  index  =  s.indexOf('0',  len);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  int  index  =  s.indexOf('0',  len);  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('0',  len);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  int  index  =  s.indexOf('-');  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  int  index  =  s.indexOf('-');  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('-');	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  int  index  =  s.lastIndexOf('.');  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('.');	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  char  c  =  s.charAt(index);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  char  c  =  s.charAt(index);  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	char  c  =  s.charAt(index);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  int  index  =  s.indexOf('#');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  int  index  =  s.indexOf('#');  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('#');	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  int  index  =  s.indexOf('+');  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  int  index  =  s.indexOf('+');  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('+');	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length;  index++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  1;  index  <  HEX_CHARS.length;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  HEX_CHARS.length;  index++)  {	  for(int    index    =    1;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  +  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  1;  index  <  len  +  1;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  +  1;  index++)  {	  for(int    index    =    1;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  -  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  1;  index  <  len  -  1;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  -  1;  index++)  {	  for(int    index    =    1;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  for(int  index  =  1;  index  >=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  1;  index  >=  len;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  >=  len;  index++)  {	  for(int    index    =    1;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  <  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  <  s.length();  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  &&  index  <  s.length();  index++)  {	  for(int    index    =    1;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  >=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0,  len  =  s.length();  index  >=  len;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length();  index  >=  len;  index++)  {	  for(int    index    =    0;    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  for(int  index  =  0;  index!=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index!=  len;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index!=  len;  index++)  {	  for(int    index    =    0;    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  for(int  index  =  0,  len  =  s.length();  index!=  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0,  len  =  s.length();  index!=  len;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0,  len  =  s.length();  index!=  len;  index++)  {	  for(int    index    =    0;    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  for(int  index  =  0;  index  >=  len  +  1;  index++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  >=  len  +  1;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  >=  len  +  1;  index++)  {	  for(int    index    =    0;    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  for(int  index  =  0;  index  >=  len.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  >=  len.length();  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  >=  len.length();  index++)  {	  for(int    index    =    0;    index    >=    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  s.length();  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  s.length();  index++)  {	  for(int    index    =    0;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.size();  index++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len.size();  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.size();  index++)  {	  for(int    index    =    0;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  int  index  =  s.indexOf(':');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  int  index  =  s.indexOf(':');  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf(':');	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  int  index  =  s.indexOf('n',  len);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  int  index  =  s.indexOf('n',  len);  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('n',  len);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  int  index  =  s.lastIndexOf('-');  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  int  index  =  s.lastIndexOf('-');  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.lastIndexOf('-');	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  int  index  =  s.indexOf('n');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  int  index  =  s.indexOf('n');  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	int  index  =  s.indexOf('n');	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  s.length;  index++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  1;  index  <  s.length;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  s.length;  index++)  {	  for(int    index    =    1;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  <=  s.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  1;  index  <  len  &&  index  <=  s.length();  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  1;  index  <  len  &&  index  <=  s.length();  index++)  {	  for(int    index    =    1;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  for(int  index  =  2;  index  <  len;  index++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  2;  index  <  len;  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  2;  index  <  len;  index++)  {	  for(int    index    =    1;    index    <    len;    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  length();  index++)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  length();  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  length();  index++)  {	  for(int    index    =    0;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  str.length();  index++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  str.length();  index++)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  str.length();  index++)  {	  for(int    index    =    0;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  len)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  isSimpleNumber(String  s)  {  int  len  =  s.length();    [BUGGY]  for(int  index  =  0;  index  <  len.length();  index  +=  len)  {  [BUGGY]    char  c  =  s.charAt(index);  if  (c  <  '0'  ||  c  >  '9')  {  return  false;  }  }  return  len  >  0;  }  [CLASS]  CodeGenerator  Context  [METHOD]  isSimpleNumber  [RETURN_TYPE]  boolean  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  char  c  CodeConsumer  cc  consumer  String  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  index  len  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.3333333333333333	739	739	1	replace	for(int  index  =  0;  index  <  len.length();  index  +=  len)  {	  for(int    index    =    0;    index    <    len.length();    index++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
