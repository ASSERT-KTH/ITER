bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  context);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  context);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	add(n,  minPrecedence,  Context.OTHER,  context);	  add(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	add(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE);	  add(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  add(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  add(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	add(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);	  add(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	add(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR);	  add(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  0);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	add(n,  minPrecedence,  Context.OTHER,  0);	  add(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  PRESERVE_BLOCK);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  PRESERVE_BLOCK);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  PRESERVE_BLOCK);	  addExpr(n,    minPrecedence,    Context.OTHER,    IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR_EXPR);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR_EXPR);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR_EXPR);	  addExpr(n,    minPrecedence,    Context.OTHER,    IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER,    IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  STATEMENT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  STATEMENT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  STATEMENT);	  addExpr(n,    minPrecedence,    Context.OTHER,    IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  IN_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER,    CONSTRUCTOR);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	cc.addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR);	  addExpr(n,    minPrecedence,    Context.OTHER,    CONSTRUCTOR);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  context);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  context);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  context);	  addExpr(n,    minPrecedence,    Context.OTHER,    CONSTRUCTOR);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  DEFAULT);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  DEFAULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  DEFAULT);	  addExpr(n,    minPrecedence,    Context.OTHER,    CONSTRUCTOR);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  DEFAULT);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  DEFAULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  DEFAULT);	  addExpr(n,    minPrecedence,    Context.OTHER,    CONSTRUCTOR);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  &&  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  &&  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  &&  n.getType()  ==  Token.EXPR_RESULT);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()!=  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()!=  Token.EXPR_RESULT);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  context.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  context.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  context.getType()  ==  Token.EXPR_RESULT);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT));	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  >=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  >=  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  >=  Token.EXPR_RESULT);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONTEXT);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONTEXT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONTEXT);	  addExpr(n,    minPrecedence,    Context.OTHER,    context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  DEFAULT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  DEFAULT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  DEFAULT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER,    context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  cc,  CONSTRUCTOR);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  cc,  CONSTRUCTOR);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  cc,  CONSTRUCTOR);	  addExpr(n,    minPrecedence,    Context.OTHER,    cc);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  addExpr(cc,  minPrecedence,  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(cc,  minPrecedence,  Context.OTHER);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(cc,  minPrecedence,  Context.OTHER);	  addExpr(n,    minPrecedence,    Context.OTHER,    cc);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	NodeTraversal.traverse(compiler,  n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  addExpr(n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addExpr(n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  cc  =  Context.getCurrentContext();  addExpr(n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  cc  =  Context.getCurrentContext();  addExpr(n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  addExpr(n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  addExpr(n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  addExpr(n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  Context  cc  =  getContext();  addExpr(n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  cc  =  getContext();  addExpr(n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  cc  =  getContext();  addExpr(n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cc.addExpr(n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  cc  =  Context.getCurrentContext();  cc.addExpr(n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  cc  =  Context.getCurrentContext();  cc.addExpr(n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  Context  cc  =  getContext();  addExpr(n,  minPrecedence,  cc);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  cc  =  getContext();  addExpr(n,  minPrecedence,  cc);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  cc  =  getContext();  addExpr(n,  minPrecedence,  cc);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	cc.addExpr(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE);	  cc.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  context);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  context);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	cc.addExpr(n,  minPrecedence,  Context.OTHER,  context);	  cc.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUTION);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUTION);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	cc.addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUTION);	  cc.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  &&  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  &&  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  &&  Context.IN_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	cc.addExpr(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE  +  1);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  context.IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  context.IN_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE,  CONSTRUCTOR);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE,  CONSTRUCTOR);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE,  CONSTRUCTOR);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  &&  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  &&  n.getType()  ==  Token.GETPROP);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  &&  n.getType()  ==  Token.GETPROP);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()!=  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()!=  Token.GETPROP);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()!=  Token.GETPROP);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  n.getType()  ==  Token.GETPROP);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  n.getType()  ==  Token.GETPROP);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  context.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  context.getType()  ==  Token.GETPROP);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  context.getType()  ==  Token.GETPROP);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  addExpr(n,  minPrecedence  -  1,  Context.OTHER  ||  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence  -  1,  Context.OTHER  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence  -  1,  Context.OTHER  ||  n.getType()  ==  Token.GETPROP);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  >=  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  >=  Token.GETPROP);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  >=  Token.GETPROP);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  Context.addExpr(n,  minPrecedence,  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context.addExpr(n,  minPrecedence,  Context.OTHER);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context.addExpr(n,  minPrecedence,  Context.OTHER);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.addExpr(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER,  context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER,  context);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.addExpr(n,  minPrecedence,  Context.OTHER,  context);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.NAME);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.NAME);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  1);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  1);	  addExpr(n,    minPrecedence,    Context.OTHER,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  2);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  2);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  2);	  addExpr(n,    minPrecedence,    Context.OTHER,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  3);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  3);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  3);	  addExpr(n,    minPrecedence,    Context.OTHER,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  0,  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  0,  0);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  0,  0);	  addExpr(n,    minPrecedence,    Context.OTHER,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  0,  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  0,  1);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  0,  1);	  addExpr(n,    minPrecedence,    Context.OTHER,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  4);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  4);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  4);	  addExpr(n,    minPrecedence,    Context.OTHER,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER_EXPR  +  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER_EXPR  +  1);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER_EXPR  +  1);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  Context.EXPR_RESULT);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.DECEMBER  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.DECEMBER  +  1);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  Context.DECEMBER  +  1);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  +  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  +  2);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  +  2);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER  +  1);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	cc.addExpr(n,  minPrecedence,  Context.OTHER  +  1);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER_OF_EXPR);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER_OF_EXPR);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  Context.IN_FOR_INIT_CLAUSE  +  1);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER_EXPR);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER_EXPR);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUTION);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUTION);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUTION);	  addExpr(n,    minPrecedence,    Context.OTHER,    IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUTION_BLOCK);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUTION_BLOCK);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUTION_BLOCK);	  addExpr(n,    minPrecedence,    Context.OTHER,    IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE  +  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  IN_FOR_INIT_CLAUSE  +  1);	  addExpr(n,    minPrecedence,    Context.OTHER,    IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  rhsContext.addExpr(n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  rhsContext.addExpr(n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  rhsContext  =  Context.getCurrentContext();  rhsContext.addExpr(n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(n,  minPrecedence);  addExpr(rhsContext,  n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  rhsContext  =  Context.createContext(n,  minPrecedence);  addExpr(rhsContext,  n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  rhsContext  =  Context.createContext(n,  minPrecedence);  addExpr(rhsContext,  n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
71	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addExpr(n,  minPrecedence,  cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  cc  =  Context.getCurrentContext();  addExpr(n,  minPrecedence,  cc);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  cc  =  Context.getCurrentContext();  addExpr(n,  minPrecedence,  cc);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(n);  addExpr(rhsContext,  n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  rhsContext  =  Context.createContext(n);  addExpr(rhsContext,  n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  rhsContext  =  Context.createContext(n);  addExpr(rhsContext,  n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  addExpr(n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  addExpr(n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  rhsContext  =  Context.getCurrentContext();  addExpr(n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
74	[BUG]  [BUGGY]  addExpr(n,  minPrecedence  -  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence  -  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence  -  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  addExpr(n,  minPrecedence  -  1,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence  -  1,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence  -  1,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  add(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  add(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	add(n,  minPrecedence,  Context.OTHER  ||  Context.IN_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
77	[BUG]  [BUGGY]  addExpr(n,  minPrecedence  &  Context.OTHER  ||  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence  &  Context.OTHER  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence  &  Context.OTHER  ||  n.getType()  ==  Token.GETPROP);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
78	[BUG]  [BUGGY]  add(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  add(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	add(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.GETPROP);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.GETELEM);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.GETELEM);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.GETELEM);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  cc,  IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  cc,  IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  cc,  IN_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER,    cc);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
81	[BUG]  [BUGGY]  addExpr(cc,  minPrecedence,  Context.OTHER,  n);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(cc,  minPrecedence,  Context.OTHER,  n);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(cc,  minPrecedence,  Context.OTHER,  n);	  addExpr(n,    minPrecedence,    Context.OTHER,    cc);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
82	[BUG]  [BUGGY]  conn.add(n,  minPrecedence,  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.add(n,  minPrecedence,  Context.OTHER);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.add(n,  minPrecedence,  Context.OTHER);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
83	[BUG]  [BUGGY]  conn.addExpr(n,  minPrecedence  -  1,  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.addExpr(n,  minPrecedence  -  1,  Context.OTHER);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.addExpr(n,  minPrecedence  -  1,  Context.OTHER);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
84	[BUG]  [BUGGY]  conn.addValue(n,  minPrecedence,  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.addValue(n,  minPrecedence,  Context.OTHER);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.addValue(n,  minPrecedence,  Context.OTHER);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
85	[BUG]  [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.addExpr(n,  minPrecedence,  Context.OTHER  +  1);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.addExpr(n,  minPrecedence,  Context.OTHER  +  1);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  conn.addChildToFront(n,  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.addChildToFront(n,  Context.OTHER);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.addChildToFront(n,  Context.OTHER);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
87	[BUG]  [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  CONTINUTION);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  CONTINUTION);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	add(n,  minPrecedence,  Context.OTHER,  CONTINUTION);	  add(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
88	[BUG]  [BUGGY]  addExpr(n,  minPrecedence  -  1,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence  -  1,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence  -  1,  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
89	[BUG]  [BUGGY]  addExpr(n,  minPrecedence  &  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence  &  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence  &  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
90	[BUG]  [BUGGY]  addExpr(n,  minPrecedence  -  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence  -  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence  -  Context.OTHER  ||  n.getType()  ==  Token.EXPR_RESULT);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
91	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  0);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR,  0);	  addExpr(n,    minPrecedence,    Context.OTHER,    CONSTRUCTOR);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
92	[BUG]  [BUGGY]  cc.addExpr(n,  minPrecedence  -  1,  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  cc.addExpr(n,  minPrecedence  -  1,  Context.OTHER);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	cc.addExpr(n,  minPrecedence  -  1,  Context.OTHER);	  cc.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
93	[BUG]  [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER)+  1;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER)+  1;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	cc.addExpr(n,  minPrecedence,  Context.OTHER)+  1;	  cc.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
94	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getFirstChild().getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getFirstChild().getType()  ==  Token.GETPROP);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getFirstChild().getType()  ==  Token.GETPROP);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
95	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.GETPROP;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.GETPROP;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER  ||  n.getType()  ==  Token.GETPROP;	  addExpr(n,    minPrecedence,    Context.OTHER    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
96	[BUG]  [BUGGY]  addExpr(n,  cc,  Context.OTHER,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  cc,  Context.OTHER,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  cc,  Context.OTHER,  minPrecedence);	  addExpr(n,    minPrecedence,    Context.OTHER,    cc);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
97	[BUG]  [BUGGY]  addExpr(n,  Context.OTHER,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  Context.OTHER,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  Context.OTHER,  minPrecedence);	  addExpr(n,    minPrecedence,    Context.OTHER,    cc);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
98	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  cc,  CONCLUSIVE_BLOCK);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  cc,  CONCLUSIVE_BLOCK);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  cc,  CONCLUSIVE_BLOCK);	  addExpr(n,    minPrecedence,    Context.OTHER,    cc);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
99	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.STATEMENT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  Context.STATEMENT);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
100	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  Context.IN_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
101	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.NEW);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  Context.NEW);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  Context.NEW);	  addExpr(n,    minPrecedence,    Context.OTHER    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
102	[BUG]  [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  0);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  0);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	cc.addExpr(n,  minPrecedence,  Context.OTHER,  0);	  addExpr(n,    minPrecedence,    Context.OTHER,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
103	[BUG]  [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  CONCLUSIVE_BLOCK);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  cc.addExpr(n,  minPrecedence,  Context.OTHER,  CONCLUSIVE_BLOCK);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	cc.addExpr(n,  minPrecedence,  Context.OTHER,  CONCLUSIVE_BLOCK);	  cc.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
104	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context.checkState(n.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
105	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addExpr(cc,  n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  cc  =  Context.getCurrentContext();  addExpr(cc,  n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  cc  =  Context.getCurrentContext();  addExpr(cc,  n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
106	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(n);  addExpr(cc,  n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  cc  =  Context.createChildObjectContext(n);  addExpr(cc,  n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  cc  =  Context.createChildObjectContext(n);  addExpr(cc,  n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
107	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(n,  minPrecedence);  addExpr(cc,  n,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  cc  =  Context.createChildObjectContext(n,  minPrecedence);  addExpr(cc,  n,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  cc  =  Context.createChildObjectContext(n,  minPrecedence);  addExpr(cc,  n,  minPrecedence);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
108	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addExpr(n,  cc);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  Context  cc  =  Context.getCurrentContext();  addExpr(n,  cc);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	Context  cc  =  Context.getCurrentContext();  addExpr(n,  cc);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
109	[BUG]  [BUGGY]  add(n,  Context.OTHER,  minPrecedence);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  add(n,  Context.OTHER,  minPrecedence);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	add(n,  Context.OTHER,  minPrecedence);	  add(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
110	[BUG]  [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  cc);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  add(n,  minPrecedence,  Context.OTHER,  cc);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	add(n,  minPrecedence,  Context.OTHER,  cc);	  add(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
111	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.IN_FOR_INIT_CLAUSE);	  addExpr(n,    minPrecedence,    Context.OTHER    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
112	[BUG]  [BUGGY]  conn.add(n,  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  conn.add(n,  Context.OTHER);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	conn.add(n,  Context.OTHER);	  conn.addExpr(n,    minPrecedence,    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
113	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONCLUSIVE_BLOCK);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONCLUSIVE_BLOCK);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONCLUSIVE_BLOCK);	  addExpr(n,    minPrecedence,    Context.OTHER,    IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
114	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR_OF_EXPR);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONSTRUCTOR_OF_EXPR);	  addExpr(n,    minPrecedence,    Context.OTHER,    IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
115	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUOUS);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUOUS);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONTINUOUS);	  addExpr(n,    minPrecedence,    Context.OTHER,    IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
116	[BUG]  [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONTEXT_BLOCK);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addExpr(Node  n,  int  minPrecedence)  {    [BUGGY]  addExpr(n,  minPrecedence,  Context.OTHER,  CONTEXT_BLOCK);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addExpr  [RETURN_TYPE]  void  Node  n  int  minPrecedence  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  Node  n  CodeConsumer  cc  consumer  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	875	875	1	replace	addExpr(n,  minPrecedence,  Context.OTHER,  CONTEXT_BLOCK);	  addExpr(n,    minPrecedence,    Context.OTHER,    context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
