bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR  ||  context!=  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR  ||  context!=  Context.START_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  (context  ==  Context.START_OF_EXPR  ||  context!=  Context.START_OF_EXPR);	  boolean    needsParens    =    (context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  (context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =    (context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  boolean  needsParens  =  (context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  (context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  (context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =    (context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.START_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.START_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Node  first  =  n.getFirstChild();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  n.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Preconditions.checkState(childCount  ==  1);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  ==  1);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  Context  cc  =  context.getContext();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Context  cc  =  context.getContext();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  context.getContext();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  Node  first  =  n.getNext();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Node  first  =  n.getNext();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  n.getNext();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  Node  first  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Node  first  =  n.getLastChild();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  n.getLastChild();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Context  cc  =  context.getCurrentContext();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  context.getCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Context.checkState(childCount  ==  1);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount  ==  1);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  boolean  needsParens  =(n  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(n  ==  Context.END_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  boolean  needsParens  =(n!=  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(n!=  Context.START_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n!=  Context.START_OF_EXPR);	  boolean    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context!=  Context.END_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.END_OF_EXPR);	  boolean    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.STATEMENT);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.STATEMENT;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.STATEMENT;	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context.hasChildren();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_OBJECTLIT;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.START_OF_OBJECTLIT;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  context!=  Context.START_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.START_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  context  ==  Context.END_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context.hasChildren();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.hasChildren();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.hasChildren();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.hasChildren();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.hasChildren();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.hasChildren();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.hasChildren();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.next();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.next();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.next();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  >  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  >  1;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  >  1;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT);	  boolean    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.END_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.END_OF_OBJECTLIT;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.END_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =    (context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.STATEMENT;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
49	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  context!=  Context.END_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.END_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
50	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.EMPTY);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.EMPTY);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.EMPTY);	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OTHER);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OTHER);	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  BEFORE_DANGLING_ELSE;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  BEFORE_DANGLING_ELSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.FIELD_NAME);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_ELSE;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_ELSE;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_ELSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_CLAUSE;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_CLAUSE;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_CLAUSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Preconditions.checkState(childCount  ==  2);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  ==  2);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.getCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Context  rhsContext  =  Context.createContext(context);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createContext(context);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Preconditions.checkState(childCount  ==  0);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  ==  0);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT;  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.STATEMENT;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
66	[BUG]  [BUGGY]  int  needsParens  =(context!=  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  int  needsParens  =(context!=  Context.START_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context!=  Context.START_OF_EXPR);	  boolean    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
67	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
68	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isExpressionNode(n);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isExpressionNode(n);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isExpressionNode(n);	  boolean    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Context  cc  =  getCurrentContext();  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {    [BUGGY]  Context.checkState(childCount  ==  2);  [BUGGY]    if  (needsParens)  {  add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount  ==  2);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
