bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  Boolean  needsParens  =  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
4	[BUG]  [BUGGY]  boolean  needsParens  =(first  ==  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(first  ==  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(first  ==  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    first.getType()    ==    Token.STRING;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
5	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getFirstChild().getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getFirstChild().getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getFirstChild().getType()  ==  Token.STRING;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    first.getType()    ==    Token.STRING;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
6	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  first.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  first.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)||  first.getType()  ==  Token.STRING;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    first.getType()    ==    Token.STRING;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
7	[BUG]  [BUGGY]  boolean  needsParens  =(first!=  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(first!=  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(first!=  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    first.getType()    ==    Token.STRING;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
8	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getType()!=  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getType()!=  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getType()!=  Token.STRING;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    first.getType()    ==    Token.STRING;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getString()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getString()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getString()  ==  Token.STRING;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    first.getType()    ==    Token.STRING;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2  -  childCount);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount  ==  2  -  childCount);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  ==  2  -  childCount);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount  ==  3);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  ==  3);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2  -  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount  ==  2  -  1);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  ==  2  -  1);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(childCount!=  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount!=  2);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount!=  2);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
15	[BUG]  [BUGGY]  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR  ||  context!=  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR  ||  context!=  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  (context  ==  Context.START_OF_EXPR  ||  context!=  Context.END_OF_EXPR);	  boolean    needsParens    =    (context    ==    Context.START_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  boolean  needsParens  =  (context  ==  Context.END_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  (context  ==  Context.END_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  (context  ==  Context.END_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =    (context    ==    Context.START_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  boolean  needsParens  =  (context!=  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  (context!=  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  (context!=  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =    (context    ==    Context.START_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isFunctionDeclaration(n);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isFunctionDeclaration(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isFunctionDeclaration(n);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
19	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isObjectLitKey(n);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isObjectLitKey(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isObjectLitKey(n);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
20	[BUG]  [BUGGY]  boolean  needsParens  =(n  ==  Context.STATEMENT)&&  NodeUtil.isExpressionNode(context);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n  ==  Context.STATEMENT)&&  NodeUtil.isExpressionNode(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n  ==  Context.STATEMENT)&&  NodeUtil.isExpressionNode(context);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
21	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  NodeUtil.isExpressionNode(n);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  NodeUtil.isExpressionNode(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)||  NodeUtil.isExpressionNode(n);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
22	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isExpressionNode(n,  context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isExpressionNode(n,  context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isExpressionNode(n,  context);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
23	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isVarDeclaration(n);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isVarDeclaration(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isVarDeclaration(n);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
24	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_ELSE;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_ELSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
25	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_ELSE;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_ELSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
26	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_ELSE;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_ELSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
27	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_ELSE;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_ELSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
28	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_ELSE;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_ELSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
29	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_CLAUSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_CLAUSE;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
30	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_CLAUSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_CLAUSE;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
31	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_CLAUSE)&&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_CLAUSE)&&  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_CLAUSE)&&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_CLAUSE;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
32	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_CLAUSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_CLAUSE;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
33	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_CLAUSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_CLAUSE;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
34	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  parent.hasChildren();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  parent.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  parent.hasChildren();	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
35	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.END_OF_EXPR)&&  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.END_OF_EXPR)&&  context.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.END_OF_EXPR)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
36	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  first.hasChildren();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  first.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  first.hasChildren();	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
37	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.next();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.next();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.next();	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
38	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.getType()  ==  Token.STRING;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(childCount!=  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount!=  1);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount!=  1);	  Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(childCount  >=  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount  >=  1);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  >=  1);	  Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_OBJECTLIT;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
42	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.STATEMENT;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
43	[BUG]  [BUGGY]  int  needsParens  =  n  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  n  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  n  ==  Context.START_OF_EXPR;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
44	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_CONTEXT;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_CONTEXT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_CONTEXT;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
45	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_CONST;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_CONST;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_CONST;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
46	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.STATEMENT;	  boolean    needsParens    =(context    ==    Context.STATEMENT)||    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
47	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context!=  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context!=  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context!=  Context.STATEMENT;	  boolean    needsParens    =(context    ==    Context.STATEMENT)||    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
48	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context!=  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context!=  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)||  context!=  Context.STATEMENT;	  boolean    needsParens    =(context    ==    Context.STATEMENT)||    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
49	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  context  ==  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT)&&  context  ==  Context.STATEMENT;	  boolean    needsParens    =(context    ==    Context.STATEMENT)||    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
50	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT;	  boolean    needsParens    =(context    ==    Context.STATEMENT)||    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
51	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.getChildCount()  >  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.getChildCount()  >  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.getChildCount()  >  1;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.getChildCount()    >    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
52	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.getChildCount()  >  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.getChildCount()  >  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.getChildCount()  >  1;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.getChildCount()    >    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
53	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  n.getChildCount()  >  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  n.getChildCount()  >  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  n.getChildCount()  >  1;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.getChildCount()    >    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
54	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  >  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  >  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  >  1;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.getChildCount()    >    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
55	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context.getChildCount()  >  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context.getChildCount()  >  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context.getChildCount()  >  1;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.getChildCount()    >    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
56	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  ==  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  ==  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  ==  1;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.getChildCount()    >    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
57	[BUG]  [BUGGY]  Context  rhsContext  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  context.getCurrentContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  context.getCurrentContext();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
58	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.getCurrentContext(context);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
59	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForNode(context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForNode(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.getCurrentContextForNode(context);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
60	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForNode(n);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForNode(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.getCurrentContextForNode(n);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
61	[BUG]  [BUGGY]  Context  context  =  Context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  context  =  Context.getCurrentContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  context  =  Context.getCurrentContext();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
62	[BUG]  [BUGGY]  Node  first  =  context.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  context.getFirstChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  context.getFirstChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  Node  first  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  node.getFirstChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  node.getFirstChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  Node  first  =  getFirstChild();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  getFirstChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  getFirstChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first!=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first!=  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount!=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount!=  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context!=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context!=  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
68	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context!=  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context!=  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context!=  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
69	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context!=  BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context!=  BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context!=  BEFORE_DANGLING_ELSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    BEFORE_DANGLING_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
70	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  IN_FOR_INIT_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  IN_FOR_INIT_CLAUSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    BEFORE_DANGLING_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
71	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  BEFORE_DANGLING_ELSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    BEFORE_DANGLING_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
72	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context!=  IN_FOR_INIT_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context!=  IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context!=  IN_FOR_INIT_CLAUSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    BEFORE_DANGLING_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
73	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  BEFORE_DANGLING_ELSE  ||  context  ==  IN_FOR_INIT_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  BEFORE_DANGLING_ELSE  ||  context  ==  IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  BEFORE_DANGLING_ELSE  ||  context  ==  IN_FOR_INIT_CLAUSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    BEFORE_DANGLING_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
74	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context!=  BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context!=  BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context!=  BEFORE_DANGLING_ELSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    BEFORE_DANGLING_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(childCount!=  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount!=  0);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount!=  0);	  Preconditions.checkState(childCount    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
76	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
77	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.START_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
78	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
79	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.END_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
80	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.END_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
81	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.END_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.END_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.END_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.END_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
82	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_OBJECTLIT)||  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_OBJECTLIT)||  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_OBJECTLIT)||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.END_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
83	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_OBJECTLIT)&&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_OBJECTLIT)&&  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_OBJECTLIT)&&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.END_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
84	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
85	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
86	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OBJECTLIT);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OBJECTLIT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OBJECTLIT);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
87	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT)&&  hasElse;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT)&&  hasElse;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT)&&  hasElse;	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
88	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context!=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)||  context!=  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context!=    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
89	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context!=  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context!=  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context!=  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context!=    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
90	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.BEFORE_DANGLING_ELSE);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.BEFORE_DANGLING_ELSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.BEFORE_DANGLING_ELSE);	  boolean    needsParens    =(context    ==    Context.BEFORE_DANGLING_ELSE);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
91	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)||  context  ==  Context.BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)||  context  ==  Context.BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)||  context  ==  Context.BEFORE_DANGLING_ELSE;	  boolean    needsParens    =(context    ==    Context.BEFORE_DANGLING_ELSE);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
92	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.BEFORE_DANGLING_ELSE);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.BEFORE_DANGLING_ELSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.BEFORE_DANGLING_ELSE);	  boolean    needsParens    =(context    ==    Context.BEFORE_DANGLING_ELSE);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
93	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context!=  Context.BEFORE_DANGLING_ELSE);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context!=  Context.BEFORE_DANGLING_ELSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context!=  Context.BEFORE_DANGLING_ELSE);	  boolean    needsParens    =(context    ==    Context.BEFORE_DANGLING_ELSE);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
94	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE);	  boolean    needsParens    =(context    ==    Context.BEFORE_DANGLING_ELSE);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
95	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.BEFORE_DANGLING_ELSE);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.BEFORE_DANGLING_ELSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.BEFORE_DANGLING_ELSE);	  boolean    needsParens    =(context    ==    Context.BEFORE_DANGLING_ELSE);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
96	[BUG]  [BUGGY]  Node  first  =  context.getNext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  context.getNext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  context.getNext();	  Node    first    =    n.getNext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
97	[BUG]  [BUGGY]  Node  first  =  n.getNext()  +  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  n.getNext()  +  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  n.getNext()  +  1;	  Node    first    =    n.getNext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
98	[BUG]  [BUGGY]  Node  first  =  node.getNext();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  node.getNext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  node.getNext();	  Node    first    =    n.getNext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
99	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT  &&  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT  &&  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT  &&  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context!=    Context.STATEMENT    ||    context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
100	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context!=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context!=  Context.START_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
101	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
102	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
103	[BUG]  [BUGGY]  Boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
104	[BUG]  [BUGGY]  boolean  needsParens  =  context  >=  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  >=  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  >=  Context.END_OF_EXPR;	  boolean    needsParens    =    context!=    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
105	[BUG]  [BUGGY]  int  needsParens  =  context!=  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context!=  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context!=  Context.END_OF_EXPR;	  boolean    needsParens    =    context!=    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
106	[BUG]  [BUGGY]  boolean  needsParens  =  context.getType()  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context.getType()  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context.getType()  ==  Context.END_OF_EXPR;	  boolean    needsParens    =    context!=    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
107	[BUG]  [BUGGY]  boolean  needsParens  =(parent  ==  Context.START_OF_EXPR)&&  parent.hasChildren();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(parent  ==  Context.START_OF_EXPR)&&  parent.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(parent  ==  Context.START_OF_EXPR)&&  parent.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
108	[BUG]  [BUGGY]  boolean  needsParens  =(parent  ==  Context.START_OF_EXPR)&&  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(parent  ==  Context.START_OF_EXPR)&&  context.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(parent  ==  Context.START_OF_EXPR)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
109	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  parent.hasChildren();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  parent.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  parent.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
110	[BUG]  [BUGGY]  boolean  needsParens  =(n  ==  Context.START_OF_EXPR)&&  parent.hasChildren();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n  ==  Context.START_OF_EXPR)&&  parent.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n  ==  Context.START_OF_EXPR)&&  parent.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
111	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.IN_FOR_INIT_CLAUSE);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
112	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.IN_FOR_INIT_CLAUSE  ||  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.IN_FOR_INIT_CLAUSE  ||  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.IN_FOR_INIT_CLAUSE  ||  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
113	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.IN_FOR_INIT_CLAUSE);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
114	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
115	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context!=  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context!=  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context!=  Context.IN_FOR_INIT_CLAUSE);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
116	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  >=  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  >=  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  >=  Context.IN_FOR_INIT_CLAUSE);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
117	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  childCount  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  childCount  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  childCount  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
118	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
119	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context!=  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context!=  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context!=  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
120	[BUG]  [BUGGY]  boolean  needsParens  =(n  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n  ==  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
121	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.OTHER);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.OTHER);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
122	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.OTHER);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.OTHER);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
123	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.OTHER);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.OTHER);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
124	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context!=  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context!=  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context!=  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
125	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
126	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_OBJECTLIT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_OBJECTLIT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_OBJECTLIT);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
127	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
128	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_ELSE  ||  context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_ELSE  ||  context  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_ELSE  ||  context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
129	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)||  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)||  context  ==  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT)||  context  ==  Context.STATEMENT;	  boolean    needsParens    =(context!=    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
130	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)&&  n.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)&&  n.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.START_OF_EXPR)&&  n.getType()  ==  Token.STRING;	  int    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
131	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR  |  Context.START_OF_CONTEXT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR  |  Context.START_OF_CONTEXT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.START_OF_EXPR  |  Context.START_OF_CONTEXT);	  int    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
132	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.START_OF_EXPR)||  context!=  Context.START_OF_EXPR;	  int    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
133	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =    context!=    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
134	[BUG]  [BUGGY]  int  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =    context!=    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
135	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
136	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)||  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
137	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  parent.hasChildren();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  parent.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  parent.hasChildren();	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
138	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  context.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
139	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.hasChildren();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.hasChildren();	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
140	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  node.hasChildren();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  node.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  node.hasChildren();	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
141	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context.hasErrors();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context.hasErrors();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context.hasErrors();	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
142	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount!=  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount!=  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount!=  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context!=    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
143	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first!=  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first!=  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first!=  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context!=    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
144	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent!=  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent!=  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent!=  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context!=    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
145	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);	  int    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
146	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR)&  0;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR)&  0;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.END_OF_EXPR)&  0;	  int    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
147	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR)&  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR)&  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.END_OF_EXPR)&  1;	  int    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
148	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.OBJECTLIT);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.OBJECTLIT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.OBJECTLIT);	  int    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
149	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.STATEMENT;	  boolean    needsParens    =    context!=    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
150	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context!=  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context!=  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context!=  Context.STATEMENT;	  boolean    needsParens    =    context!=    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
151	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context!=  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context!=  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.STATEMENT  ||  context!=  Context.STATEMENT;	  boolean    needsParens    =    context!=    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
152	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(n);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.createContext(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createContext(n);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
153	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(n,  context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.createContext(n,  context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createContext(n,  context);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
154	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  STATEMENT);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createContext(context,  STATEMENT);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
155	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  first);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  first);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createContext(context,  first);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
156	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  false);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createContext(context,  false);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
157	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  1);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createContext(context,  1);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
158	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)||  isEnabled(Feature.QUOTE_FIELD_NAMES);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
159	[BUG]  [BUGGY]  boolean  needsParens  =(n  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
160	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
161	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
162	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  isEnabled(Feature.QUOTE_FIELD_NAMES);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
163	[BUG]  [BUGGY]  int  needsParens  =  context!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context!=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context!=  Context.START_OF_EXPR;	  boolean    needsParens    =    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
164	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  childCount  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
165	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
166	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
167	[BUG]  [BUGGY]  Node  first  =  context.getLastChild();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  context.getLastChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  context.getLastChild();	  Node    first    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
168	[BUG]  [BUGGY]  Node  first  =  node.getLastChild();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  node.getLastChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  node.getLastChild();	  Node    first    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
169	[BUG]  [BUGGY]  Node  first  =  context.nextChild();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  context.nextChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  context.nextChild();	  Node    first    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
170	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
171	[BUG]  [BUGGY]  boolean  needsParens  =(first  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(first  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(first  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(n    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
172	[BUG]  [BUGGY]  boolean  needsParens  =(n!=  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n!=  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n!=  Context.END_OF_EXPR);	  boolean    needsParens    =(n    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
173	[BUG]  [BUGGY]  boolean  needsParens  =(n  ==  Context.END_OF_EXPR  ||  n  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n  ==  Context.END_OF_EXPR  ||  n  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n  ==  Context.END_OF_EXPR  ||  n  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(n    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
174	[BUG]  [BUGGY]  boolean  needsParens  =(childCount  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(childCount  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(childCount  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(n    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
175	[BUG]  [BUGGY]  int  needsParens  =(n  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(n  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(n  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(n    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
176	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT;	  boolean    needsParens    =    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
177	[BUG]  [BUGGY]  boolean  needsParens  =(n  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n  ==  Context.START_OF_EXPR);	  boolean    needsParens    =(n!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
178	[BUG]  [BUGGY]  boolean  needsParens  =(n.getType()  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n.getType()  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n.getType()  ==  Context.START_OF_EXPR);	  boolean    needsParens    =(n!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
179	[BUG]  [BUGGY]  boolean  needsParens  =(first!=  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(first!=  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(first!=  Context.START_OF_EXPR);	  boolean    needsParens    =(n!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
180	[BUG]  [BUGGY]  boolean  needsParens  =(n  ==  Context.START_OF_EXPR));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n  ==  Context.START_OF_EXPR));  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n  ==  Context.START_OF_EXPR));	  boolean    needsParens    =(n!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
181	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);	  Boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
182	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.STATEMENT);	  Boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
183	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR;	  Boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
184	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.END_OF_EXPR);	  Boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
185	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  n.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  n.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  n.getType()  ==  Token.STRING;	  Boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
186	[BUG]  [BUGGY]  Boolean  needsParens  =(n  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(n  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(n  ==  Context.START_OF_EXPR);	  Boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
187	[BUG]  [BUGGY]  Context.checkState(childCount  ==  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context.checkState(childCount  ==  0);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount  ==  0);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
188	[BUG]  [BUGGY]  Context.checkState(childCount!=  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context.checkState(childCount!=  1);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount!=  1);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
189	[BUG]  [BUGGY]  Context.checkState(childCount  >=  1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context.checkState(childCount  >=  1);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount  >=  1);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
190	[BUG]  [BUGGY]  Context.checkState(childCount  ==  3);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context.checkState(childCount  ==  3);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount  ==  3);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
191	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1  -  1);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context.checkState(childCount  ==  1  -  1);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount  ==  1  -  1);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
192	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context!=  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context!=  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context!=  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
193	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
194	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_OBJECTLIT  ||  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_OBJECTLIT  ||  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.START_OF_OBJECTLIT  ||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
195	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  &&  context  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  &&  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.START_OF_EXPR  &&  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
196	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
197	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_OBJECTLIT;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
198	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.OBJECTLIT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.OBJECTLIT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.OBJECTLIT);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
199	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.FIELD_NAME);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.FIELD_NAME);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
200	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
201	[BUG]  [BUGGY]  boolean  needsParens  =(n  ==  Context.FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n  ==  Context.FIELD_NAME);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n  ==  Context.FIELD_NAME);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
202	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.FIELD_NAME);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.FIELD_NAME);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
203	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.OBJECTLIT);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.OBJECTLIT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.OBJECTLIT);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
204	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.STATEMENT)||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
205	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
206	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.next();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.next();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.next();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.next();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
207	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context.next();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context.next();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context.next();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.next();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
208	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getLastChild();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getLastChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getLastChild();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.next();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
209	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.next();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.next();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.next();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.next();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
210	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getCurrentNode();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getCurrentNode();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getCurrentNode();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.next();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
211	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT);	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
212	[BUG]  [BUGGY]  int  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.STATEMENT);	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
213	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)&  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)&  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT)&  1;	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
214	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.STATEMENT);	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
215	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)&  0xFFFF;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)&  0xFFFF;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT)&  0xFFFF;	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
216	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)&  0;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)&  0;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT)&  0;	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
217	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.EMPTY);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.EMPTY);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context!=  Context.EMPTY);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
218	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.EMPTY);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.EMPTY);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  &&  context  ==  Context.EMPTY);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
219	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.EMPTY);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.EMPTY);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT  ||  context  ==  Context.EMPTY);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
220	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.EXPR_RESULT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.EXPR_RESULT);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
221	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Node.EMPTY);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Node.EMPTY);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Node.EMPTY);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
222	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR  |  Context.START_OF_OBJECTLIT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR  |  Context.START_OF_OBJECTLIT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.START_OF_EXPR  |  Context.START_OF_OBJECTLIT);	  int    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
223	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)+  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)+  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.START_OF_EXPR)+  1;	  int    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
224	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context.checkState(childCount  ==  2  -  1);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount  ==  2  -  1);	  Context.checkState(childCount    ==    2);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
225	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2  -  childCount);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context.checkState(childCount  ==  2  -  childCount);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount  ==  2  -  childCount);	  Context.checkState(childCount    ==    2);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
226	[BUG]  [BUGGY]  Context.checkState(childCount!=  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context.checkState(childCount!=  2);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount!=  2);	  Context.checkState(childCount    ==    2);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
227	[BUG]  [BUGGY]  boolean  needsParens  =(first  ==  Context.START_OF_EXPR)&&  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(first  ==  Context.START_OF_EXPR)&&  context.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(first  ==  Context.START_OF_EXPR)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    first.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
228	[BUG]  [BUGGY]  boolean  needsParens  =(first!=  Context.START_OF_EXPR)&&  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(first!=  Context.START_OF_EXPR)&&  context.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(first!=  Context.START_OF_EXPR)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    first.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
229	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  first.hasChildren();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  first.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  first.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    first.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
230	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  first.hasChildren();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  first.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  first.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    first.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
231	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.getFirstChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.getFirstChild();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    first.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
232	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().getRootContext();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getCurrentContext().getRootContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getCurrentContext().getRootContext();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
233	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getCurrentContext().getCurrentContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getCurrentContext().getCurrentContext();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
234	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getCurrentContext(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getCurrentContext(context);	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
235	[BUG]  [BUGGY]  Context  cc  =  createCurrentContext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  createCurrentContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  createCurrentContext();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
236	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNode(context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getCurrentContextForNode(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getCurrentContextForNode(context);	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
237	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
238	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)||  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)||  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)||  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
239	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
240	[BUG]  [BUGGY]  Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
241	[BUG]  [BUGGY]  Context  cc  =  this.context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  this.context.getCurrentContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  this.context.getCurrentContext();	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
242	[BUG]  [BUGGY]  Context  cc  =  n.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  n.getCurrentContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  n.getCurrentContext();	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
243	[BUG]  [BUGGY]  Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context;	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
244	[BUG]  [BUGGY]  Context  cc  =  first.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  first.getCurrentContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  first.getCurrentContext();	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
245	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  parent.hasChildren();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  parent.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  parent.hasChildren();	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
246	[BUG]  [BUGGY]  Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context.getContext();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context.getContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context.getContext();	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
247	[BUG]  [BUGGY]  Context  cc  =(context  ==  null)?  context.getContext()  :  context.getContext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =(context  ==  null)?  context.getContext()  :  context.getContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =(context  ==  null)?  context.getContext()  :  context.getContext();	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
248	[BUG]  [BUGGY]  Context  cc  =  getContext();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getContext();	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
249	[BUG]  [BUGGY]  Context  cc  =(context  ==  null)?  context.getContext()  :  context;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =(context  ==  null)?  context.getContext()  :  context;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =(context  ==  null)?  context.getContext()  :  context;	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
250	[BUG]  [BUGGY]  Context  cc  =  getContextForNode(n);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getContextForNode(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getContextForNode(n);	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
251	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createContext(context,  context);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
252	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  true);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createContext(context,  true);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
253	[BUG]  [BUGGY]  Boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
254	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.STATEMENT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
255	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.mayHaveSideEffects(n);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
256	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isLiteralValue(n);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isLiteralValue(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isLiteralValue(n);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
257	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isObjectLitValue(n);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isObjectLitValue(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  NodeUtil.isObjectLitValue(n);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
258	[BUG]  [BUGGY]  int  needsParens  =(context!=  Context.START_OF_EXPR)+  1;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context!=  Context.START_OF_EXPR)+  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context!=  Context.START_OF_EXPR)+  1;	  int    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
259	[BUG]  [BUGGY]  int  needsParens  =(context!=  Context.START_OF_EXPR)&&  n.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context!=  Context.START_OF_EXPR)&&  n.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context!=  Context.START_OF_EXPR)&&  n.getType()  ==  Token.STRING;	  int    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
260	[BUG]  [BUGGY]  int  needsParens  =(context!=  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context!=  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context!=  Context.STATEMENT);	  int    needsParens    =(context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
261	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context!=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context!=  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
262	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)||    context    ==    Context.END_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
263	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)||  context  ==  Context.IN_FOR_INIT_CLAUSE;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)||  context  ==  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT)||  context  ==  Context.IN_FOR_INIT_CLAUSE;	  boolean    needsParens    =(context!=    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
264	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT)&&  first.getType()  ==  Token.STRING;	  boolean    needsParens    =(context!=    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
265	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =    (context    ==    Context.START_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
266	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
267	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context!=  Context.END_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context!=  Context.END_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context!=  Context.END_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context!=    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
268	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  first.getType()  ==  Token.STRING);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  first.getType()  ==  Token.STRING);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  first.getType()  ==  Token.STRING);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    first.getType()    ==    Token.STRING;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
269	[BUG]  [BUGGY]  Preconditions.checkState(childCount  >=  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount  >=  0);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  >=  0);	  Preconditions.checkState(childCount    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
270	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.OTHER);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.OTHER);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
271	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.TEXT_OBJECTLIT);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.TEXT_OBJECTLIT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.TEXT_OBJECTLIT);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
272	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.OTHER);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.OTHER);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
273	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.FIELD_NAME);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.FIELD_NAME);	  boolean    needsParens    =(context!=    Context.STATEMENT    ||    context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
274	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
275	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT);	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
276	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_ELSE)&&  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_ELSE)&&  context  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_ELSE)&&  context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
277	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);	  boolean    needsParens    =(context    ==    Context.BEFORE_DANGLING_ELSE);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
278	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.BEFORE_DANGLING_ELSE);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
279	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.EXPR_RESULT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.EXPR_RESULT);	  boolean    needsParens    =(context    ==    Context.BEFORE_DANGLING_ELSE);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
280	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  >  2;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  >  2;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  >  2;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.getChildCount()    >    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
281	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  >=  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  >=  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getChildCount()  >=  1;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.getChildCount()    >    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
282	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  BEFORE_DANGLING_ELSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    BEFORE_DANGLING_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
283	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.END_OF_EXPR)&&  context  ==  BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.END_OF_EXPR)&&  context  ==  BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.END_OF_EXPR)&&  context  ==  BEFORE_DANGLING_ELSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    BEFORE_DANGLING_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
284	[BUG]  [BUGGY]  boolean  needsParens  =(n  ==  Context.END_OF_EXPR)&&  isEnabled(context);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n  ==  Context.END_OF_EXPR)&&  isEnabled(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n  ==  Context.END_OF_EXPR)&&  isEnabled(context);	  boolean    needsParens    =(n    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
285	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)||  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)||  context.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)||  context.hasChildren();	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
286	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.getChildCount()  >  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.getChildCount()  >  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.getChildCount()  >  1;	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
287	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  Boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
288	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.TEXT_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.TEXT_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.TEXT_OF_EXPR);	  Boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
289	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.END_OF_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.END_OF_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.END_OF_CLAUSE;	  boolean    needsParens    =    context!=    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
290	[BUG]  [BUGGY]  Boolean  needsParens  =  context!=  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =  context!=  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =  context!=  Context.END_OF_EXPR;	  boolean    needsParens    =    context!=    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
291	[BUG]  [BUGGY]  boolean  needsParens  =(n!=  Context.START_OF_EXPR)&&  isEnabled(context);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(n!=  Context.START_OF_EXPR)&&  isEnabled(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(n!=  Context.START_OF_EXPR)&&  isEnabled(context);	  boolean    needsParens    =(n!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
292	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)-  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)-  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.START_OF_EXPR)-  1;	  int    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
293	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.TEXT_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.TEXT_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.TEXT_OF_EXPR);	  int    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
294	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.START_OF_EXPR  &&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.START_OF_EXPR  &&  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.START_OF_EXPR  &&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =    context!=    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
295	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context.hasChildren());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context.hasChildren());  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context.hasChildren());	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
296	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context.next();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context.next();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  context.next();	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
297	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
298	[BUG]  [BUGGY]  Context  cc  =  getContextForNode(context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getContextForNode(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getContextForNode(context);	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
299	[BUG]  [BUGGY]  Context  cc  =(context  ==  null)?  context.getContext()  :  context.getCurrentNode();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =(context  ==  null)?  context.getContext()  :  context.getCurrentNode();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =(context  ==  null)?  context.getContext()  :  context.getCurrentNode();	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
300	[BUG]  [BUGGY]  Context  cc  =  getContextForNode(n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getContextForNode(n.getFirstChild());  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getContextForNode(n.getFirstChild());	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
301	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.OTHER  ||  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.OTHER  ||  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.OTHER  ||  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
302	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Node.OTHER);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Node.OTHER);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Node.OTHER);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
303	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Node  first  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Node  first  =  n.getFirstChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  ==  1);  Node  first  =  n.getFirstChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
304	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  Node  first  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount  ==  0);  Node  first  =  n.getFirstChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  ==  0);  Node  first  =  n.getFirstChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
305	[BUG]  [BUGGY]  Node  first  =  n.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  n.removeFirstChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  n.removeFirstChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
306	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().getCurrentNode();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getCurrentContext().getCurrentNode();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getCurrentContext().getCurrentNode();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
307	[BUG]  [BUGGY]  Context  cc  =  getCurrentStatementContext();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getCurrentStatementContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getCurrentStatementContext();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
308	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
309	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)+  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)+  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT)+  1;	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
310	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OBJECTLIT);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OBJECTLIT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OBJECTLIT);	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
311	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.START_OF_EXPR);	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
312	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.EXPR_RESULT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.EXPR_RESULT);	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
313	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  first.getType()  ==  Token.STRING;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    first.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
314	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE;	  boolean    needsParens    =    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
315	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  BEFORE_DANGLING_ELSE;	  boolean    needsParens    =    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
316	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Preconditions.checkState(childCount  ==  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Preconditions.checkState(childCount  ==  2);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Preconditions.checkState(childCount  ==  2);	  boolean    needsParens    =    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
317	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Preconditions.checkState(childCount  ==  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Preconditions.checkState(childCount  ==  1);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Preconditions.checkState(childCount  ==  1);	  boolean    needsParens    =    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
318	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)&&  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)&&  context.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
319	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.IN_FOR_INIT_CLAUSE;	  boolean    needsParens    =    context!=    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
320	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context!=  Context.IN_FOR_INIT_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context!=  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.STATEMENT  ||  context!=  Context.IN_FOR_INIT_CLAUSE;	  boolean    needsParens    =    context!=    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
321	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.BEFORE_DANGLING_ELSE;	  boolean    needsParens    =    context!=    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
322	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.EXPR_RESULT;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.EXPR_RESULT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.STATEMENT  ||  context  ==  Context.EXPR_RESULT;	  boolean    needsParens    =    context!=    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
323	[BUG]  [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  hasElseClause;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context!=  Context.STATEMENT  ||  hasElseClause;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context!=  Context.STATEMENT  ||  hasElseClause;	  boolean    needsParens    =    context!=    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
324	[BUG]  [BUGGY]  Context  rhsContext  =  Context.currentContext();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.currentContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.currentContext();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
325	[BUG]  [BUGGY]  Boolean  needsParens  =  context!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =  context!=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =  context!=  Context.START_OF_EXPR;	  boolean    needsParens    =    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
326	[BUG]  [BUGGY]  boolean  needsParens  =  context  >=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  >=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  >=  Context.START_OF_EXPR;	  boolean    needsParens    =    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
327	[BUG]  [BUGGY]  Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context.getRootContext();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context.getRootContext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =(context  ==  null)?  context.getCurrentContext()  :  context.getRootContext();	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
328	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext(n);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  context.getCurrentContext(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  context.getCurrentContext(n);	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
329	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OBJECTLIT;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
330	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_INIT_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_INIT_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_INIT_CLAUSE;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
331	[BUG]  [BUGGY]  int  needsParens  =  context!=  Context.START_OF_EXPR  |  Context.START_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context!=  Context.START_OF_EXPR  |  Context.START_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context!=  Context.START_OF_EXPR  |  Context.START_OBJECTLIT;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
332	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_TO_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_TO_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_TO_OBJECTLIT;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
333	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_CLAUSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_CLAUSE;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
334	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_CLAUSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_CLAUSE;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
335	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)||  context  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)||  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)||  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
336	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_ELSE)&&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_ELSE)&&  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_ELSE)&&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
337	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_ELSE;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.END_OF_ELSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
338	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_ELSE;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.END_OF_ELSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
339	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.BEFORE_DANGLING_ELSE;	  boolean    needsParens    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
340	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.END_OF_EXPR  ||  context  ==  BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.END_OF_EXPR  ||  context  ==  BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.END_OF_EXPR  ||  context  ==  BEFORE_DANGLING_ELSE;	  boolean    needsParens    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
341	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.END_OF_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.END_OF_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.END_OF_CLAUSE;	  boolean    needsParens    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
342	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)&&  context  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)&&  context  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE)&&  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
343	[BUG]  [BUGGY]  boolean  needsParens  =(parent!=  Context.START_OF_EXPR)&&  parent.hasChildren();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(parent!=  Context.START_OF_EXPR)&&  parent.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(parent!=  Context.START_OF_EXPR)&&  parent.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
344	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.ACTIVE);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.ACTIVE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.ACTIVE);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
345	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR)+  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR)+  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.END_OF_EXPR)+  1;	  int    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
346	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.EXPR_RESULT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.EXPR_RESULT);	  int    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
347	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent!=  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent!=  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent!=  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
348	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getFirstChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getFirstChild();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.next();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
349	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getType()  ==  Token.STRING;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.next();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
350	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.IN_FOR_INIT_CLAUSE  ||  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.IN_FOR_INIT_CLAUSE  ||  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.IN_FOR_INIT_CLAUSE  ||  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
351	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.BLOCK  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.BLOCK  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.BLOCK  ||  context  ==  Context.IN_FOR_INIT_CLAUSE);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
352	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT)&&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.STATEMENT)||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
353	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  isEnabled(Context.START_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
354	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
355	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_ELSE);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_ELSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_ELSE);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
356	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_CLAUSE  ||  context  ==  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_CLAUSE  ||  context  ==  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_CLAUSE  ||  context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
357	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_COLLECTION;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_COLLECTION;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_COLLECTION;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
358	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_CONST;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_CONST;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_CONST;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
359	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_COMMA;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_COMMA;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context  ==  Context.END_OF_COMMA;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
360	[BUG]  [BUGGY]  boolean  needsParens  =  (context!=  Context.START_OF_EXPR  ||  context!=  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  (context!=  Context.START_OF_EXPR  ||  context!=  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  (context!=  Context.START_OF_EXPR  ||  context!=  Context.START_OF_EXPR);	  boolean    needsParens    =    (context    ==    Context.START_OF_EXPR    ||    context!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
361	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context!=  Context.STATEMENT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
362	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  n.hasChildren();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  n.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  n.hasChildren();	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
363	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.next();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.next();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.next();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.next();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
364	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getProp(Node.SOURCENAME_PROP);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getProp(Node.SOURCENAME_PROP);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.getProp(Node.SOURCENAME_PROP);	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context.next();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
365	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.BEFORE_DANGLING_ELSE;	  boolean    needsParens    =    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
366	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.OTHER;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.OTHER;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.STATEMENT  ||  context  ==  Context.OTHER;	  boolean    needsParens    =    context    ==    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
367	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  NodeUtil.isExpressionNode(n);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  NodeUtil.isExpressionNode(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT)&&  NodeUtil.isExpressionNode(n);	  boolean    needsParens    =(context!=    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
368	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  isEnabled(Feature.FLUSH_PASSED_TO_STRING);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  isEnabled(Feature.FLUSH_PASSED_TO_STRING);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT)&&  isEnabled(Feature.FLUSH_PASSED_TO_STRING);	  boolean    needsParens    =(context!=    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
369	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  n.getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.STATEMENT)&&  n.getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.STATEMENT)&&  n.getType()  ==  Token.STRING;	  boolean    needsParens    =(context!=    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
370	[BUG]  [BUGGY]  int  needsParens  =(context!=  Context.END_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context!=  Context.END_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context!=  Context.END_OF_EXPR);	  int    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
371	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  n.getFirstChild().getNext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  n.getFirstChild().getNext();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
372	[BUG]  [BUGGY]  Node  first  =  getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Node  first  =  getFirstChild().getNext();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Node  first  =  getFirstChild().getNext();	  Node    first    =    n.getNext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
373	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
374	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
375	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.STATEMENT;	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
376	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
377	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
378	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
379	[BUG]  [BUGGY]  boolean  needsParens  =  Context.START_OF_EXPR  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  Context.START_OF_EXPR  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  Context.START_OF_EXPR  ==  Context.START_OF_EXPR;	  boolean    needsParens    =    context!=    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
380	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  n.hasChildren();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  n.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  n.hasChildren();	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
381	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.getChildCount()  >  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.getChildCount()  >  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.getChildCount()  >  1;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
382	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context!=    Context.STATEMENT    ||    context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
383	[BUG]  [BUGGY]  boolean  needsParens  =  childCount!=  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  childCount!=  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  childCount!=  Context.END_OF_EXPR;	  boolean    needsParens    =    context!=    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
384	[BUG]  [BUGGY]  boolean  needsParens  =  Context.END_OF_EXPR  ==  Context.END_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  Context.END_OF_EXPR  ==  Context.END_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  Context.END_OF_EXPR  ==  Context.END_OF_EXPR;	  boolean    needsParens    =    context!=    Context.END_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
385	[BUG]  [BUGGY]  int  needsParens  =(n!=  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(n!=  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(n!=  Context.START_OF_EXPR);	  boolean    needsParens    =(n!=    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
386	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForNoInOperator(context);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForNoInOperator(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.getCurrentContextForNoInOperator(context);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
387	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForNoInOperator();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForNoInOperator();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.getCurrentContextForNoInOperator();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
388	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
389	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)?  0  :  context  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)?  0  :  context  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT)?  0  :  context  ==  Context.START_OF_EXPR;	  int    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
390	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)?  1  :  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)?  1  :  context  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT)?  1  :  context  ==  Context.START_OF_EXPR);	  int    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
391	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_COLLECTION);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_COLLECTION);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_COLLECTION);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
392	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_CLAUSE);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_CLAUSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_CLAUSE);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR    ||    context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
393	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_ELSE;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_ELSE;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
394	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  BEFORE_DANGLING_ELSE;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  BEFORE_DANGLING_ELSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  BEFORE_DANGLING_ELSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR)||    context    ==    BEFORE_DANGLING_ELSE;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
395	[BUG]  [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.STATEMENT;	  boolean    needsParens    =    context    ==    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_OBJECTLIT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
396	[BUG]  [BUGGY]  Boolean  needsParens  =(context!=  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context!=  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context!=  Context.START_OF_EXPR);	  Boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
397	[BUG]  [BUGGY]  Boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Boolean  needsParens  =(context  ==  Context.BEFORE_DANGLING_ELSE);	  Boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
398	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OTHER);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OTHER);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.OTHER);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
399	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.OTHER;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.OTHER;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)||  context  ==  Context.OTHER;	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.OTHER);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
400	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR)&&  context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =    (context!=    Context.START_OF_EXPR    ||    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
401	[BUG]  [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)-  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context  ==  Context.STATEMENT)-  1;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context  ==  Context.STATEMENT)-  1;	  int    needsParens    =(context    ==    Context.STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
402	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getString().getType()  ==  Token.STRING;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getString().getType()  ==  Token.STRING;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first.getString().getType()  ==  Token.STRING;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    first.getType()    ==    Token.STRING;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
403	[BUG]  [BUGGY]  Context  cc  =  getContextForNoInOperator(context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getContextForNoInOperator(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getContextForNoInOperator(context);	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
404	[BUG]  [BUGGY]  Context  cc  =  getContextForNoDeclaration(n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getContextForNoDeclaration(n.getFirstChild());  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getContextForNoDeclaration(n.getFirstChild());	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
405	[BUG]  [BUGGY]  Context  cc  =  getContextForNoDeclaration(n);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getContextForNoDeclaration(n);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getContextForNoDeclaration(n);	  Context    cc    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
406	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  4);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Preconditions.checkState(childCount  ==  4);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Preconditions.checkState(childCount  ==  4);	  Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
407	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.UNKNOWN);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.UNKNOWN);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT  ||  context  ==  Context.UNKNOWN);	  boolean    needsParens    =(context    ==    Context.STATEMENT    ||    context    ==    Context.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
408	[BUG]  [BUGGY]  boolean  needsParens  =  this.context!=  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =  this.context!=  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =  this.context!=  Context.STATEMENT;	  boolean    needsParens    =    context!=    Context.STATEMENT;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
409	[BUG]  [BUGGY]  Context.checkState(childCount  ==  4);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context.checkState(childCount  ==  4);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context.checkState(childCount  ==  4);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
410	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context!=  Context.FIELD_NAME);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context!=  Context.FIELD_NAME);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
411	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.STATEMENT);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.FIELD_NAME  ||  context  ==  Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
412	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.STATEMENT)&&  first  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.STATEMENT)&&    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
413	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getCurrentContextForNoInOperator();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
414	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  cc  =  getCurrentContextForNoInOperator(context);	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
415	[BUG]  [BUGGY]  int  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.hasChildren();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.hasChildren();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =(context!=  Context.START_OF_EXPR)&&  context.hasChildren();	  boolean    needsParens    =(context!=    Context.START_OF_EXPR)&&    context.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
416	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  this);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  this);  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	Context  rhsContext  =  Context.createContext(context,  this);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
417	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.getFirstChild();  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  parent.getFirstChild();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR)&&    parent.hasChildren();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
418	[BUG]  [BUGGY]  int  needsParens  =  childCount  ==  Context.START_OF_EXPR;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  childCount  ==  Context.START_OF_EXPR;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  childCount  ==  Context.START_OF_EXPR;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
419	[BUG]  [BUGGY]  int  needsParens  =  context!=  Context.STATEMENT;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context!=  Context.STATEMENT;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context!=  Context.STATEMENT;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
420	[BUG]  [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_CLAUSE;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {      [BUGGY]  int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_CLAUSE;  [BUGGY]      if  (needsParens)  {  add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	648	648	1	replace	int  needsParens  =  context  ==  Context.START_OF_EXPR  |  Context.START_OF_CLAUSE;	  int    needsParens    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
