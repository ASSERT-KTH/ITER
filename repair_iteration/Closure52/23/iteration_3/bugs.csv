bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(usesParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(usesParens  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  &&  needsParens)  {	  if(usesParens    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	31	None	replace
2	[BUG]  [BUGGY]  if(usesParens  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(usesParens  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  ||  needsParens)  {	  if(usesParens    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	31	None	replace
3	[BUG]  [BUGGY]  if(!usesParens  &&  hasElse)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!usesParens  &&  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!usesParens  &&  hasElse)  {	  if(usesParens    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	31	None	replace
4	[BUG]  [BUGGY]  if(functionsParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  &&  needsParens)  {	  if(usesParens    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	31	None	replace
5	[BUG]  [BUGGY]  if(!hasElse  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(!hasElse    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	51	None	replace
6	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(!hasElse    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	51	None	replace
7	[BUG]  [BUGGY]  if(!hasElse  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(!hasElse    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	51	None	replace
8	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1  &&  needsParens);  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  1  &&  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  1  &&  needsParens);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	13	None	replace
9	[BUG]  [BUGGY]  Context.checkState(childCount  ==  0);  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  0);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  0);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	13	None	replace
10	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1  ||  needsParens);  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  1  ||  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  1  ||  needsParens);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	13	None	replace
11	[BUG]  [BUGGY]  Context.checkState(childCount!=  1);  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount!=  1);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount!=  1);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	13	None	replace
12	[BUG]  [BUGGY]  Context.checkState(childCount  ==  3);  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  3);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  3);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	13	None	replace
13	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR)&&  needsParens;  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR)&&  needsParens;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR)&&  needsParens;	  boolean    hasElseClause    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	59	None	replace
14	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);	  boolean    hasElseClause    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	59	None	replace
15	[BUG]  [BUGGY]  boolean  needsElseClause  =(context  ==  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsElseClause  =(context  ==  Context.START_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsElseClause  =(context  ==  Context.START_OF_EXPR);	  boolean    hasElseClause    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	59	None	replace
16	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR));  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR));  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR));	  boolean    hasElseClause    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	59	None	replace
17	[BUG]  [BUGGY]  if(hasElseClause  &&  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  context  ==  Context.STATEMENT)  {	  if(needsParens    &&    context    ==    Context.STATEMENT)    {    	non-compiled	[CE]  unclosed  comment	77	None	replace
18	[BUG]  [BUGGY]  if(!hasElseClause  &&  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  context  ==  Context.STATEMENT)  {	  if(needsParens    &&    context    ==    Context.STATEMENT)    {    	non-compiled	[CE]  unclosed  comment	77	None	replace
19	[BUG]  [BUGGY]  if(context  ==  Context.STATEMENT  &&  needsParens  ==  Context.IN_FOR_INIT_CLAUSE)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.STATEMENT  &&  needsParens  ==  Context.IN_FOR_INIT_CLAUSE)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.STATEMENT  &&  needsParens  ==  Context.IN_FOR_INIT_CLAUSE)  {	  if(needsParens    &&    context    ==    Context.STATEMENT)    {    	non-compiled	[CE]  unclosed  comment	77	None	replace
20	[BUG]  [BUGGY]  if(hasElse  &&  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  context  ==  Context.STATEMENT)  {	  if(needsParens    &&    context    ==    Context.STATEMENT)    {    	non-compiled	[CE]  unclosed  comment	77	None	replace
21	[BUG]  [BUGGY]  if(context  ==  Context.STATEMENT  ||  needsParens  ==  Context.IN_FOR_INIT_CLAUSE)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.STATEMENT  ||  needsParens  ==  Context.IN_FOR_INIT_CLAUSE)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.STATEMENT  ||  needsParens  ==  Context.IN_FOR_INIT_CLAUSE)  {	  if(needsParens    &&    context    ==    Context.STATEMENT)    {    	non-compiled	[CE]  unclosed  comment	77	None	replace
22	[BUG]  [BUGGY]  if(context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.STATEMENT)  {	  if(needsParens    &&    context    ==    Context.STATEMENT)    {    	non-compiled	[CE]  unclosed  comment	77	None	replace
23	[BUG]  [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.START_OF_EXPR)  {	  if(context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
24	[BUG]  [BUGGY]  if(hasElseClause  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  ||  context  ==  Context.START_OF_EXPR)  {	  if(context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
25	[BUG]  [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.BEFORE_DANGLING_ELSE)  {	  if(context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
26	[BUG]  [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.BEFORE_DANGLING_ELSE  ||  context  ==  Context.END_OF_EXPR)  {	  if(context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
27	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  hasParens)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  hasParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  hasParens)  {	  if(hasElseClause    &&    hasParens)    {    	non-compiled	[CE]  unclosed  comment	44	None	replace
28	[BUG]  [BUGGY]  if(usesParens  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(usesParens  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  &&  hasElseClause)  {	  if(hasElseClause    &&    hasParens)    {    	non-compiled	[CE]  unclosed  comment	44	None	replace
29	[BUG]  [BUGGY]  if(hasParens  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasParens  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasParens  &&  hasElseClause)  {	  if(hasElseClause    &&    hasParens)    {    	non-compiled	[CE]  unclosed  comment	44	None	replace
30	[BUG]  [BUGGY]  if(functionsParens  ||  needsElse)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  ||  needsElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||  needsElse)  {	  if(functionsParens    &&    needsElse)    {    	non-compiled	[CE]  unclosed  comment	32	None	replace
31	[BUG]  [BUGGY]  if(functionsParens  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(functionsParens    &&    needsElse)    {    	non-compiled	[CE]  unclosed  comment	32	None	replace
32	[BUG]  [BUGGY]  if(functionsParens  &&  hasElse)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  &&  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  &&  hasElse)  {	  if(functionsParens    &&    needsElse)    {    	non-compiled	[CE]  unclosed  comment	32	None	replace
33	[BUG]  [BUGGY]  if(functionsParens  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(functionsParens    &&    needsElse)    {    	non-compiled	[CE]  unclosed  comment	32	None	replace
34	[BUG]  [BUGGY]  if(!functionsParens  &&  needsElse)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!functionsParens  &&  needsElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!functionsParens  &&  needsElse)  {	  if(functionsParens    &&    needsElse)    {    	non-compiled	[CE]  unclosed  comment	32	None	replace
35	[BUG]  [BUGGY]  if(functionsParens  ||  needsElseClause)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  ||  needsElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||  needsElseClause)  {	  if(needsParens    ||    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	70	None	replace
36	[BUG]  [BUGGY]  if(needsParens  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  hasElseClause)  {	  if(needsParens    ||    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	70	None	replace
37	[BUG]  [BUGGY]  if(hasElse  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(hasElse    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	73	None	replace
38	[BUG]  [BUGGY]  if(hasElse  &&  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  first  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  first  ==  Context.START_OF_EXPR)  {	  if(hasElse    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	73	None	replace
39	[BUG]  [BUGGY]  if(hasElse  ||  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  ||  first!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  ||  first!=  Context.START_OF_EXPR)  {	  if(hasElse    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	73	None	replace
40	[BUG]  [BUGGY]  if(hasElse  &&  needsParens  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  needsParens  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  needsParens  ==  Context.START_OF_EXPR)  {	  if(hasElse    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	73	None	replace
41	[BUG]  [BUGGY]  if(usesParens  ||  hasElse)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(usesParens  ||  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  ||  hasElse)  {	  if(hasElse    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	2	None	replace
42	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR)&&  needsParens;  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR)&&  needsParens;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR)&&  needsParens;	  boolean    hasElseClause    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	60	None	replace
43	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR)&&  needsParens);  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR)&&  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR)&&  needsParens);	  boolean    hasElseClause    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	60	None	replace
44	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);	  boolean    hasElseClause    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	60	None	replace
45	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR));  [CE]  unclosed  comment  [FE]                                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR));  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR));	  boolean    hasElseClause    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	60	None	replace
46	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  context))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  context))  {	  if(!hasElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	21	None	replace
47	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!hasElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	21	None	replace
48	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.START_OF_EXPR))  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.START_OF_EXPR))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.START_OF_EXPR))  {	  if(!hasElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	21	None	replace
49	[BUG]  [BUGGY]  if(hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!hasElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	21	None	replace
50	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.END_OF_EXPR))  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.END_OF_EXPR))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.END_OF_EXPR))  {	  if(!hasElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	21	None	replace
51	[BUG]  [BUGGY]  if(functionParens  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(functionParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	56	None	replace
52	[BUG]  [BUGGY]  if(functionParens  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(functionParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	56	None	replace
53	[BUG]  [BUGGY]  if(functionParens  ||  needsParens  ||  hasElseClause)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  needsParens  ||  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsParens  ||  hasElseClause)  {	  if(functionParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	56	None	replace
54	[BUG]  [BUGGY]  if(functionParens  ||  hasElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  hasElseClause)  {	  if(functionParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	56	None	replace
55	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);	  boolean    hasElseClause    =    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	61	None	replace
56	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR);  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR);	  boolean    hasElseClause    =    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	61	None	replace
57	[BUG]  [BUGGY]  boolean  hasElseClause  =  context!=  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context!=  Context.START_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context!=  Context.START_OF_EXPR);	  boolean    hasElseClause    =    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	61	None	replace
58	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR)&&  needsParens;  [CE]  unclosed  comment  [FE]                                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR)&&  needsParens;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR)&&  needsParens;	  boolean    hasElseClause    =    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	61	None	replace
59	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(!hasElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
60	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  ||  context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  ||  context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  ||  context!=  Context.START_OF_EXPR)  {	  if(!hasElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
61	[BUG]  [BUGGY]  if(hasElseClause  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(!hasElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
62	[BUG]  [BUGGY]  if(!dependsOn(context,  needsParens))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!dependsOn(context,  needsParens))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!dependsOn(context,  needsParens))  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
63	[BUG]  [BUGGY]  if(dependsOn(context,  hasElseClause))  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  hasElseClause))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  hasElseClause))  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
64	[BUG]  [BUGGY]  if(dependsOn(context,  hasElse))  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  hasElse))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  hasElse))  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
65	[BUG]  [BUGGY]  if(dependsOn(context,  needsParens)||  hasElseClause)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  needsParens)||  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  needsParens)||  hasElseClause)  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
66	[BUG]  [BUGGY]  if(dependsOn(context,  needsParens)&&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  needsParens)&&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  needsParens)&&  hasElseClause)  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
67	[BUG]  [BUGGY]  if(dependsOn(context,  childCount))  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  childCount))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  childCount))  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
68	[BUG]  [BUGGY]  if(dependsOn(context,  needsParens)||  isEnabled(context))  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  needsParens)||  isEnabled(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  needsParens)||  isEnabled(context))  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
69	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  context!=  Context.START_OF_EXPR)  {	  if(!ambiguousElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
70	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  context  ==  Context.STATEMENT)  {	  if(!ambiguousElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
71	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ==  Context.START_OF_EXPR)  {	  if(!ambiguousElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
72	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  context  ==  Context.END_OF_EXPR)  {	  if(!ambiguousElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
73	[BUG]  [BUGGY]  if(!ambiguousElseClause  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  ||  context  ==  Context.START_OF_EXPR)  {	  if(!ambiguousElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
74	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	12	None	replace
75	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR;  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	12	None	replace
76	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_CLAUSE;  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_CLAUSE;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_CLAUSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	12	None	replace
77	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_OBJECTLIT;  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_OBJECTLIT;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_OBJECTLIT;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	12	None	replace
78	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.hasChildren();  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.hasChildren();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	12	None	replace
79	[BUG]  [BUGGY]  if(!  needsParens  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!  needsParens  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!  needsParens  &&  hasElseClause)  {	  if(!    needsParens)    {    	non-compiled	[CE]  unclosed  comment	29	None	replace
80	[BUG]  [BUGGY]  if(!  needsParens  &&  first.getType()  ==  Token.GETPROP)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!  needsParens  &&  first.getType()  ==  Token.GETPROP)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!  needsParens  &&  first.getType()  ==  Token.GETPROP)  {	  if(!    needsParens)    {    	non-compiled	[CE]  unclosed  comment	29	None	replace
81	[BUG]  [BUGGY]  if(hasElseClause  ||  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  ||  first!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  ||  first!=  Context.START_OF_EXPR)  {	  if(needsParens    ||    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	66	None	replace
82	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  ||  needsParens!=  Context.START_OF_EXPR)  {	  if(needsParens    ||    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	66	None	replace
83	[BUG]  [BUGGY]  if(needsParens  ||  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  ||  first  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||  first  ==  Context.START_OF_EXPR)  {	  if(needsParens    ||    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	66	None	replace
84	[BUG]  [BUGGY]  if(hasElseClause  ||  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  ||  first  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  ||  first  ==  Context.START_OF_EXPR)  {	  if(needsParens    ||    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	66	None	replace
85	[BUG]  [BUGGY]  if(hasElse  &&  context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  context!=  Context.START_OF_EXPR)  {	  if(hasElse    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
86	[BUG]  [BUGGY]  if(hasElse  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  ||  context  ==  Context.START_OF_EXPR)  {	  if(hasElse    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
87	[BUG]  [BUGGY]  if(hasElse  &&  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  context  ==  Context.END_OF_EXPR)  {	  if(hasElse    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
88	[BUG]  [BUGGY]  if(!hasElseParens)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseParens)  {	  if(!neededParens)    {    	non-compiled	[CE]  unclosed  comment	52	None	replace
89	[BUG]  [BUGGY]  if(!neededParens  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!neededParens  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!neededParens  &&  hasElseClause)  {	  if(!neededParens)    {    	non-compiled	[CE]  unclosed  comment	52	None	replace
90	[BUG]  [BUGGY]  if(!neededParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!neededParens  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!neededParens  &&  needsParens)  {	  if(!neededParens)    {    	non-compiled	[CE]  unclosed  comment	52	None	replace
91	[BUG]  [BUGGY]  if(hasElseClause  ||  usesParens)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  ||  usesParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  ||  usesParens)  {	  if(usesParens    ||    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	36	None	replace
92	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  hasElse)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ||  hasElse)  {	  if(needsParens    ||    hasElse)    {    	non-compiled	[CE]  unclosed  comment	55	None	replace
93	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  context)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  context)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  context)  {	  if(needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	63	None	replace
94	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  Context.START_OF_EXPR)  {	  if(needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	63	None	replace
95	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  Context.END_OF_EXPR)  {	  if(needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	63	None	replace
96	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  ||  needsParens  ==  Context.STATEMENT)  {	  if(needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	63	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2  &&  needsParens);  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  2  &&  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  2  &&  needsParens);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	78	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  0);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	78	None	replace
99	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2  -  childCount);  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  2  -  childCount);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  2  -  childCount);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	78	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2  -  needsParens);  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  2  -  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  2  -  needsParens);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	78	None	replace
101	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  3);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	78	None	replace
102	[BUG]  [BUGGY]  Node  first  =  n.getLastChild();  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  first  =  n.getLastChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  first  =  n.getLastChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	16	None	replace
103	[BUG]  [BUGGY]  Node  first  =  context.getFirstChild();  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  first  =  context.getFirstChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  first  =  context.getFirstChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	16	None	replace
104	[BUG]  [BUGGY]  Node  first  =  node.getFirstChild();  [CE]  unclosed  comment  [FE]                                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  first  =  node.getFirstChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  first  =  node.getFirstChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	16	None	replace
105	[BUG]  [BUGGY]  Node  first  =  n.getNext();  [CE]  unclosed  comment  [FE]                                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  first  =  n.getNext();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  first  =  n.getNext();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	16	None	replace
106	[BUG]  [BUGGY]  Node  first  =  this.n.getFirstChild();  [CE]  unclosed  comment  [FE]                                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  first  =  this.n.getFirstChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  first  =  this.n.getFirstChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	16	None	replace
107	[BUG]  [BUGGY]  Node  body  =  n.getLastChild();  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  body  =  n.getLastChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  body  =  n.getLastChild();	  Node    body    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	79	None	replace
108	[BUG]  [BUGGY]  Node  body  =  context.getFirstChild();  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  body  =  context.getFirstChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  body  =  context.getFirstChild();	  Node    body    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	79	None	replace
109	[BUG]  [BUGGY]  Node  body  =  first.getFirstChild();  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  body  =  first.getFirstChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  body  =  first.getFirstChild();	  Node    body    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	79	None	replace
110	[BUG]  [BUGGY]  Node  body  =  context.getLastChild();  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  body  =  context.getLastChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  body  =  context.getLastChild();	  Node    body    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	79	None	replace
111	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  body  =  node.getFirstChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  body  =  node.getFirstChild();	  Node    body    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	79	None	replace
112	[BUG]  [BUGGY]  Node  body  =  n.getNext();  [CE]  unclosed  comment  [FE]                                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  body  =  n.getNext();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  body  =  n.getNext();	  Node    body    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	79	None	replace
113	[BUG]  [BUGGY]  if(dependsParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsParens  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsParens  &&  needsParens)  {	  if(dependsParens)    {    	non-compiled	[CE]  unclosed  comment	54	None	replace
114	[BUG]  [BUGGY]  if(!dependsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!dependsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!dependsParens)  {	  if(dependsParens)    {    	non-compiled	[CE]  unclosed  comment	54	None	replace
115	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	65	None	replace
116	[BUG]  [BUGGY]  if(hasElseClause  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	65	None	replace
117	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	65	None	replace
118	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	65	None	replace
119	[BUG]  [BUGGY]  if(!usesParens)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!usesParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!usesParens)  {	  if(usesParens)    {    	non-compiled	[CE]  unclosed  comment	28	None	replace
120	[BUG]  [BUGGY]  if(hasElseClause  &&  needsParens  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  needsParens  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  needsParens  ==  Context.START_OF_EXPR)  {	  if(hasElseClause    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	43	None	replace
121	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  first  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  first  ==  Context.START_OF_EXPR)  {	  if(hasElseClause    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	43	None	replace
122	[BUG]  [BUGGY]  if(!hasElseClause  &&  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  first  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  first  ==  Context.START_OF_EXPR)  {	  if(hasElseClause    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	43	None	replace
123	[BUG]  [BUGGY]  if(hasElseClause  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(hasElseClause    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	43	None	replace
124	[BUG]  [BUGGY]  if(hasElseClause  &&  hasParens  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  hasParens  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  hasParens  ==  Context.START_OF_EXPR)  {	  if(hasElseClause    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	43	None	replace
125	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	14	None	replace
126	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_EXPR;  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_EXPR;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	14	None	replace
127	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_CLAUSE;  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_CLAUSE;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_CLAUSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	14	None	replace
128	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.START_OF_EXPR;  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.START_OF_EXPR;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.START_OF_EXPR;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	14	None	replace
129	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_ELSE;  [CE]  unclosed  comment  [FE]                                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_ELSE;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)||  context  ==  Context.END_OF_ELSE;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	14	None	replace
130	[BUG]  [BUGGY]  if(hasElse  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {	  if(    needsParens    &&    isEnabled(Context.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	83	None	replace
131	[BUG]  [BUGGY]  if(hasElseClause  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {	  if(    needsParens    &&    isEnabled(Context.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	83	None	replace
132	[BUG]  [BUGGY]  if(!hasElseClause  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {	  if(    needsParens    &&    isEnabled(Context.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	83	None	replace
133	[BUG]  [BUGGY]  if(!  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {	  if(    needsParens    &&    isEnabled(Context.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	83	None	replace
134	[BUG]  [BUGGY]  if(isEnabled(Context.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(isEnabled(Context.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Context.QUOTE_FIELD_NAMES))  {	  if(    needsParens    &&    isEnabled(Context.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	83	None	replace
135	[BUG]  [BUGGY]  if(  needsParens  &&  isEnabled(Context.START_OF_EXPR))  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(  needsParens  &&  isEnabled(Context.START_OF_EXPR))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(  needsParens  &&  isEnabled(Context.START_OF_EXPR))  {	  if(    needsParens    &&    isEnabled(Context.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	83	None	replace
136	[BUG]  [BUGGY]  if(isEnabled(Context.QUOTE_FIELD_NAMES)||  needsParens)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(isEnabled(Context.QUOTE_FIELD_NAMES)||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Context.QUOTE_FIELD_NAMES)||  needsParens)  {	  if(    needsParens    &&    isEnabled(Context.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	83	None	replace
137	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;	  boolean    hasElseClause    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	57	None	replace
138	[BUG]  [BUGGY]  boolean  hasElseClause  =  context!=  Context.START_OF_EXPR;  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context!=  Context.START_OF_EXPR;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context!=  Context.START_OF_EXPR;	  boolean    hasElseClause    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	57	None	replace
139	[BUG]  [BUGGY]  boolean  hasElseClause  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context!=  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR;	  boolean    hasElseClause    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	57	None	replace
140	[BUG]  [BUGGY]  if(first  ||  needsParens  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(first  ||  needsParens  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(first  ||  needsParens  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	68	None	replace
141	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  &&  needsParens  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  &&  needsParens  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  &&  needsParens  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	68	None	replace
142	[BUG]  [BUGGY]  if(childCount  ==  1  &&  needsParens  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(childCount  ==  1  &&  needsParens  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(childCount  ==  1  &&  needsParens  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	68	None	replace
143	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  &&  needsParens  ==  first)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  &&  needsParens  ==  first)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  &&  needsParens  ==  first)  {	  if(needsParens    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	68	None	replace
144	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	62	None	replace
145	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	62	None	replace
146	[BUG]  [BUGGY]  if(context  ==  Context.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	62	None	replace
147	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	62	None	replace
148	[BUG]  [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(first.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	62	None	replace
149	[BUG]  [BUGGY]  if(context!=  Context.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context!=  Context.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context!=  Context.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	62	None	replace
150	[BUG]  [BUGGY]  if(context!=  Context.START_OF_EXPR  &&  needsParens  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context!=  Context.START_OF_EXPR  &&  needsParens  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context!=  Context.START_OF_EXPR  &&  needsParens  ==  Context.START_OF_EXPR)  {	  if(context!=    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	42	None	replace
151	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {	  if(context!=    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	42	None	replace
152	[BUG]  [BUGGY]  if(context  ==  Context.END_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.END_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.END_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {	  if(context!=    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	42	None	replace
153	[BUG]  [BUGGY]  if(context!=  Context.START_OF_EXPR  ||  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context!=  Context.START_OF_EXPR  ||  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context!=  Context.START_OF_EXPR  ||  needsParens!=  Context.START_OF_EXPR)  {	  if(context!=    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	42	None	replace
154	[BUG]  [BUGGY]  if(first.getType()  ==  Token.GETPROP  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(first.getType()  ==  Token.GETPROP  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(first.getType()  ==  Token.GETPROP  ||  needsParens)  {	  if(n.getType()    ==    Token.GETPROP    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	47	None	replace
155	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  ||  needsParens)  {	  if(n.getType()    ==    Token.GETPROP    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	47	None	replace
156	[BUG]  [BUGGY]  if(c.getType()  ==  Token.GETPROP  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(c.getType()  ==  Token.GETPROP  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(c.getType()  ==  Token.GETPROP  ||  needsParens)  {	  if(n.getType()    ==    Token.GETPROP    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	47	None	replace
157	[BUG]  [BUGGY]  if(n.getType()!=  Token.GETPROP  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()!=  Token.GETPROP  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()!=  Token.GETPROP  &&  needsParens)  {	  if(n.getType()    ==    Token.GETPROP    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	47	None	replace
158	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ==  Context.END_OF_EXPR)  {	  if(!ambiguousElseClause    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	67	None	replace
159	[BUG]  [BUGGY]  if(!ambiguousElseClause  ||  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  ||  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  ||  needsParens!=  Context.START_OF_EXPR)  {	  if(!ambiguousElseClause    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	67	None	replace
160	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens!=  Context.END_OF_EXPR)  {	  if(!ambiguousElseClause    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	67	None	replace
161	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  >=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  >=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  >=  Context.START_OF_EXPR)  {	  if(!ambiguousElseClause    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	67	None	replace
162	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ==  Context.STATEMENT)  {	  if(!ambiguousElseClause    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	67	None	replace
163	[BUG]  [BUGGY]  if(!hasElse  &&  context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  context!=  Context.START_OF_EXPR)  {	  if(!hasElse    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	76	None	replace
164	[BUG]  [BUGGY]  if(!hasElse  &&  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  context  ==  Context.END_OF_EXPR)  {	  if(!hasElse    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	76	None	replace
165	[BUG]  [BUGGY]  if(!hasElse  &&  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  context  ==  Context.STATEMENT)  {	  if(!hasElse    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	76	None	replace
166	[BUG]  [BUGGY]  if(functionsParens  ||  hasElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  ||  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||  hasElseClause)  {	  if(functionsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	71	None	replace
167	[BUG]  [BUGGY]  if(functionsParens  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(functionsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	71	None	replace
168	[BUG]  [BUGGY]  if(functionsParens  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(functionsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	71	None	replace
169	[BUG]  [BUGGY]  if(functionsParens  ||  needsParens  ||  hasElseClause)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  ||  needsParens  ||  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||  needsParens  ||  hasElseClause)  {	  if(functionsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	71	None	replace
170	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  hasElseClause)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  ||  hasElseClause)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	49	None	replace
171	[BUG]  [BUGGY]  if(hasElseClause.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP)  {  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	49	None	replace
172	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  hasElseClause)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	49	None	replace
173	[BUG]  [BUGGY]  if(hasParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasParens  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasParens  &&  needsParens)  {	  if(hasParens)    {    	non-compiled	[CE]  unclosed  comment	26	None	replace
174	[BUG]  [BUGGY]  if(hasParens  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasParens  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasParens  ||  needsParens)  {	  if(hasParens)    {    	non-compiled	[CE]  unclosed  comment	26	None	replace
175	[BUG]  [BUGGY]  if(hasParens  &&  isEnabled(context))  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasParens  &&  isEnabled(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasParens  &&  isEnabled(context))  {	  if(hasParens)    {    	non-compiled	[CE]  unclosed  comment	26	None	replace
176	[BUG]  [BUGGY]  if(conditionsParens  &&  ambiguousElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(conditionsParens  &&  ambiguousElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(conditionsParens  &&  ambiguousElseClause)  {	  if(ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	34	None	replace
177	[BUG]  [BUGGY]  if(funcNeedsParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(funcNeedsParens  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(funcNeedsParens  &&  needsParens)  {	  if(ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	34	None	replace
178	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  needsParens);  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  1  &&  needsParens);	  Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	17	None	replace
179	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  ||  needsParens);  [CE]  unclosed  comment  [FE]                                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  1  ||  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  1  ||  needsParens);	  Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	17	None	replace
180	[BUG]  [BUGGY]  Preconditions.checkState(childCount!=  1);  [CE]  unclosed  comment  [FE]                                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount!=  1);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount!=  1);	  Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	17	None	replace
181	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2  &&  needsParens);  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  2  &&  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  2  &&  needsParens);	  Context.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	80	None	replace
182	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2  -  needsParens);  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  2  -  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  2  -  needsParens);	  Context.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	80	None	replace
183	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2  -  childCount);  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  2  -  childCount);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  2  -  childCount);	  Context.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	80	None	replace
184	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2  +  needsParens);  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  2  +  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  2  +  needsParens);	  Context.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	80	None	replace
185	[BUG]  [BUGGY]  if(!ambiguousElseClause  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(!ambiguousElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	3	None	replace
186	[BUG]  [BUGGY]  if(!ambiguousElseClause  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  ||  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(!ambiguousElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	3	None	replace
187	[BUG]  [BUGGY]  if(!ambiguousElseClause  ||  needsParens  ||  context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  ||  needsParens  ||  context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  ||  needsParens  ||  context!=  Context.START_OF_EXPR)  {	  if(!ambiguousElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	3	None	replace
188	[BUG]  [BUGGY]  if(usesParens  ||  ambiguousElseClause)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(usesParens  ||  ambiguousElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  ||  ambiguousElseClause)  {	  if(!ambiguousElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	3	None	replace
189	[BUG]  [BUGGY]  if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	22	None	replace
190	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	22	None	replace
191	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	22	None	replace
192	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasElseClause)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasElseClause)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	22	None	replace
193	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens  ||  hasElseClause)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens  ||  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens  ||  hasElseClause)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	22	None	replace
194	[BUG]  [BUGGY]  if(funcNeedsParens  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(funcNeedsParens  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(funcNeedsParens  ||  needsParens)  {	  if(ambiguousElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	35	None	replace
195	[BUG]  [BUGGY]  if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  needsParens))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  needsParens))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  needsParens))  {	  if(!hasElseClause    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	20	None	replace
196	[BUG]  [BUGGY]  if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {	  if(!hasElseClause    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	20	None	replace
197	[BUG]  [BUGGY]  if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {	  if(!hasElseClause    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	20	None	replace
198	[BUG]  [BUGGY]  if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  needsParens))  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  needsParens))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  needsParens))  {	  if(!hasElseClause    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	20	None	replace
199	[BUG]  [BUGGY]  if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {	  if(hasElse    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	24	None	replace
200	[BUG]  [BUGGY]  if(hasElse  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasElse    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	24	None	replace
201	[BUG]  [BUGGY]  if(hasParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasElse    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	24	None	replace
202	[BUG]  [BUGGY]  if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  needsParens))  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  needsParens))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  needsParens))  {	  if(hasElse    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	24	None	replace
203	[BUG]  [BUGGY]  add( "delete ");  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  add( "delete ");  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	add( "delete ");	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
204	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  add( "delete ",  needsParens);  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  add( "delete ",  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  2);  add( "delete ",  needsParens);	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
205	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2);  add( "delete ");  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  2);  add( "delete ");  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  2);  add( "delete ");	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
206	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  add( "delete ");  [CE]  unclosed  comment  [FE]                                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  add( "delete ");  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  0);  add( "delete ");	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
207	[BUG]  [BUGGY]  add( "delete ",  needsParens);  [CE]  unclosed  comment  [FE]                                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  add( "delete ",  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	add( "delete ",  needsParens);	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
208	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  context))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  context))  {	  if(!ambiguousElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	64	None	replace
209	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.START_OF_EXPR))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.START_OF_EXPR))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.START_OF_EXPR))  {	  if(!ambiguousElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	64	None	replace
210	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!ambiguousElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	64	None	replace
211	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.END_OF_EXPR))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.END_OF_EXPR))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(context  ==  Context.END_OF_EXPR))  {	  if(!ambiguousElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	64	None	replace
212	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  if(!ambiguousElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	64	None	replace
213	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  hasElseParens)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  hasElseParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  hasElseParens)  {	  if(context.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	46	None	replace
214	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  hasElse)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  hasElse)  {	  if(context.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	46	None	replace
215	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context.getType()  ==  Token.NAME)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context.getType()  ==  Token.NAME)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context.getType()  ==  Token.NAME)  {	  if(context.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	46	None	replace
216	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context.getType()  ==  Token.SETPROP)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context.getType()  ==  Token.SETPROP)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context.getType()  ==  Token.SETPROP)  {	  if(context.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	46	None	replace
217	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  ==  Context.START_OF_EXPR)  {	  if(!hasElseClause    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	69	None	replace
218	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  ==  Context.END_OF_EXPR)  {	  if(!hasElseClause    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	69	None	replace
219	[BUG]  [BUGGY]  if(!hasElseClause  ||  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  ||  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  ||  needsParens!=  Context.START_OF_EXPR)  {	  if(!hasElseClause    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	69	None	replace
220	[BUG]  [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(first.getType()  ==  Token.GETPROP  &&  hasElseClause)  {	  if(first.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	45	None	replace
221	[BUG]  [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  hasElseParens)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  hasElseParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(first.getType()  ==  Token.GETPROP  &&  hasElseParens)  {	  if(first.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	45	None	replace
222	[BUG]  [BUGGY]  if(!hasElseClause  &&  context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  context!=  Context.START_OF_EXPR)  {	  if(!hasElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	7	None	replace
223	[BUG]  [BUGGY]  if(!hasElseClause  &&  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  context  ==  Context.END_OF_EXPR)  {	  if(!hasElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	7	None	replace
224	[BUG]  [BUGGY]  if(!hasElseClause  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  ||  context  ==  Context.START_OF_EXPR)  {	  if(!hasElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	7	None	replace
225	[BUG]  [BUGGY]  if(!hasElseClause  &&  context!=  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  context!=  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  context!=  Context.STATEMENT)  {	  if(!hasElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	7	None	replace
226	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	82	None	replace
227	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	82	None	replace
228	[BUG]  [BUGGY]  if(context  ==  Context.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	82	None	replace
229	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	82	None	replace
230	[BUG]  [BUGGY]  if(context!=  Context.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context!=  Context.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context!=  Context.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	82	None	replace
231	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  add( "delete ",  needsParens);  [CE]  unclosed  comment  [FE]                                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  1);  add( "delete ",  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  1);  add( "delete ",  needsParens);	  Preconditions.checkState(childCount    ==    1);    add(   "delete   ",    needsParens);    	non-compiled	[CE]  unclosed  comment	18	None	replace
232	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  hasElseParens)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  hasElseParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  ||  hasElseParens)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElseParens)    {    	non-compiled	[CE]  unclosed  comment	48	None	replace
233	[BUG]  [BUGGY]  if(hasElseParens.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseParens.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseParens.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElseParens)    {    	non-compiled	[CE]  unclosed  comment	48	None	replace
234	[BUG]  [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.BEFORE_DANGLING_ELSE)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.BEFORE_DANGLING_ELSE)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.BEFORE_DANGLING_ELSE)  {	  if(context    ==    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	41	None	replace
235	[BUG]  [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(context    ==    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	41	None	replace
236	[BUG]  [BUGGY]  if(!hasElseClause  &&  childCount  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  childCount  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  childCount  ==  Context.START_OF_EXPR)  {	  if(!hasElseClause    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	39	None	replace
237	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.END_OF_EXPR)  {	  if(!hasElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	5	None	replace
238	[BUG]  [BUGGY]  if(!hasElseClause  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  ||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(!hasElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	5	None	replace
239	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  first!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  first!=  Context.START_OF_EXPR)  {	  if(hasElseClause    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	38	None	replace
240	[BUG]  [BUGGY]  if(functionsParens)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens)  {	  if(ambiguousElseClause)    {    	non-compiled	[CE]  unclosed  comment	72	None	replace
241	[BUG]  [BUGGY]  if(hasElseClause  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(hasElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	33	None	replace
242	[BUG]  [BUGGY]  if(hasElseClause  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasElseClause    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	19	None	replace
243	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasElseClause    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	19	None	replace
244	[BUG]  [BUGGY]  if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {	  if(hasElseClause    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	19	None	replace
245	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(!ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	1	None	replace
246	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  hasElseParens)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  hasElseParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  hasElseParens)  {	  if(!ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	1	None	replace
247	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(!ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	1	None	replace
248	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ||  context!=  Context.START_OF_EXPR)  {	  if(!ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	1	None	replace
249	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ||  context!=  Context.END_OF_EXPR)  {	  if(!ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	1	None	replace
250	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_EXPR;	  boolean    hasElseClause    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	58	None	replace
251	[BUG]  [BUGGY]  boolean  hasElseClause  =  context!=  Context.END_OF_EXPR;  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context!=  Context.END_OF_EXPR;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context!=  Context.END_OF_EXPR;	  boolean    hasElseClause    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	58	None	replace
252	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_ELSE;  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_ELSE;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_ELSE;	  boolean    hasElseClause    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	58	None	replace
253	[BUG]  [BUGGY]  if(functionNeedsParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionNeedsParens  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionNeedsParens  &&  needsParens)  {	  if(hasElse    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	27	None	replace
254	[BUG]  [BUGGY]  if(hasElseClause  ||  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  ||  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  ||  needsParens!=  Context.START_OF_EXPR)  {	  if(first    ||    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	40	None	replace
255	[BUG]  [BUGGY]  if(hasElse  ||  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  ||  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  ||  needsParens!=  Context.START_OF_EXPR)  {	  if(first    ||    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	40	None	replace
256	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  ||  needsParens!=  Context.END_OF_EXPR)  {	  if(first    ||    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	40	None	replace
257	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  add( "delete ");  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  1);  add( "delete ");  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  1);  add( "delete ");	  Preconditions.checkState(childCount    ==    1);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	15	None	replace
258	[BUG]  [BUGGY]  if(hasElseClause  &&  context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  context!=  Context.START_OF_EXPR)  {	  if(hasElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
259	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  hasElse)  {  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  ||  hasElse)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	50	None	replace
260	[BUG]  [BUGGY]  if(hasElse.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP)  {  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	50	None	replace
261	[BUG]  [BUGGY]  if(!hasParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasParens  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasParens  &&  needsParens)  {	  if(!hasParens)    {    	non-compiled	[CE]  unclosed  comment	37	None	replace
262	[BUG]  [BUGGY]  if(!hasParens  &&  needsParens.booleanValue())  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasParens  &&  needsParens.booleanValue())  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasParens  &&  needsParens.booleanValue())  {	  if(!hasParens)    {    	non-compiled	[CE]  unclosed  comment	37	None	replace
263	[BUG]  [BUGGY]  if(!hasParens  &&  isEnabled(context))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasParens  &&  isEnabled(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasParens  &&  isEnabled(context))  {	  if(!hasParens)    {    	non-compiled	[CE]  unclosed  comment	37	None	replace
264	[BUG]  [BUGGY]  if(!hasParens  &&  needsParens.equals(context))  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasParens  &&  needsParens.equals(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasParens  &&  needsParens.equals(context))  {	  if(!hasParens)    {    	non-compiled	[CE]  unclosed  comment	37	None	replace
265	[BUG]  [BUGGY]  if(!hasParens  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasParens  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasParens  ||  needsParens)  {	  if(!hasParens)    {    	non-compiled	[CE]  unclosed  comment	37	None	replace
266	[BUG]  [BUGGY]  if(functionParens  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  &&  hasElseClause)  {	  if(functionParens    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	53	None	replace
267	[BUG]  [BUGGY]  if(!functionParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!functionParens  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!functionParens  &&  needsParens)  {	  if(functionParens    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	53	None	replace
268	[BUG]  [BUGGY]  if(functionParens  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(functionParens    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	53	None	replace
269	[BUG]  [BUGGY]  if(functionParens  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(functionParens    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	53	None	replace
270	[BUG]  [BUGGY]  if(hasElseClause  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  ||  context  ==  Context.END_OF_EXPR)  {	  if(hasElseClause    &&    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	11	None	replace
271	[BUG]  [BUGGY]  if(hasElseClause  &&  context!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  context!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  context!=  Context.END_OF_EXPR)  {	  if(hasElseClause    &&    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	11	None	replace
272	[BUG]  [BUGGY]  if(  needsParens  &&  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(  needsParens  &&  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(  needsParens  &&  context  ==  Context.END_OF_EXPR)  {	  if(hasElseClause    &&    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	11	None	replace
273	[BUG]  [BUGGY]  if(!hasElse  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(!hasElse    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	74	None	replace
274	[BUG]  [BUGGY]  if(!hasElse  &&  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  first  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  first  ==  Context.START_OF_EXPR)  {	  if(!hasElse    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	74	None	replace
275	[BUG]  [BUGGY]  if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	25	None	replace
276	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	25	None	replace
277	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasElseParens)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasElseParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasElseParens)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	25	None	replace
278	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasElseClause)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	25	None	replace
279	[BUG]  [BUGGY]  if(first!=  null  &&  first.getType()  ==  Token.GETPROP  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(first!=  null  &&  first.getType()  ==  Token.GETPROP  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(first!=  null  &&  first.getType()  ==  Token.GETPROP  &&  needsParens)  {	  if(first.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	45	None	replace
280	[BUG]  [BUGGY]  if(needsParens.getType()  ==  Token.GETPROP  &&  first.getType()  ==  Token.GETPROP)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens.getType()  ==  Token.GETPROP  &&  first.getType()  ==  Token.GETPROP)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens.getType()  ==  Token.GETPROP  &&  first.getType()  ==  Token.GETPROP)  {	  if(first.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	45	None	replace
281	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2  +  needsParens);  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  2  +  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  2  +  needsParens);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	78	None	replace
282	[BUG]  [BUGGY]  if(!hasElse  &&  first!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  first!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  first!=  Context.END_OF_EXPR)  {	  if(!hasElse    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	74	None	replace
283	[BUG]  [BUGGY]  if(needsParens  &&  n.getType()  ==  Token.GETPROP)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&  n.getType()  ==  Token.GETPROP)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  n.getType()  ==  Token.GETPROP)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElseParens)    {    	non-compiled	[CE]  unclosed  comment	48	None	replace
284	[BUG]  [BUGGY]  Node  first  =  n.removeFirstChild();  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  first  =  n.removeFirstChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  first  =  n.removeFirstChild();	  Node    first    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	16	None	replace
285	[BUG]  [BUGGY]  if(functionParens  ||  needsParens  ||  context.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  needsParens  ||  context.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsParens  ||  context.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(functionParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	56	None	replace
286	[BUG]  [BUGGY]  if(functionParens  ||  needsParens  ||  context.isEnabled(Feature.QUOTE_NON_NULL_OBJECTLIT))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  needsParens  ||  context.isEnabled(Feature.QUOTE_NON_NULL_OBJECTLIT))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsParens  ||  context.isEnabled(Feature.QUOTE_NON_NULL_OBJECTLIT))  {	  if(functionParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	56	None	replace
287	[BUG]  [BUGGY]  if(functionParens  ||  needsParens  ||  context.isEnabled(Feature.QUOTE_NULL_NON_NULL_OBJECTLIT))  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  needsParens  ||  context.isEnabled(Feature.QUOTE_NULL_NON_NULL_OBJECTLIT))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsParens  ||  context.isEnabled(Feature.QUOTE_NULL_NON_NULL_OBJECTLIT))  {	  if(functionParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	56	None	replace
288	[BUG]  [BUGGY]  if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  needsParens))  {	  if(hasElse    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	24	None	replace
289	[BUG]  [BUGGY]  if(hasElse  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasElse    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	24	None	replace
290	[BUG]  [BUGGY]  if(dependsParens  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsParens  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsParens  ||  needsParens)  {	  if(dependsParens)    {    	non-compiled	[CE]  unclosed  comment	54	None	replace
291	[BUG]  [BUGGY]  Context.checkState(childCount  ==  4);  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  4);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  4);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	13	None	replace
292	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  context!=  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  context!=  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  context!=  Context.STATEMENT)  {	  if(!ambiguousElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
293	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  context!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  context!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  context!=  Context.END_OF_EXPR)  {	  if(!ambiguousElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
294	[BUG]  [BUGGY]  if(!  needsParens  &&  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!  needsParens  &&  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!  needsParens  &&  context  ==  Context.START_OF_EXPR)  {	  if(!hasElse    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	76	None	replace
295	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.IN_FOR_INIT_CLAUSE)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.IN_FOR_INIT_CLAUSE)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.IN_FOR_INIT_CLAUSE)  {	  if(!ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	1	None	replace
296	[BUG]  [BUGGY]  if(funcNeedsParens  ||  needsElseClause)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(funcNeedsParens  ||  needsElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(funcNeedsParens  ||  needsElseClause)  {	  if(needsParens    ||    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	70	None	replace
297	[BUG]  [BUGGY]  if(needsParens  &&  needsElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&  needsElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  needsElseClause)  {	  if(needsParens    ||    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	70	None	replace
298	[BUG]  [BUGGY]  if(functionParens  ||  needsElseClause)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  needsElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsElseClause)  {	  if(needsParens    ||    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	70	None	replace
299	[BUG]  [BUGGY]  if(needsParens  ||!hasElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  ||!hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||!hasElseClause)  {	  if(!hasElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	5	None	replace
300	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needParens)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needParens)  {	  if(!hasElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	5	None	replace
301	[BUG]  [BUGGY]  if(usesParens  &&  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(usesParens  &&  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  &&  context  ==  Context.START_OF_EXPR)  {	  if(usesParens)    {    	non-compiled	[CE]  unclosed  comment	28	None	replace
302	[BUG]  [BUGGY]  if(usesParens  &&  context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(usesParens  &&  context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  &&  context!=  Context.START_OF_EXPR)  {	  if(usesParens)    {    	non-compiled	[CE]  unclosed  comment	28	None	replace
303	[BUG]  [BUGGY]  if(context!=  Context.END_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context!=  Context.END_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context!=  Context.END_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {	  if(context!=    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	42	None	replace
304	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_ELSE  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_ELSE  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_ELSE  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(context!=    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	42	None	replace
305	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_CLAUSE  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_CLAUSE  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_CLAUSE  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(context!=    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	42	None	replace
306	[BUG]  [BUGGY]  if(context!=  Context.START_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context!=  Context.START_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context!=  Context.START_OF_EXPR  &&  needsParens!=  Context.END_OF_EXPR)  {	  if(context!=    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	42	None	replace
307	[BUG]  [BUGGY]  if(needsParens  ||  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  ||  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||  context  ==  Context.STATEMENT)  {	  if(needsParens    &&    context    ==    Context.STATEMENT)    {    	non-compiled	[CE]  unclosed  comment	77	None	replace
308	[BUG]  [BUGGY]  if(needsParens  &&  context!=  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&  context!=  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  context!=  Context.STATEMENT)  {	  if(needsParens    &&    context    ==    Context.STATEMENT)    {    	non-compiled	[CE]  unclosed  comment	77	None	replace
309	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  ||  needsParens)  {	  if(context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
310	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_OBJECTLIT)  {	  if(context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
311	[BUG]  [BUGGY]  if(needsParens  ||!ambiguousElseClause)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  ||!ambiguousElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||!ambiguousElseClause)  {	  if(!ambiguousElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	3	None	replace
312	[BUG]  [BUGGY]  if(functionsParens  ||!ambiguousElseClause)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  ||!ambiguousElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||!ambiguousElseClause)  {	  if(!ambiguousElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	3	None	replace
313	[BUG]  [BUGGY]  if(usesParens  ||!ambiguousElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(usesParens  ||!ambiguousElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  ||!ambiguousElseClause)  {	  if(!ambiguousElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	3	None	replace
314	[BUG]  [BUGGY]  if(needsParens  &&!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!hasElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	21	None	replace
315	[BUG]  [BUGGY]  if(needsParens  &&!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!hasElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	21	None	replace
316	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELDS_NAMES))  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELDS_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELDS_NAMES))  {	  if(!hasElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	21	None	replace
317	[BUG]  [BUGGY]  if(functionsParens  &&  needsParens  >  1)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  &&  needsParens  >  1)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  &&  needsParens  >  1)  {	  if(functionsParens    &&    needsElse)    {    	non-compiled	[CE]  unclosed  comment	32	None	replace
318	[BUG]  [BUGGY]  if(!functionsParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!functionsParens  &&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!functionsParens  &&  needsParens)  {	  if(functionsParens    &&    needsElse)    {    	non-compiled	[CE]  unclosed  comment	32	None	replace
319	[BUG]  [BUGGY]  if(hasElse  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(!hasElse    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	51	None	replace
320	[BUG]  [BUGGY]  if(needsParens  &&  needsElse)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&  needsElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  needsElse)  {	  if(needsParens    ||    hasElse)    {    	non-compiled	[CE]  unclosed  comment	55	None	replace
321	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  4);  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  4);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  4);	  Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	17	None	replace
322	[BUG]  [BUGGY]  if(functionParens  &&  needsParens  &&  context.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  &&  needsParens  &&  context.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  &&  needsParens  &&  context.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(functionParens    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	53	None	replace
323	[BUG]  [BUGGY]  if(functionParens  &&  needsParens  &&  context.isFunctionDeclaration())  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  &&  needsParens  &&  context.isFunctionDeclaration())  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  &&  needsParens  &&  context.isFunctionDeclaration())  {	  if(functionParens    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	53	None	replace
324	[BUG]  [BUGGY]  if(functionParens  &&  hasElse)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  &&  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  &&  hasElse)  {	  if(functionParens    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	53	None	replace
325	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  needsParens  ||  first.getType()  ==  Token.SET)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  needsParens  ||  first.getType()  ==  Token.SET)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  ||  needsParens  ||  first.getType()  ==  Token.SET)  {	  if(n.getType()    ==    Token.GETPROP    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	47	None	replace
326	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETELEM  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETELEM  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETELEM  ||  needsParens)  {	  if(n.getType()    ==    Token.GETPROP    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	47	None	replace
327	[BUG]  [BUGGY]  if(needsParens  &&  n.getType()  ==  Token.GETPROP  &&  hasElse)  {  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&  n.getType()  ==  Token.GETPROP  &&  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  n.getType()  ==  Token.GETPROP  &&  hasElse)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	50	None	replace
328	[BUG]  [BUGGY]  if(needsParens  &&  first.getType()  ==  Token.GETPROP  &&  hasElse)  {  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&  first.getType()  ==  Token.GETPROP  &&  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  first.getType()  ==  Token.GETPROP  &&  hasElse)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	50	None	replace
329	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_ELSE);  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_ELSE);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_ELSE);	  boolean    hasElseClause    =    context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	61	None	replace
330	[BUG]  [BUGGY]  if(ambiguousElseClause  &&  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(ambiguousElseClause  &&  first!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(ambiguousElseClause  &&  first!=  Context.START_OF_EXPR)  {	  if(hasElseClause    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	38	None	replace
331	[BUG]  [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
332	[BUG]  [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
333	[BUG]  [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add( "n ");  }  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add( "n ");  }  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add( "n ");  }	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
334	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  hasElse  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  hasElse  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  &&  hasElse  ||  context  ==  Context.START_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	82	None	replace
335	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  hasElse;  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  hasElse;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  hasElse;	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	14	None	replace
336	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.hasChildren();  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.hasChildren();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  context.hasChildren();	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	14	None	replace
337	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR));  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR));  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR));	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	14	None	replace
338	[BUG]  [BUGGY]  if(needsParens  &&  ambiguousElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&  ambiguousElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  ambiguousElseClause)  {	  if(ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	34	None	replace
339	[BUG]  [BUGGY]  if(ambiguousElseClause  &&  needsParens  >  1)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(ambiguousElseClause  &&  needsParens  >  1)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(ambiguousElseClause  &&  needsParens  >  1)  {	  if(ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	34	None	replace
340	[BUG]  [BUGGY]  if(needsParens  &&  n.getType()  ==  Token.GETPROP  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&  n.getType()  ==  Token.GETPROP  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  n.getType()  ==  Token.GETPROP  &&  hasElseClause)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	49	None	replace
341	[BUG]  [BUGGY]  if(needsParens  &&  first.getType()  ==  Token.GETPROP  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  &&  first.getType()  ==  Token.GETPROP  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  first.getType()  ==  Token.GETPROP  &&  hasElseClause)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	49	None	replace
342	[BUG]  [BUGGY]  if(  needsParens  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(  needsParens  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(  needsParens  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	65	None	replace
343	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_ELSE;  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_ELSE;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_ELSE;	  boolean    hasElseClause    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	57	None	replace
344	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_INIT_CLAUSE;  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_INIT_CLAUSE;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_INIT_CLAUSE;	  boolean    hasElseClause    =    context    ==    Context.START_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	57	None	replace
345	[BUG]  [BUGGY]  if(!  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!hasElseClause    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	20	None	replace
346	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context.hasChildren())  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context.hasChildren())  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  needsParens  ||  context.hasChildren())  {	  if(context.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	46	None	replace
347	[BUG]  [BUGGY]  if(  needsParens  ||  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(  needsParens  ||  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(  needsParens  ||  isEnabled(Context.QUOTE_FIELD_NAMES))  {	  if(    needsParens    &&    isEnabled(Context.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	83	None	replace
348	[BUG]  [BUGGY]  if(  needsParens  &&  isEnabled(Context.IN_FOR_INIT_CLAUSE))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(  needsParens  &&  isEnabled(Context.IN_FOR_INIT_CLAUSE))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(  needsParens  &&  isEnabled(Context.IN_FOR_INIT_CLAUSE))  {	  if(    needsParens    &&    isEnabled(Context.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	83	None	replace
349	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR)||  needsParens;  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR)||  needsParens;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR)||  needsParens;	  boolean    hasElseClause    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	60	None	replace
350	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  add( "delete ",  needsParens);  [CE]  unclosed  comment  [FE]                                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  add( "delete ",  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  0);  add( "delete ",  needsParens);	  Preconditions.checkState(childCount    ==    1);    add(   "delete   ",    needsParens);    	non-compiled	[CE]  unclosed  comment	18	None	replace
351	[BUG]  [BUGGY]  if(needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	63	None	replace
352	[BUG]  [BUGGY]  if(needsParens  ||  context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  ||  context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||  context!=  Context.START_OF_EXPR)  {	  if(needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	63	None	replace
353	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  hasElse  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  hasElse  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  &&  hasElse  ||  context  ==  Context.END_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	62	None	replace
354	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context!=  Context.END_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	62	None	replace
355	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	22	None	replace
356	[BUG]  [BUGGY]  if(ambiguousElseClause  &&  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(ambiguousElseClause  &&  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(ambiguousElseClause  &&  context  ==  Context.START_OF_EXPR)  {	  if(hasElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
357	[BUG]  [BUGGY]  if(!hasParens  &&  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasParens  &&  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasParens  &&  context  ==  Context.START_OF_EXPR)  {	  if(!hasParens)    {    	non-compiled	[CE]  unclosed  comment	37	None	replace
358	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_ELSE;  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_ELSE;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR)||  context  ==  Context.START_OF_ELSE;	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	12	None	replace
359	[BUG]  [BUGGY]  Node  body  =  n.removeFirstChild();  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Node  body  =  n.removeFirstChild();  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  body  =  n.removeFirstChild();	  Node    body    =    n.getFirstChild();    	non-compiled	[CE]  unclosed  comment	79	None	replace
360	[BUG]  [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  1);  add( "delete ");  }  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  1);  add( "delete ");  }  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens)  {  Preconditions.checkState(childCount  ==  1);  add( "delete ");  }	  Preconditions.checkState(childCount    ==    1);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	15	None	replace
361	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_ELSE;  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_ELSE;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.END_OF_ELSE;	  boolean    hasElseClause    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	58	None	replace
362	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_INIT_CLAUSE;  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_INIT_CLAUSE;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.END_OF_INIT_CLAUSE;	  boolean    hasElseClause    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	58	None	replace
363	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.START_OF_INIT_CLAUSE;  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.START_OF_INIT_CLAUSE;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.START_OF_INIT_CLAUSE;	  boolean    hasElseClause    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	58	None	replace
364	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR  ||  context  ==  Context.START_OF_EXPR);	  boolean    hasElseClause    =    context    ==    Context.END_OF_EXPR;    	non-compiled	[CE]  unclosed  comment	58	None	replace
365	[BUG]  [BUGGY]  if(needsParens  ||  ambiguousElseClause)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens  ||  ambiguousElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||  ambiguousElseClause)  {	  if(ambiguousElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	35	None	replace
366	[BUG]  [BUGGY]  if(funcNeedsParens  ||  ambiguousElseClause)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(funcNeedsParens  ||  ambiguousElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(funcNeedsParens  ||  ambiguousElseClause)  {	  if(ambiguousElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	35	None	replace
367	[BUG]  [BUGGY]  if(!hasElseClause  &&  first!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  first!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  first!=  Context.END_OF_EXPR)  {	  if(!hasElseClause    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	39	None	replace
368	[BUG]  [BUGGY]  if(dependsOn(context,  needsParens)&&  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  needsParens)&&  first!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  needsParens)&&  first!=  Context.START_OF_EXPR)  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
369	[BUG]  [BUGGY]  if(dependsOn(context,  needsParens)||  context.hasChildren())  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  needsParens)||  context.hasChildren())  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  needsParens)||  context.hasChildren())  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
370	[BUG]  [BUGGY]  if(dependsOn(context)||  needsParens)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context)||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context)||  needsParens)  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
371	[BUG]  [BUGGY]  if(dependsOn(context,  needsParens)&&  isEnabled(context))  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  needsParens)&&  isEnabled(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  needsParens)&&  isEnabled(context))  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
372	[BUG]  [BUGGY]  if(dependsOn(context,  needsParens)&&  first.getType()  ==  Token.STRING)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  needsParens)&&  first.getType()  ==  Token.STRING)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  needsParens)&&  first.getType()  ==  Token.STRING)  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
373	[BUG]  [BUGGY]  if(context  ==  Context.IN_FOR_INIT_CLAUSE  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.IN_FOR_INIT_CLAUSE  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.IN_FOR_INIT_CLAUSE  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(context    ==    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	41	None	replace
374	[BUG]  [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.END_OF_EXPR)  {	  if(context    ==    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	41	None	replace
375	[BUG]  [BUGGY]  if(ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(ambiguousElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasElseClause    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	19	None	replace
376	[BUG]  [BUGGY]  if(ambiguousElseClause  &&  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(ambiguousElseClause  &&  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(ambiguousElseClause  &&  context  ==  Context.END_OF_EXPR)  {	  if(hasElseClause    &&    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	11	None	replace
377	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR)||  needsParens;  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR)||  needsParens;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR)||  needsParens;	  boolean    hasElseClause    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	59	None	replace
378	[BUG]  [BUGGY]  boolean  hasElseClause  =(context!=  Context.START_OF_EXPR)&&  needsParens;  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context!=  Context.START_OF_EXPR)&&  needsParens;  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context!=  Context.START_OF_EXPR)&&  needsParens;	  boolean    hasElseClause    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	59	None	replace
379	[BUG]  [BUGGY]  if(ambiguousElseClause  &&  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(ambiguousElseClause  &&  first  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(ambiguousElseClause  &&  first  ==  Context.START_OF_EXPR)  {	  if(hasElseClause    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	43	None	replace
380	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {	  if(!ambiguousElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	64	None	replace
381	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  context  ==  Context.START_OF_EXPR)  {	  if(!ambiguousElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	64	None	replace
382	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.START_OF_EXPR))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.START_OF_EXPR))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.START_OF_EXPR))  {	  if(!ambiguousElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	64	None	replace
383	[BUG]  [BUGGY]  if(!  needsParens  &&  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!  needsParens  &&  first!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!  needsParens  &&  first!=  Context.START_OF_EXPR)  {	  if(!    needsParens)    {    	non-compiled	[CE]  unclosed  comment	29	None	replace
384	[BUG]  [BUGGY]  if(!  needsParens  &&  isEnabled(context))  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!  needsParens  &&  isEnabled(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!  needsParens  &&  isEnabled(context))  {	  if(!    needsParens)    {    	non-compiled	[CE]  unclosed  comment	29	None	replace
385	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  ||  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  ||  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  ||  context  ==  Context.STATEMENT)  {	  if(!hasElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
386	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(context))  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  &&  isEnabled(context))  {	  if(!hasElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
387	[BUG]  [BUGGY]  if(childCount  ==  1  &&  needsParens  ||  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(childCount  ==  1  &&  needsParens  ||  first  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(childCount  ==  1  &&  needsParens  ||  first  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    first    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	68	None	replace
388	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens!=  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens!=  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens!=  Context.STATEMENT)  {	  if(!ambiguousElseClause    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	67	None	replace
389	[BUG]  [BUGGY]  if(context!=  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context!=  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context!=  Context.BEFORE_DANGLING_ELSE  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(context!=    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	42	None	replace
390	[BUG]  [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.END_OF_EXPR);  }  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.END_OF_EXPR);  }  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.END_OF_EXPR);  }	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
391	[BUG]  [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.START_OF_EXPR);  }  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.START_OF_EXPR);  }  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.START_OF_EXPR);  }	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
392	[BUG]  [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.END_OF_EXPR);  add( ") ");  }  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.END_OF_EXPR);  add( ") ");  }  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.END_OF_EXPR);  add( ") ");  }	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
393	[BUG]  [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.END_OF_EXPR);  add(first);  }  [CE]  unclosed  comment  [FE]                                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.END_OF_EXPR);  add(first);  }  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens)  {  Preconditions.checkState(childCount  ==  2);  add( "delete ");  }  else  {  add(context  ==  Context.END_OF_EXPR);  add(first);  }	  Preconditions.checkState(childCount    ==    2);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	81	None	replace
394	[BUG]  [BUGGY]  if(dependsOn(context,  needsParens)&&  isEnabled(Context.STATEMENT))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  needsParens)&&  isEnabled(Context.STATEMENT))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  needsParens)&&  isEnabled(Context.STATEMENT))  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
395	[BUG]  [BUGGY]  if(dependsOn(context,  needsParens)&&  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(dependsOn(context,  needsParens)&&  first  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  needsParens)&&  first  ==  Context.START_OF_EXPR)  {	  if(dependsOn(context,    needsParens))    {    	non-compiled	[CE]  unclosed  comment	75	None	replace
396	[BUG]  [BUGGY]  if(!hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasElse    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	24	None	replace
397	[BUG]  [BUGGY]  if(hasParens  &&  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasParens  &&  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasParens  &&  context  ==  Context.END_OF_EXPR)  {	  if(hasElseClause    &&    hasParens)    {    	non-compiled	[CE]  unclosed  comment	44	None	replace
398	[BUG]  [BUGGY]  if(!hasElse  &&  context!=  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  context!=  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  context!=  Context.STATEMENT)  {	  if(!hasElse    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	76	None	replace
399	[BUG]  [BUGGY]  if(context  ==  Context.END_OF_EXPR  &&  needsParens  ||  context  ==  Context.GETPROP)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.END_OF_EXPR  &&  needsParens  ||  context  ==  Context.GETPROP)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.END_OF_EXPR  &&  needsParens  ||  context  ==  Context.GETPROP)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.END_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	62	None	replace
400	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(context.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	46	None	replace
401	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  &&  isEnabled(Context.STATEMENT))  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  &&  isEnabled(Context.STATEMENT))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  needsParens  &&  isEnabled(Context.STATEMENT))  {	  if(context.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	46	None	replace
402	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  &&  context.hasChildren())  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens  &&  context.hasChildren())  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  needsParens  &&  context.hasChildren())  {	  if(context.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	46	None	replace
403	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  add( "delete ");  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  add( "delete ");  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  3);  add( "delete ");	  Preconditions.checkState(childCount    ==    1);    add(   "delete   ");    	non-compiled	[CE]  unclosed  comment	15	None	replace
404	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {	  if(!hasElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	21	None	replace
405	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELDS_NAMES))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELDS_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELDS_NAMES))  {	  if(!hasElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	21	None	replace
406	[BUG]  [BUGGY]  if(hasElse  ||  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  ||  first  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  ||  first  ==  Context.START_OF_EXPR)  {	  if(needsParens    ||    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	66	None	replace
407	[BUG]  [BUGGY]  if(functionParens  &&  needsParens  &&  isEnabled(context))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  &&  needsParens  &&  isEnabled(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  &&  needsParens  &&  isEnabled(context))  {	  if(functionParens    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	53	None	replace
408	[BUG]  [BUGGY]  if(functionParens  &&  needsParens  &&  hasElse)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  &&  needsParens  &&  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  &&  needsParens  &&  hasElse)  {	  if(functionParens    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	53	None	replace
409	[BUG]  [BUGGY]  if(!neededParens  &&  isEnabled(context))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!neededParens  &&  isEnabled(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!neededParens  &&  isEnabled(context))  {	  if(!neededParens)    {    	non-compiled	[CE]  unclosed  comment	52	None	replace
410	[BUG]  [BUGGY]  if(functionNeedsParens  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionNeedsParens  ||  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionNeedsParens  ||  needsParens)  {	  if(needsParens    ||    hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	70	None	replace
411	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1,  needsParens);  [CE]  unclosed  comment  [FE]                                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  1,  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  1,  needsParens);	  Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	17	None	replace
412	[BUG]  [BUGGY]  if(context  ==  Context.FIELD_NAMES  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.FIELD_NAMES  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.FIELD_NAMES  ||  context  ==  Context.START_OF_EXPR)  {	  if(context    ==    Context.START_OF_EXPR    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	41	None	replace
413	[BUG]  [BUGGY]  if(hasElseParens  &&  n.getType()  ==  Token.GETPROP)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseParens  &&  n.getType()  ==  Token.GETPROP)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseParens  &&  n.getType()  ==  Token.GETPROP)  {	  if(n.getType()    ==    Token.GETPROP    &&    hasElseParens)    {    	non-compiled	[CE]  unclosed  comment	48	None	replace
414	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2  -  1);  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  2  -  1);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  2  -  1);	  Context.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	80	None	replace
415	[BUG]  [BUGGY]  if(context!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context!=  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context!=  Context.START_OF_EXPR)  {	  if(context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
416	[BUG]  [BUGGY]  if(!neededParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!neededParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!neededParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {	  if(    needsParens    &&    isEnabled(Context.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	83	None	replace
417	[BUG]  [BUGGY]  if(!neededParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!neededParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!neededParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!hasElseClause    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	20	None	replace
418	[BUG]  [BUGGY]  if(!hasElse  &&  needsParens  &&  isEnabled(context))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  needsParens  &&  isEnabled(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  needsParens  &&  isEnabled(context))  {	  if(!hasElse    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	51	None	replace
419	[BUG]  [BUGGY]  if(!hasElse  &&  needsParens  ||  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElse  &&  needsParens  ||  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  needsParens  ||  context  ==  Context.STATEMENT)  {	  if(!hasElse    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	51	None	replace
420	[BUG]  [BUGGY]  if(hasElseClause  &&  context!=  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  context!=  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  context!=  Context.STATEMENT)  {	  if(hasElseClause    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
421	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.STATEMENT)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	82	None	replace
422	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  &&  n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(context  ==  Context.START_OF_EXPR  &&  n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  &&  n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	82	None	replace
423	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context!=  Context.START_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context!=  Context.START_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	12	None	replace
424	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1,  needsParens);  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Context.checkState(childCount  ==  1,  needsParens);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  1,  needsParens);	  Context.checkState(childCount    ==    1);    	non-compiled	[CE]  unclosed  comment	13	None	replace
425	[BUG]  [BUGGY]  if(hasElse  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(hasElse    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	27	None	replace
426	[BUG]  [BUGGY]  if(hasElse  &&  needsParens  &&  isEnabled(context))  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  needsParens  &&  isEnabled(context))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  needsParens  &&  isEnabled(context))  {	  if(hasElse    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	27	None	replace
427	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens!=  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  needsParens!=  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens!=  Context.STATEMENT)  {	  if(!hasElseClause    &&    needsParens!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	69	None	replace
428	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2  -  1);  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  Preconditions.checkState(childCount  ==  2  -  1);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  2  -  1);	  Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  unclosed  comment	78	None	replace
429	[BUG]  [BUGGY]  boolean  hasElseClause  =(context!=  Context.END_OF_EXPR);  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context!=  Context.END_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context!=  Context.END_OF_EXPR);	  boolean    hasElseClause    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	60	None	replace
430	[BUG]  [BUGGY]  boolean  needsElseClause  =(context  ==  Context.END_OF_EXPR);  [CE]  unclosed  comment  [FE]                                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsElseClause  =(context  ==  Context.END_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsElseClause  =(context  ==  Context.END_OF_EXPR);	  boolean    hasElseClause    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	60	None	replace
431	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  ||  context  ==  Context.STATEMENT)  {	  if(!ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	1	None	replace
432	[BUG]  [BUGGY]  if(hasElse  &&  context!=  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElse  &&  context!=  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  context!=  Context.STATEMENT)  {	  if(hasElse    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
433	[BUG]  [BUGGY]  if(functionParens  ||  needsParens  ||  context.isFunctionDeclaration())  {  [CE]  unclosed  comment  [FE]                ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  needsParens  ||  context.isFunctionDeclaration())  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsParens  ||  context.isFunctionDeclaration())  {	  if(functionParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	56	None	replace
434	[BUG]  [BUGGY]  if(functionParens  ||  needsParens  ||  context.isSyntheticBlock())  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  needsParens  ||  context.isSyntheticBlock())  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsParens  ||  context.isSyntheticBlock())  {	  if(functionParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	56	None	replace
435	[BUG]  [BUGGY]  if(functionParens  ||  needsParens  ||  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionParens  ||  needsParens  ||  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsParens  ||  context  ==  Context.STATEMENT)  {	  if(functionParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	56	None	replace
436	[BUG]  [BUGGY]  if(functionsParens  ||  needsParens  ||  context.isFunctionDeclaration())  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  ||  needsParens  ||  context.isFunctionDeclaration())  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||  needsParens  ||  context.isFunctionDeclaration())  {	  if(functionsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	71	None	replace
437	[BUG]  [BUGGY]  if(functionsParens  ||  needsParens  ||  context.isSyntheticBlock())  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  ||  needsParens  ||  context.isSyntheticBlock())  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||  needsParens  ||  context.isSyntheticBlock())  {	  if(functionsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	71	None	replace
438	[BUG]  [BUGGY]  if(functionsParens  ||  needsParens  ||  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionsParens  ||  needsParens  ||  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||  needsParens  ||  context  ==  Context.STATEMENT)  {	  if(functionsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	71	None	replace
439	[BUG]  [BUGGY]  if(usesParens  &&  ambiguousElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(usesParens  &&  ambiguousElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  &&  ambiguousElseClause)  {	  if(ambiguousElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	34	None	replace
440	[BUG]  [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  hasElse)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(first.getType()  ==  Token.GETPROP  &&  hasElse)  {	  if(first.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	45	None	replace
441	[BUG]  [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  needsParens  ||  first.getType()  ==  Token.SETPROP)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  needsParens  ||  first.getType()  ==  Token.SETPROP)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(first.getType()  ==  Token.GETPROP  &&  needsParens  ||  first.getType()  ==  Token.SETPROP)  {	  if(first.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	45	None	replace
442	[BUG]  [BUGGY]  if(function  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(function  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(function  ==  Context.START_OF_EXPR  ||  context  ==  Context.START_OF_EXPR)  {	  if(needsParens    ||    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	63	None	replace
443	[BUG]  [BUGGY]  if(hasParens  &&  isEnabled(Context.STATEMENT))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasParens  &&  isEnabled(Context.STATEMENT))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasParens  &&  isEnabled(Context.STATEMENT))  {	  if(hasParens)    {    	non-compiled	[CE]  unclosed  comment	26	None	replace
444	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasElse)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasElse)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasElse)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	25	None	replace
445	[BUG]  [BUGGY]  if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	25	None	replace
446	[BUG]  [BUGGY]  boolean  needsParens  =(context!=  Context.END_OF_EXPR);  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context!=  Context.END_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context!=  Context.END_OF_EXPR);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	14	None	replace
447	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  isEnabled(Context.STATEMENT);  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  isEnabled(Context.STATEMENT);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR)&&  isEnabled(Context.STATEMENT);	  boolean    needsParens    =(context    ==    Context.END_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	14	None	replace
448	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.STATEMENT))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.STATEMENT))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.STATEMENT))  {	  if(!ambiguousElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	64	None	replace
449	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.QUICK_OF_EXPR))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.QUICK_OF_EXPR))  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Context.QUICK_OF_EXPR))  {	  if(!ambiguousElseClause    &&    needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	64	None	replace
450	[BUG]  [BUGGY]  boolean  hasElseClause  =(context!=  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                            ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context!=  Context.START_OF_EXPR);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context!=  Context.START_OF_EXPR);	  boolean    hasElseClause    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	59	None	replace
451	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR)&&  isEnabled(Context.STATEMENT);  [CE]  unclosed  comment  [FE]                              ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR)&&  isEnabled(Context.STATEMENT);  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR)&&  isEnabled(Context.STATEMENT);	  boolean    hasElseClause    =(context    ==    Context.START_OF_EXPR);    	non-compiled	[CE]  unclosed  comment	59	None	replace
452	[BUG]  [BUGGY]  if(functionNeedsParens  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(functionNeedsParens  &&  hasElseClause)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionNeedsParens  &&  hasElseClause)  {	  if(hasElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	33	None	replace
453	[BUG]  [BUGGY]  if(hasElseClause  &&  needsParens  ||  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(     "delete       ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);      [BUGGY]  if(hasElseClause  &&  needsParens  ||  context  ==  Context.STATEMENT)  {  [BUGGY]      add(     "(     ");  }  add(     "{     ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  needsParens  ||  context  ==  Context.STATEMENT)  {	  if(hasElseClause    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	33	None	replace
