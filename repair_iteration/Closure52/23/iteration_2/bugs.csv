bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens)  {  [CE]  unclosed  comment  [FE]          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!ambiguousElseClause  &&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens)  {	  if(needsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	12	None	replace
2	[BUG]  [BUGGY]  if(hasElse  ||  needsParens)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElse  ||  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  ||  needsParens)  {	  if(needsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	12	None	replace
3	[BUG]  [BUGGY]  if(!ambiguousElseClause  ||  needsParens)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!ambiguousElseClause  ||  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  ||  needsParens)  {	  if(needsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	12	None	replace
4	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasElseClause  &&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens)  {	  if(needsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	12	None	replace
5	[BUG]  [BUGGY]  if(!hasElseClause  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasElseClause  ||  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  ||  needsParens)  {	  if(needsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	12	None	replace
6	[BUG]  [BUGGY]  if(hasElseClause  &&  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElseClause  &&  context  ==  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  context  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
7	[BUG]  [BUGGY]  if(!hasElseClause  &&  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasElseClause  &&  context  ==  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  context  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
8	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(context  ==  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
9	[BUG]  [BUGGY]  if(hasElse  &&  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElse  &&  context  ==  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  context  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
10	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!ambiguousElseClause  &&  context  ==  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  context  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
11	[BUG]  [BUGGY]  if(hasElseClause  &&  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElseClause  &&  context  ==  Context.END_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  context  ==  Context.END_OF_EXPR)  {	  if(needsParens    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
12	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                    ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  boolean  needsParens  =(context  ==  Context.START_OF_EXPR);  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.START_OF_EXPR);	      	non-compiled	[CE]  unclosed  comment	7	None	replace
13	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  [CE]  unclosed  comment  [FE]                      ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  Context.checkState(childCount  ==  1);  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  1);	      	non-compiled	[CE]  unclosed  comment	7	None	replace
14	[BUG]  [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR);  [CE]  unclosed  comment  [FE]                        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  boolean  needsParens  =(context  ==  Context.END_OF_EXPR);  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  needsParens  =(context  ==  Context.END_OF_EXPR);	      	non-compiled	[CE]  unclosed  comment	7	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  add( "delete ");  [CE]  unclosed  comment  [FE]                          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  Preconditions.checkState(childCount  ==  1);  add( "delete ");  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  1);  add( "delete ");	      	non-compiled	[CE]  unclosed  comment	7	None	replace
16	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild();  [CE]  unclosed  comment  [FE]                            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  Node  first  =  n.getFirstChild();  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  first  =  n.getFirstChild();	      	non-compiled	[CE]  unclosed  comment	7	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  [CE]  unclosed  comment  [FE]                              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  Preconditions.checkState(childCount  ==  1);  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  1);	      	non-compiled	[CE]  unclosed  comment	7	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  add( "delete ",  needsParens);  [CE]  unclosed  comment  [FE]                                ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  Preconditions.checkState(childCount  ==  1);  add( "delete ",  needsParens);  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  1);  add( "delete ",  needsParens);	      	non-compiled	[CE]  unclosed  comment	7	None	replace
19	[BUG]  [BUGGY]  if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
20	[BUG]  [BUGGY]  if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
21	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
22	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  needsParens)  {	  if(needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
23	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
24	[BUG]  [BUGGY]  if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
25	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  needsParens)  {	  if(needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
26	[BUG]  [BUGGY]  if(hasParens)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasParens)  {	  if(hasElse)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
27	[BUG]  [BUGGY]  if(hasElse  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElse  &&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  needsParens)  {	  if(hasElse)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
28	[BUG]  [BUGGY]  if(usesParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(usesParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens)  {	  if(hasElse)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
29	[BUG]  [BUGGY]  if(!  needsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!  needsParens)  {	  if(hasElse)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
30	[BUG]  [BUGGY]  if(needsParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(needsParens  &&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  needsParens)  {	  if(needsParens    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	13	None	replace
31	[BUG]  [BUGGY]  if(usesParens  &&  hasElse)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(usesParens  &&  hasElse)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  &&  hasElse)  {	  if(needsParens    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	13	None	replace
32	[BUG]  [BUGGY]  if(functionsParens  &&  needsElse)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(functionsParens  &&  needsElse)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  &&  needsElse)  {	  if(needsParens    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	13	None	replace
33	[BUG]  [BUGGY]  if(hasElseClause  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElseClause  &&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  needsParens)  {	  if(hasElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	5	None	replace
34	[BUG]  [BUGGY]  if(ambiguousElseClause  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(ambiguousElseClause  &&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(ambiguousElseClause  &&  needsParens)  {	  if(hasElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	5	None	replace
35	[BUG]  [BUGGY]  if(ambiguousElseClause  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(ambiguousElseClause  ||  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(ambiguousElseClause  ||  needsParens)  {	  if(hasElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	5	None	replace
36	[BUG]  [BUGGY]  if(usesParens  ||  hasElseClause)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(usesParens  ||  hasElseClause)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(usesParens  ||  hasElseClause)  {	  if(hasElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	5	None	replace
37	[BUG]  [BUGGY]  if(!hasParens)  {  [CE]  unclosed  comment  [FE]          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasParens)  {	  if(!ambiguousElseClause)    {    	non-compiled	[CE]  unclosed  comment	2	None	replace
38	[BUG]  [BUGGY]  if(hasElseClause  &&  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElseClause  &&  first!=  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  first!=  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
39	[BUG]  [BUGGY]  if(!hasElseClause  &&  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasElseClause  &&  first!=  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  first!=  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
40	[BUG]  [BUGGY]  if(first  ||  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(first  ||  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(first  ||  needsParens!=  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
41	[BUG]  [BUGGY]  if(context  ==  Context.START_OF_EXPR  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(context  ==  Context.START_OF_EXPR  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context  ==  Context.START_OF_EXPR  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
42	[BUG]  [BUGGY]  if(context!=  Context.START_OF_EXPR  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(context!=  Context.START_OF_EXPR  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context!=  Context.START_OF_EXPR  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
43	[BUG]  [BUGGY]  if(hasElseClause  &&  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElseClause  &&  first  ==  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  first  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
44	[BUG]  [BUGGY]  if(hasElseClause  &&  hasParens)  {  [CE]  unclosed  comment  [FE]        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElseClause  &&  hasParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElseClause  &&  hasParens)  {	  if(hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	1	None	replace
45	[BUG]  [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(first.getType()  ==  Token.GETPROP  &&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(first.getType()  ==  Token.GETPROP  &&  needsParens)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
46	[BUG]  [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens)  {  [CE]  unclosed  comment  [FE]                    ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(context.getType()  ==  Token.GETPROP  &&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(context.getType()  ==  Token.GETPROP  &&  needsParens)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
47	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                      ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  ||  needsParens)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
48	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  hasElseParens)  {  [CE]  unclosed  comment  [FE]                        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  hasElseParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  &&  hasElseParens)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
49	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  hasElseClause)  {  [CE]  unclosed  comment  [FE]                          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  hasElseClause)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  &&  hasElseClause)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
50	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  hasElse)  {  [CE]  unclosed  comment  [FE]                            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  hasElse)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  &&  hasElse)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
51	[BUG]  [BUGGY]  if(!hasElse  &&  needsParens)  {  [CE]  unclosed  comment  [FE]        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasElse  &&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  needsParens)  {	  if(!hasElse)    {    	non-compiled	[CE]  unclosed  comment	11	None	replace
52	[BUG]  [BUGGY]  if(!neededParens)  {  [CE]  unclosed  comment  [FE]        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!neededParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!neededParens)  {	  if(!hasElse)    {    	non-compiled	[CE]  unclosed  comment	11	None	replace
53	[BUG]  [BUGGY]  if(functionParens  &&  needsParens)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(functionParens  &&  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  &&  needsParens)  {	  if(needsParens    &&    hasElse)    {    	non-compiled	[CE]  unclosed  comment	13	None	replace
54	[BUG]  [BUGGY]  if(dependsParens)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(dependsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsParens)  {	  if(hasElse)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
55	[BUG]  [BUGGY]  if(needsParens  ||  hasElse)  {  [CE]  unclosed  comment  [FE]          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(needsParens  ||  hasElse)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||  hasElse)  {	  if(needsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	12	None	replace
56	[BUG]  [BUGGY]  if(functionParens  ||  needsParens)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(functionParens  ||  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionParens  ||  needsParens)  {	  if(needsParens    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	12	None	replace
57	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR;  [CE]  unclosed  comment  [FE]                    ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR;  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR;	      	non-compiled	[CE]  unclosed  comment	7	None	replace
58	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR;  [CE]  unclosed  comment  [FE]                      ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR;  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.END_OF_EXPR;	      	non-compiled	[CE]  unclosed  comment	7	None	replace
59	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR);  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.START_OF_EXPR);	      	non-compiled	[CE]  unclosed  comment	7	None	replace
60	[BUG]  [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR);  [CE]  unclosed  comment  [FE]                          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR);  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =(context  ==  Context.END_OF_EXPR);	      	non-compiled	[CE]  unclosed  comment	7	None	replace
61	[BUG]  [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR);  [CE]  unclosed  comment  [FE]                            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR);  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	boolean  hasElseClause  =  context  ==  Context.START_OF_EXPR);	      	non-compiled	[CE]  unclosed  comment	7	None	replace
62	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.END_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
63	[BUG]  [BUGGY]  if(needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
64	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
65	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
66	[BUG]  [BUGGY]  if(needsParens  ||  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(needsParens  ||  first!=  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||  first!=  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
67	[BUG]  [BUGGY]  if(!ambiguousElseClause  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!ambiguousElseClause  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!ambiguousElseClause  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
68	[BUG]  [BUGGY]  if(needsParens  &&  first  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(needsParens  &&  first  ==  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  first  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
69	[BUG]  [BUGGY]  if(!hasElseClause  &&  needsParens!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasElseClause  &&  needsParens!=  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElseClause  &&  needsParens!=  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
70	[BUG]  [BUGGY]  if(needsParens  ||  hasElseClause)  {  [CE]  unclosed  comment  [FE]                ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(needsParens  ||  hasElseClause)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  ||  hasElseClause)  {	  if(hasElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	5	None	replace
71	[BUG]  [BUGGY]  if(functionsParens  ||  needsParens)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(functionsParens  ||  needsParens)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(functionsParens  ||  needsParens)  {	  if(hasElseClause    ||    needsParens)    {    	non-compiled	[CE]  unclosed  comment	5	None	replace
72	[BUG]  [BUGGY]  if(ambiguousElseClause)  {  [CE]  unclosed  comment  [FE]        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(ambiguousElseClause)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(ambiguousElseClause)  {	  if(hasElseClause)    {    	non-compiled	[CE]  unclosed  comment	1	None	replace
73	[BUG]  [BUGGY]  if(hasElse  &&  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(hasElse  &&  first!=  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(hasElse  &&  first!=  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
74	[BUG]  [BUGGY]  if(!hasElse  &&  first!=  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasElse  &&  first!=  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  first!=  Context.START_OF_EXPR)  {	  if(needsParens    &&    first!=    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	10	None	replace
75	[BUG]  [BUGGY]  if(dependsOn(context,  needsParens))  {  [CE]  unclosed  comment  [FE]              ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(dependsOn(context,  needsParens))  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(dependsOn(context,  needsParens))  {	  if(hasElse)    {    	non-compiled	[CE]  unclosed  comment	4	None	replace
76	[BUG]  [BUGGY]  if(!hasElse  &&  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(!hasElse  &&  context  ==  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(!hasElse  &&  context  ==  Context.START_OF_EXPR)  {	  if(needsParens    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
77	[BUG]  [BUGGY]  if(needsParens  &&  context  ==  Context.STATEMENT)  {  [CE]  unclosed  comment  [FE]            ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(needsParens  &&  context  ==  Context.STATEMENT)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(needsParens  &&  context  ==  Context.STATEMENT)  {	  if(needsParens    &&    context    ==    Context.START_OF_EXPR)    {    	non-compiled	[CE]  unclosed  comment	9	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  [CE]  unclosed  comment  [FE]                    ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  Preconditions.checkState(childCount  ==  2);  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  2);	      	non-compiled	[CE]  unclosed  comment	7	None	replace
79	[BUG]  [BUGGY]  Node  body  =  n.getFirstChild();  [CE]  unclosed  comment  [FE]                      ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  Node  body  =  n.getFirstChild();  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Node  body  =  n.getFirstChild();	      	non-compiled	[CE]  unclosed  comment	7	None	replace
80	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2);  [CE]  unclosed  comment  [FE]                        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  Context.checkState(childCount  ==  2);  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Context.checkState(childCount  ==  2);	      	non-compiled	[CE]  unclosed  comment	7	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  add( "delete ");  [CE]  unclosed  comment  [FE]                          ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  Preconditions.checkState(childCount  ==  2);  add( "delete ");  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	Preconditions.checkState(childCount  ==  2);  add( "delete ");	      	non-compiled	[CE]  unclosed  comment	7	None	replace
82	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [CE]  unclosed  comment  [FE]                  ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(n.getType()  ==  Token.GETPROP  &&  needsParens  ||  context  ==  Context.START_OF_EXPR)  {	  if(n.getType()    ==    Token.GETPROP    &&    needsParens)    {    	non-compiled	[CE]  unclosed  comment	6	None	replace
83	[BUG]  [BUGGY]  if(  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [CE]  unclosed  comment  [FE]        ComparisonFailure    [CONTEXT]    break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  add(   "delete     ");  add(first);  break;  case  Token.OBJECTLIT:  {  boolean  needsParens  =  (context  ==  Context.START_OF_EXPR);    [BUGGY]  if(  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {  [BUGGY]    add(   "(   ");  }  add(   "{   ");  for  (Node  c  =  first;  c  !=  null;  c  =  c.getNext())  {  if  (c  !=  first)  {  cc.listSeparator();  }  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	649	649	1	replace	if(  needsParens  &&  isEnabled(Context.QUOTE_FIELD_NAMES))  {	  if(needsParens    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  unclosed  comment	8	None	replace
