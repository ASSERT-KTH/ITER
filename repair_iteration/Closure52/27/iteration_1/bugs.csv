bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(hasElseClause)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]  if(hasElseClause)  {  [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	if(hasElseClause)  {	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
2	[BUG]  [BUGGY]  if(!ambiguousElseClause)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]  if(!ambiguousElseClause)  {  [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	if(!ambiguousElseClause)  {	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
3	[BUG]  [BUGGY]  if(first)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]  if(first)  {  [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	if(first)  {	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
4	[BUG]  [BUGGY]  if(hasElseClause  ||  needsParens)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]  if(hasElseClause  ||  needsParens)  {  [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	if(hasElseClause  ||  needsParens)  {	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
5	[BUG]  [BUGGY]  if(hasElse)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]  if(hasElse)  {  [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	if(hasElse)  {	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
6	[BUG]  [BUGGY]  if(needsParens  ||  hasElseClause)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]  if(needsParens  ||  hasElseClause)  {  [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	if(needsParens  ||  hasElseClause)  {	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]    [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	  	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
8	[BUG]  [BUGGY]  if(ambiguousElseClause)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]  if(ambiguousElseClause)  {  [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	if(ambiguousElseClause)  {	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
9	[BUG]  [BUGGY]  if(needsParens  &&  first!=  null)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]  if(needsParens  &&  first!=  null)  {  [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	if(needsParens  &&  first!=  null)  {	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
10	[BUG]  [BUGGY]  if(needsParens  &&  hasElseClause)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]  if(needsParens  &&  hasElseClause)  {  [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	if(needsParens  &&  hasElseClause)  {	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
11	[BUG]  [BUGGY]  if(needsParens  &&  first  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  cc.addNumber(d);  }  else  {  addExpr(c,  1);  }  }  add( ": ");  addExpr(c.getFirstChild(),  1);  }  }  add( "} ");  [BUGGY]  if(needsParens  &&  first  ==  null)  {  [BUGGY]  add( ") ");  }  break;  }  case  Token.SWITCH:  add( "switch( ");  add(first);  add( ") ");  cc.beginBlock();  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.22941573387056174	686	686	1	replace	if(needsParens  &&  first  ==  null)  {	if  (needsParens)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
