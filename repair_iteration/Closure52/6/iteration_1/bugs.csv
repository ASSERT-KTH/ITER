bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);  [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING);  [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING);	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString());  [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString());	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);  [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]    [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	  	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING);  [BUGGY]  String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING);	Preconditions.checkState(c.getType()  ==  Token.STRING);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
