bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.GET);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.GET);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.GET);    	non-compiled	[CE]  	52	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.GET);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.GET);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.GET);    	non-compiled	[CE]  orphaned  case	52	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.BLOCK);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.BLOCK);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.BLOCK);    	non-compiled	[CE]  orphaned  case	21	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.BLOCK);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.BLOCK);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.BLOCK);    	non-compiled	[CE]  orphaned  case	21	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.BLOCK);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.BLOCK);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.BLOCK);    	non-compiled	[CE]  orphaned  case	21	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  case	81	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  case	81	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  case	81	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  case	81	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EMPTY);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EMPTY);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EMPTY);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  case	81	None	replace
11	[BUG]  [BUGGY]  Context  c  =  getContextForNoInOperator(context,  n);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNoInOperator(context,  n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNoInOperator(context,  n);	  Context    c    =    getContextForNoInOperator(context);    	non-compiled	[CE]  orphaned  case	75	None	replace
12	[BUG]  [BUGGY]  Context  c  =  getContextForNoInOperator(n);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNoInOperator(n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNoInOperator(n);	  Context    c    =    getContextForNoInOperator(context);    	non-compiled	[CE]  orphaned  case	75	None	replace
13	[BUG]  [BUGGY]  Context  c  =  getContextForNonEmpty(context);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNonEmpty(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNonEmpty(context);	  Context    c    =    getContextForNoInOperator(context);    	non-compiled	[CE]  orphaned  case	75	None	replace
14	[BUG]  [BUGGY]  Context  c  =  getContextForGenerator(context);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForGenerator(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForGenerator(context);	  Context    c    =    getContextForNoInOperator(context);    	non-compiled	[CE]  orphaned  case	75	None	replace
15	[BUG]  [BUGGY]  Context  c  =  getContextForNonOperator(context);  [CE]  orphaned  case  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNonOperator(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNonOperator(context);	  Context    c    =    getContextForNoInOperator(context);    	non-compiled	[CE]  orphaned  case	75	None	replace
16	[BUG]  [BUGGY]  Context  c  =  getContextInOperator(context);  [CE]  orphaned  case  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextInOperator(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextInOperator(context);	  Context    c    =    getContextForNoInOperator(context);    	non-compiled	[CE]  orphaned  case	75	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  +  1);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  +  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  +  1);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getCharacterIndex());    	non-compiled	[CE]  orphaned  case	79	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  >  0);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  >  0);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  >  0);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getCharacterIndex());    	non-compiled	[CE]  orphaned  case	79	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getCharacterIndex());  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getCharacterIndex());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING,  c.getCharacterIndex());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getCharacterIndex());    	non-compiled	[CE]  orphaned  case	79	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  }  );  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  }  );  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  }  );	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getCharacterIndex());    	non-compiled	[CE]  	79	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getLastChild());  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getLastChild());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getLastChild());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getFirstChild());    	non-compiled	[CE]  orphaned  case	62	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  n.getFirstChild());  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  n.getFirstChild());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  n.getFirstChild());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getFirstChild());    	non-compiled	[CE]  orphaned  case	62	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getChildCount());  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getChildCount());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getChildCount());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getFirstChild());    	non-compiled	[CE]  orphaned  case	62	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getFirstChild());  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getFirstChild());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING,  c.getFirstChild());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getFirstChild());    	non-compiled	[CE]  orphaned  case	62	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getNext());  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getNext());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getNext());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getFirstChild());    	non-compiled	[CE]  orphaned  case	62	None	replace
26	[BUG]  [BUGGY]  Context  c  =  createContext(n);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createContext(n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createContext(n);	  Context    c    =    createContext(context);    	non-compiled	[CE]  orphaned  case	66	None	replace
27	[BUG]  [BUGGY]  Context  c  =  createContext(context,  n);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createContext(context,  n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createContext(context,  n);	  Context    c    =    createContext(context);    	non-compiled	[CE]  	66	None	replace
28	[BUG]  [BUGGY]  Context  c  =  createContext(n,  context);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createContext(n,  context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createContext(n,  context);	  Context    c    =    createContext(context);    	non-compiled	[CE]  	66	None	replace
29	[BUG]  [BUGGY]  Context  c  =  createContext(context,  n.getFirstChild());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createContext(context,  n.getFirstChild());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createContext(context,  n.getFirstChild());	  Context    c    =    createContext(context);    	non-compiled	[CE]  	66	None	replace
30	[BUG]  [BUGGY]  Context  c  =  createContext(context,  rhsContext);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createContext(context,  rhsContext);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createContext(context,  rhsContext);	  Context    c    =    createContext(context);    	non-compiled	[CE]  	66	None	replace
31	[BUG]  [BUGGY]  Context  c  =  getContext(context);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContext(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContext(context);	  Context    c    =    createContext(context);    	non-compiled	[CE]  	66	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	11	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	11	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	11	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING  ||  context.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING  ||  context.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()!=  Token.STRING  ||  context.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.SET);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.SET);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.SET);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.SET);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.SET);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.SET);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.SET);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.SET);    	non-compiled	[CE]  	34	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING  &&  context.getType()  ==  Token.SET);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING  &&  context.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()!=  Token.STRING  &&  context.getType()  ==  Token.SET);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.SET);    	non-compiled	[CE]  	34	None	replace
42	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getString()  +  1);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getString()  +  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  c.getString()  +  1);	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
43	[BUG]  [BUGGY]  Context.checkState(c.getType()!=  Token.STRING,  c.getString());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()!=  Token.STRING,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()!=  Token.STRING,  c.getString());	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
44	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  n.getString());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  n.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  n.getString());	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
45	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getLineno());  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getLineno());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  c.getLineno());	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
46	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getChar());  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getChar());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  c.getChar());	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
47	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getString()  ||  c.getType()  ==  Token.GET);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getString()  ||  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  c.getString()  ||  c.getType()  ==  Token.GET);	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.NAME);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.NAME);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  	4	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.NAME);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.NAME);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  	4	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.EXPR_RESULT);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  	9	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.EXPR_RESULT);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  	9	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.EXPR_RESULT);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.EXPR_RESULT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  	9	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  >>  Token.EXPR_RESULT);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  >>  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  >>  Token.EXPR_RESULT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  	9	None	replace
54	[BUG]  [BUGGY]  Node  c  =  context.getFirstChild();  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  c  =  context.getFirstChild();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  c  =  context.getFirstChild();	  Node    c    =    n.getFirstChild();    	non-compiled	[CE]  	42	None	replace
55	[BUG]  [BUGGY]  Node  c  =  n.getLastChild();  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  c  =  n.getLastChild();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  c  =  n.getLastChild();	  Node    c    =    n.getFirstChild();    	non-compiled	[CE]  	42	None	replace
56	[BUG]  [BUGGY]  Node  c  =  context.getCurrentNode();  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  c  =  context.getCurrentNode();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  c  =  context.getCurrentNode();	  Node    c    =    n.getFirstChild();    	non-compiled	[CE]  	42	None	replace
57	[BUG]  [BUGGY]  Node  c  =  context.getLastChild();  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  c  =  context.getLastChild();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  c  =  context.getLastChild();	  Node    c    =    n.getFirstChild();    	non-compiled	[CE]  	42	None	replace
58	[BUG]  [BUGGY]  Node  c  =  context.getContextNode();  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  c  =  context.getContextNode();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  c  =  context.getContextNode();	  Node    c    =    n.getFirstChild();    	non-compiled	[CE]  	42	None	replace
59	[BUG]  [BUGGY]  Node  c  =  context.getCurrentStructure();  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  c  =  context.getCurrentStructure();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  c  =  context.getCurrentStructure();	  Node    c    =    n.getFirstChild();    	non-compiled	[CE]  	42	None	replace
60	[BUG]  [BUGGY]  Node  c  =  context.next();  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  c  =  context.next();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  c  =  context.next();	  Node    c    =    n.getFirstChild();    	non-compiled	[CE]  	42	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.SET);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.SET);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.SET);    	non-compiled	[CE]  	33	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.SET);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.SET);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.SET);    	non-compiled	[CE]  	33	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING  ||  c.getType()  ==  Token.SET);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()!=  Token.STRING  ||  c.getType()  ==  Token.SET);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.SET);    	non-compiled	[CE]  	31	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.BLOCK);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.BLOCK);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	24	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.BLOCK);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	24	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	24	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()!=  Token.STRING  ||  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	24	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.END);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.END);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.END);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.START);    	non-compiled	[CE]  	29	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.START);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.START);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.START);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.START);    	non-compiled	[CE]  	29	None	replace
70	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  add(c,  false);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  add(c,  false);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  add(c,  false);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  	43	None	replace
71	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  add(c,  n);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  add(c,  n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  add(c,  n);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
72	[BUG]  [BUGGY]  Context  c  =  n.getCurrentContext();  add(c);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  n.getCurrentContext();  add(c);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  n.getCurrentContext();  add(c);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
73	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  add(n);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  add(n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  add(n);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
74	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  add(n,  c);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  add(n,  c);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  add(n,  c);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
75	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  add(c,  null);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  add(c,  null);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  add(c,  null);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
76	[BUG]  [BUGGY]  Context  c  =  getCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getCurrentContext(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getCurrentContext(context);	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
77	[BUG]  [BUGGY]  Context  c  =  getCurrentContext().getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getCurrentContext().getCurrentContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getCurrentContext().getCurrentContext();	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
78	[BUG]  [BUGGY]  Context  c  =  getCurrentContext().getRootContext();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getCurrentContext().getRootContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getCurrentContext().getRootContext();	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
79	[BUG]  [BUGGY]  Context  c  =  createCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createCurrentContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createCurrentContext();	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
80	[BUG]  [BUGGY]  Context  c  =  getCurrentContext(n);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getCurrentContext(n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getCurrentContext(n);	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  context.getString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  context.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  context.getString());	  Preconditions.checkState(context.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING,  n.getString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING,  n.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING,  n.getString());	  Preconditions.checkState(context.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING,  c.getString());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING,  c.getString());	  Preconditions.checkState(context.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
84	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  c);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  c);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  c);	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
85	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  0);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  0);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  0);	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
86	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  body);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  body);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  body);	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
87	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  -1);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  -1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  -1);	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
88	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  this);  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  this);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  this);	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
89	[BUG]  [BUGGY]  Context  c  =  context.createContext(n  +  1);  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n  +  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n  +  1);	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
90	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  1);  [CE]  illegal  start  of  expression  [FE]                                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  1);	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
91	[BUG]  [BUGGY]  Node  body  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  body  =  n.getLastChild();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  body  =  n.getLastChild();	  Node    body    =    c.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
92	[BUG]  [BUGGY]  Node  body  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  body  =  n.getFirstChild();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  body  =  n.getFirstChild();	  Node    body    =    c.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
93	[BUG]  [BUGGY]  Node  body  =  c.getNext();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  body  =  c.getNext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  body  =  c.getNext();	  Node    body    =    c.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
94	[BUG]  [BUGGY]  Node  body  =  context.getLastChild();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  body  =  context.getLastChild();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  body  =  context.getLastChild();	  Node    body    =    c.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
95	[BUG]  [BUGGY]  Node  body  =  c.next();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  body  =  c.next();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  body  =  c.next();	  Node    body    =    c.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.SET);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.SET);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.SET);    	non-compiled	[CE]  	32	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.SET);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.SET);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.SET);    	non-compiled	[CE]  	32	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharno());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharno());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharno());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getLineno());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
99	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getLineno()  +  1);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getLineno()  +  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getLineno()  +  1);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getLineno());    	non-compiled	[CE]  	16	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterEncoding());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterEncoding());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterEncoding());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getLineno());    	non-compiled	[CE]  	16	None	replace
101	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  n.getLineno());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  n.getLineno());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  n.getLineno());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getLineno());    	non-compiled	[CE]  	16	None	replace
102	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.STRING);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.STRING);	  Preconditions.checkState(context.getType()    ==    Token.STRING);    	non-compiled	[CE]  	37	None	replace
103	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  Preconditions.checkState(c.getType()  ==  Token.STRING);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  Preconditions.checkState(c.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  Preconditions.checkState(c.getType()  ==  Token.STRING);	  Preconditions.checkState(context.getType()    ==    Token.STRING);    	non-compiled	[CE]  	37	None	replace
104	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.GET);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.GET);	  Preconditions.checkState(context.getType()    ==    Token.STRING);    	non-compiled	[CE]  	37	None	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GETELEM);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GETELEM);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GETELEM);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GETELEM);    	non-compiled	[CE]  	59	None	replace
106	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GETPROP);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GETPROP);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GETPROP);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GETELEM);    	non-compiled	[CE]  	59	None	replace
107	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.GETELEM);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.GETELEM);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.GETELEM);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GETELEM);    	non-compiled	[CE]  	59	None	replace
108	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.GETELEM);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.GETELEM);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.GETELEM);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GETELEM);    	non-compiled	[CE]  	59	None	replace
109	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.GETELEM);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.GETELEM);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.GETELEM);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GETELEM);    	non-compiled	[CE]  	59	None	replace
110	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.NAME);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.NAME);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.NAME);    	non-compiled	[CE]  	6	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.NAME);    	non-compiled	[CE]  	6	None	replace
112	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.NAME);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.NAME);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.NAME);    	non-compiled	[CE]  	6	None	replace
113	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.NAME);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.NAME);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.NAME);    	non-compiled	[CE]  	6	None	replace
114	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.NAME);    	non-compiled	[CE]  	6	None	replace
115	[BUG]  [BUGGY]  Context.checkArgument(c.getType()  ==  Token.STRING);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkArgument(c.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkArgument(c.getType()  ==  Token.STRING);	  Preconditions.checkArgument(c.getType()!=    Token.STRING);    	non-compiled	[CE]  	49	None	replace
116	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  >=  Token.STRING);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  >=  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  >=  Token.STRING);	  Preconditions.checkArgument(c.getType()!=    Token.STRING);    	non-compiled	[CE]  	49	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.STRING);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(n.getType()!=  Token.STRING);	  Preconditions.checkArgument(c.getType()!=    Token.STRING);    	non-compiled	[CE]  	49	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getChar());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getChar());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING,  c.getChar());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getChar());    	non-compiled	[CE]  	17	None	replace
119	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getLocalName());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getLocalName());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getLocalName());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getChar());    	non-compiled	[CE]  	17	None	replace
120	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	7	None	replace
121	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	7	None	replace
122	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING,  c.getString());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()!=  Token.STRING,  c.getString());	  Preconditions.checkState(c.getType()!=    Token.STRING,    c.getString());    	non-compiled	[CE]  	13	None	replace
123	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING,  c.getString());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()!=  Token.STRING,  c.getString());	  Preconditions.checkState(c.getType()!=    Token.STRING,    c.getString());    	non-compiled	[CE]  	13	None	replace
124	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GET);    	non-compiled	[CE]  	46	None	replace
125	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.STRING);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.STRING);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GET);    	non-compiled	[CE]  	46	None	replace
126	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.GET);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.GET);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GET);    	non-compiled	[CE]  	46	None	replace
127	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.SET);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.SET);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GET);    	non-compiled	[CE]  	46	None	replace
128	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.CATCH);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()!=  Token.CATCH);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  	53	None	replace
129	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.CATCH);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.CATCH);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  	53	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH  ||  c.getType()  ==  Token.SET);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH  ||  c.getType()  ==  Token.SET);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  	53	None	replace
131	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	20	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString();	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getString()    +    1);    	non-compiled	[CE]  	14	None	replace
133	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString()));  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString()));  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString()));	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getString()    +    1);    	non-compiled	[CE]  	14	None	replace
134	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.BLOCK);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.BLOCK);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	57	None	replace
135	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.BLOCK);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	57	None	replace
136	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.BLOCK);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.BLOCK);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	57	None	replace
137	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.BLOCK);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.BLOCK);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	57	None	replace
138	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.BLOCK);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	22	None	replace
139	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING  &&  c.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING  &&  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()!=  Token.STRING  &&  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
140	[BUG]  [BUGGY]  Preconditions.checkState(fn.getType()  ==  Token.STRING);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(fn.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(fn.getType()  ==  Token.STRING);	  Preconditions.checkState(n.getType()!=    Token.STRING);    	non-compiled	[CE]  not  a  statement	36	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	60	None	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	60	None	replace
143	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	60	None	replace
144	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  Preconditions.checkState(c.getType()!=  Token.STRING);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  Preconditions.checkState(c.getType()!=  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  Preconditions.checkState(c.getType()!=  Token.STRING);	  Preconditions.checkState(context.getType()!=    Token.STRING);    	non-compiled	[CE]  not  a  statement	38	None	replace
145	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.GET);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.GET);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.GET);    	non-compiled	[CE]  not  a  statement	51	None	replace
146	[BUG]  [BUGGY]  Context  c  =  createContext();  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createContext();	  Context    c    =    getContext();    	non-compiled	[CE]  not  a  statement	44	None	replace
147	[BUG]  [BUGGY]  Context  c  =  getContext().getCurrentContext();  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContext().getCurrentContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContext().getCurrentContext();	  Context    c    =    getContext();    	non-compiled	[CE]  not  a  statement	44	None	replace
148	[BUG]  [BUGGY]  Context  c  =  getContext().getCurrentNode();  [CE]  orphaned  case  [FE]                                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContext().getCurrentNode();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContext().getCurrentNode();	  Context    c    =    getContext();    	non-compiled	[CE]  orphaned  case	44	None	replace
149	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.NAME  &&  c.getType()  ==  Token.STRING);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.NAME  &&  c.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.NAME  &&  c.getType()  ==  Token.STRING);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	1	None	replace
150	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	74	None	replace
151	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	74	None	replace
152	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT,  c.getString());  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT,  c.getString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT,    c.getString());    	non-compiled	[CE]  not  a  statement	82	None	replace
153	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getString());  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT,    c.getString());    	non-compiled	[CE]  not  a  statement	82	None	replace
154	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT,  c.getString());  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT,  c.getString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT,    c.getString());    	non-compiled	[CE]  not  a  statement	82	None	replace
155	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT,  c.getString());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT,  c.getString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT,    c.getString());    	non-compiled	[CE]  	82	None	replace
156	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getChar());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getChar());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getChar());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT,    c.getString());    	non-compiled	[CE]  	82	None	replace
157	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.EXPR_RESULT,  c.getString());  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.EXPR_RESULT,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.EXPR_RESULT,  c.getString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT,    c.getString());    	non-compiled	[CE]  orphaned  case	82	None	replace
158	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.CATCH);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.CATCH);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.CATCH);    	non-compiled	[CE]  orphaned  case	55	None	replace
159	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SET);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SET);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SET);    	non-compiled	[CE]  orphaned  case	47	None	replace
160	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.SET);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.SET);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SET);    	non-compiled	[CE]  orphaned  case	47	None	replace
161	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.SET);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.SET);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SET);    	non-compiled	[CE]  orphaned  case	47	None	replace
162	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SET);    	non-compiled	[CE]  orphaned  case	47	None	replace
163	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(t.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);	  Preconditions.checkState(t.getType()    ==    Token.STRING);    	non-compiled	[CE]  not  a  statement	72	None	replace
164	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(t.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);	  Preconditions.checkState(t.getType()    ==    Token.STRING);    	non-compiled	[CE]  not  a  statement	72	None	replace
165	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.STRING  ||  t.getType()  ==  Token.SET);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.STRING  ||  t.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(t.getType()  ==  Token.STRING  ||  t.getType()  ==  Token.SET);	  Preconditions.checkState(t.getType()    ==    Token.STRING);    	non-compiled	[CE]  not  a  statement	72	None	replace
166	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.CATCH);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  not  a  statement	54	None	replace
167	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.END);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.END);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.END);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.END);    	non-compiled	[CE]  not  a  statement	26	None	replace
168	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.END);  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.END);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.END);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.END);    	non-compiled	[CE]  not  a  statement	26	None	replace
169	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.END);  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.END);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.END);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.END);    	non-compiled	[CE]  not  a  statement	26	None	replace
170	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.END);  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.END);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.END);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.END);    	non-compiled	[CE]  not  a  statement	26	None	replace
171	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  context);  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  context);	  Context    c    =    context.createContext(context);    	non-compiled	[CE]  not  a  statement	68	None	replace
172	[BUG]  [BUGGY]  Context  c  =  context.createContext(rhsContext);  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(rhsContext);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(rhsContext);	  Context    c    =    context.createContext(context);    	non-compiled	[CE]  not  a  statement	68	None	replace
173	[BUG]  [BUGGY]  Context  c  =  context.createContext(context,  n);  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(context,  n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(context,  n);	  Context    c    =    context.createContext(context);    	non-compiled	[CE]  not  a  statement	68	None	replace
174	[BUG]  [BUGGY]  Context  c  =  context.createContext();  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext();	  Context    c    =    context.createContext(context);    	non-compiled	[CE]  not  a  statement	68	None	replace
175	[BUG]  [BUGGY]  Context  c  =  context.createContext(fn);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(fn);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(fn);	  Context    c    =    context.createContext(context);    	non-compiled	[CE]  	68	None	replace
176	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getChars());  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getChars());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING,  c.getChars());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getChars());    	non-compiled	[CE]  orphaned  case	64	None	replace
177	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getChars()  ||  c.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getChars()  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getChars()  ||  c.getType()  ==  Token.SET);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getChars());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
178	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getChars()  ||  c.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getChars()  ||  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getChars()  ||  c.getType()  ==  Token.GET);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getChars());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
179	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING,  c.getChars());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING,  c.getChars());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING,  c.getChars());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getChars());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
180	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getCharString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getCharString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING,  c.getCharString());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getCharString());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
181	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING,  c.getCharString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING,  c.getCharString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING,  c.getCharString());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getCharString());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
182	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharString()  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharString()  +  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharString()  +  1);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getCharString());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
183	[BUG]  [BUGGY]  Context  c  =  n.getContext();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  n.getContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  n.getContext();	  Context    c    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
184	[BUG]  [BUGGY]  Context  c  =  context.getContext(n);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getContext(n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getContext(n);	  Context    c    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
185	[BUG]  [BUGGY]  Context  c  =  this.context.getContext();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  this.context.getContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  this.context.getContext();	  Context    c    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
186	[BUG]  [BUGGY]  Context  c  =  context.getStatementContext();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getStatementContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getStatementContext();	  Context    c    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
187	[BUG]  [BUGGY]  Context  c  =(context  ==  null)?  context.getContext()  :  context;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =(context  ==  null)?  context.getContext()  :  context;  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =(context  ==  null)?  context.getContext()  :  context;	  Context    c    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
188	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
189	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getJSType());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getJSType());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING,  c.getJSType());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getJSType());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
190	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  Token.GET);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  Token.GET);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getJSType());    	non-compiled	[CE]  	61	None	replace
191	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  +  1);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  +  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  +  1);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getJSType());    	non-compiled	[CE]  	61	None	replace
192	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  Token.SET);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  Token.SET);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getJSType());    	non-compiled	[CE]  	61	None	replace
193	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()!=  Token.GET);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()!=  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()!=  Token.GET);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getJSType());    	non-compiled	[CE]  	61	None	replace
194	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getQuotedString());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getQuotedString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getQuotedString());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getName());    	non-compiled	[CE]  	80	None	replace
195	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.NAME);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.NAME);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.NAME);    	non-compiled	[CE]  	3	None	replace
196	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.NAME  ||  c.getType()  ==  Token.STRING);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.NAME  ||  c.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.NAME  ||  c.getType()  ==  Token.STRING);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.NAME);    	non-compiled	[CE]  	3	None	replace
197	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.NAME);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  >=  Token.NAME);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.NAME);    	non-compiled	[CE]  	3	None	replace
198	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(n);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  rhsContext  =  Context.createContext(n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  rhsContext  =  Context.createContext(n);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  	65	None	replace
199	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(n,  context);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  rhsContext  =  Context.createContext(n,  context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  rhsContext  =  Context.createContext(n,  context);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  	65	None	replace
200	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(c);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  rhsContext  =  Context.createContext(c);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  rhsContext  =  Context.createContext(c);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  	65	None	replace
201	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  n);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  rhsContext  =  Context.createContext(context,  n);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  	65	None	replace
202	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  c);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  c);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  rhsContext  =  Context.createContext(context,  c);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  	65	None	replace
203	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  STATEMENT);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  STATEMENT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  rhsContext  =  Context.createContext(context,  STATEMENT);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  	65	None	replace
204	[BUG]  [BUGGY]  Context  c  =(context  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =(context  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =(context  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();	  Context    c    =    context.getCurrentContext();    	non-compiled	[CE]  	39	None	replace
205	[BUG]  [BUGGY]  Context  c  =  n.getCurrentContext();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  n.getCurrentContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  n.getCurrentContext();	  Context    c    =    context.getCurrentContext();    	non-compiled	[CE]  	39	None	replace
206	[BUG]  [BUGGY]  Context  c  =(context  ==  null)?  context.getCurrentContext()  :  context;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =(context  ==  null)?  context.getCurrentContext()  :  context;  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =(context  ==  null)?  context.getCurrentContext()  :  context;	  Context    c    =    context.getCurrentContext();    	non-compiled	[CE]  	39	None	replace
207	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext(n);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext(n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext(n);	  Context    c    =    context.getCurrentContext();    	non-compiled	[CE]  	39	None	replace
208	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()!=  Token.STRING  &&  c.getType()  ==  Token.CATCH);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  	56	None	replace
209	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EMPTY);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EMPTY);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EMPTY);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  	73	None	replace
210	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EMPTY);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EMPTY);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EMPTY);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  	73	None	replace
211	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EMPTY);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EMPTY);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EMPTY);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  	73	None	replace
212	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EMPTY);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EMPTY);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EMPTY);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  	73	None	replace
213	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EMPTY);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EMPTY);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EMPTY);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  	73	None	replace
214	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  	5	None	replace
215	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.NAME);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.NAME);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  	5	None	replace
216	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.NAME);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.NAME);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  	5	None	replace
217	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.NAME);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.NAME);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  	5	None	replace
218	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.NAME  ||  c.getType()  ==  Token.STRING);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.NAME  ||  c.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.NAME  ||  c.getType()  ==  Token.STRING);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  	5	None	replace
219	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [CE]  orphaned  default  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  orphaned  default	58	None	replace
220	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [CE]  orphaned  default  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.CATCH);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  orphaned  default	58	None	replace
221	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.CATCH);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  orphaned  default	58	None	replace
222	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.CATCH);  [CE]  orphaned  default  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.CATCH);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  orphaned  default	58	None	replace
223	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getString()  +  1);  [CE]  orphaned  default  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getString()  +  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getString()  +  1);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  orphaned  default	48	None	replace
224	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING,  c.getString());  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING,  c.getString());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  orphaned  default	48	None	replace
225	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getLineno());  [CE]  orphaned  default  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getLineno());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getLineno());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  orphaned  default	48	None	replace
226	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  n.getString());  [CE]  orphaned  default  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  n.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING,  n.getString());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  orphaned  default	48	None	replace
227	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getChar());  [CE]  orphaned  default  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getChar());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getChar());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  orphaned  default	48	None	replace
228	[BUG]  [BUGGY]  Node  body  =  context.getFirstChild();  [CE]  orphaned  default  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  body  =  context.getFirstChild();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  body  =  context.getFirstChild();	  Node    body    =    c.getFirstChild();    	non-compiled	[CE]  orphaned  default	41	None	replace
229	[BUG]  [BUGGY]  Node  body  =  c.removeFirstChild();  [CE]  orphaned  default  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  body  =  c.removeFirstChild();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  body  =  c.removeFirstChild();	  Node    body    =    c.getFirstChild();    	non-compiled	[CE]  orphaned  default	41	None	replace
230	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME,  c.getString());  [CE]  orphaned  default  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME,  c.getString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME,    c.getString());    	non-compiled	[CE]  orphaned  default	83	None	replace
231	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.NAME,  c.getString());  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.NAME,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.NAME,  c.getString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME,    c.getString());    	non-compiled	[CE]  orphaned  default	83	None	replace
232	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getString());  [CE]  orphaned  default  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME,    c.getString());    	non-compiled	[CE]  orphaned  default	83	None	replace
233	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.NAME,  c.getString());  [CE]  orphaned  default  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.NAME,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.NAME,  c.getString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME,    c.getString());    	non-compiled	[CE]  orphaned  default	83	None	replace
234	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getChar());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getChar());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getChar());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME,    c.getString());    	non-compiled	[CE]  	83	None	replace
235	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.NAME,  c.getString());  [CE]  orphaned  default  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.NAME,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.NAME,  c.getString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME,    c.getString());    	non-compiled	[CE]  orphaned  default	83	None	replace
236	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SCRIPT);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SCRIPT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SCRIPT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SCRIPT);    	non-compiled	[CE]  	69	None	replace
237	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.SCRIPT);  [CE]  orphaned  default  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.SCRIPT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.SCRIPT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SCRIPT);    	non-compiled	[CE]  orphaned  default	69	None	replace
238	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.SCRIPT);  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.SCRIPT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.SCRIPT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SCRIPT);    	non-compiled	[CE]  orphaned  default	69	None	replace
239	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.SCRIPT);  [CE]  orphaned  default  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.SCRIPT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.SCRIPT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SCRIPT);    	non-compiled	[CE]  orphaned  default	69	None	replace
240	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SCRIPT);  [CE]  orphaned  default  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SCRIPT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SCRIPT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SCRIPT);    	non-compiled	[CE]  orphaned  default	69	None	replace
241	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  default  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  default	12	None	replace
242	[BUG]  [BUGGY]  Context.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  default  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  default	12	None	replace
243	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);  [CE]  orphaned  default  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);	  Context.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  default	12	None	replace
244	[BUG]  [BUGGY]  Context.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  default  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()!=  Token.STRING  &&  c.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  default	12	None	replace
245	[BUG]  [BUGGY]  Context.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  default  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  default	12	None	replace
246	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  default  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  orphaned  default	12	None	replace
247	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.START);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.START);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  &&  c.getType()!=  Token.START);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.START);    	non-compiled	[CE]  	28	None	replace
248	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.START);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.START);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getType()  ==  Token.START);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.START);    	non-compiled	[CE]  	25	None	replace
249	[BUG]  [BUGGY]  Context.checkState(e.getType()  ==  Token.STRING);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(e.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(e.getType()  ==  Token.STRING);	  Preconditions.checkState(e.getType()    ==    Token.STRING);    	non-compiled	[CE]  	71	None	replace
250	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.SET);    	non-compiled	[CE]  	30	None	replace
251	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.NAME);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.NAME);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  	2	None	replace
252	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.STRING);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(n.getType()  ==  Token.STRING);	  Preconditions.checkState(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  	70	None	replace
253	[BUG]  [BUGGY]  Context  c  =  getContextForNoDeclaration(n);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNoDeclaration(n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNoDeclaration(n);	  Context    c    =    getContextForNoDeclaration(context);    	non-compiled	[CE]  	67	None	replace
254	[BUG]  [BUGGY]  Context  c  =  getContextForNoDeclaration(context,  n);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNoDeclaration(context,  n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNoDeclaration(context,  n);	  Context    c    =    getContextForNoDeclaration(context);    	non-compiled	[CE]  	67	None	replace
255	[BUG]  [BUGGY]  Context  c  =  getContextForNonEmptyDeclaration(context);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNonEmptyDeclaration(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNonEmptyDeclaration(context);	  Context    c    =    getContextForNoDeclaration(context);    	non-compiled	[CE]  	67	None	replace
256	[BUG]  [BUGGY]  Context  c  =  getContextForNoDeclaration(n,  context);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNoDeclaration(n,  context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNoDeclaration(n,  context);	  Context    c    =    getContextForNoDeclaration(context);    	non-compiled	[CE]  	67	None	replace
257	[BUG]  [BUGGY]  Context  c  =  getContextForNonDeclaration(context);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNonDeclaration(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNonDeclaration(context);	  Context    c    =    getContextForNoDeclaration(context);    	non-compiled	[CE]  	67	None	replace
258	[BUG]  [BUGGY]  Context  c  =  getContextForStatement(context);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForStatement(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForStatement(context);	  Context    c    =    getContextForNoDeclaration(context);    	non-compiled	[CE]  	67	None	replace
259	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	8	None	replace
260	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.BLOCK);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  context.getType()  ==  Token.BLOCK);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	23	None	replace
261	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.BLOCK);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()!=  Token.BLOCK);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	23	None	replace
262	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING  ||  context.getType()  ==  Token.BLOCK);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING  ||  context.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()!=  Token.STRING  ||  context.getType()  ==  Token.BLOCK);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	23	None	replace
263	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING  &&  context.getType()  ==  Token.BLOCK);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING  &&  context.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()!=  Token.STRING  &&  context.getType()  ==  Token.BLOCK);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	23	None	replace
264	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);	  Context.checkState(c.getType()    ==    Token.STRING);    	non-compiled	[CE]  	35	None	replace
265	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);	  Context.checkState(c.getType()    ==    Token.STRING);    	non-compiled	[CE]  	35	None	replace
266	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.STRING);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.STRING);	  Context.checkState(c.getType()    ==    Token.STRING);    	non-compiled	[CE]  	35	None	replace
267	[BUG]  [BUGGY]  Context.checkState(c.getType()!=  Token.STRING);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()!=  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()!=  Token.STRING);	  Context.checkState(c.getType()    ==    Token.STRING);    	non-compiled	[CE]  	35	None	replace
268	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getChars());  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getChars());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getChars());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	48	None	replace
269	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getFirstChild());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getFirstChild());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getFirstChild());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	48	None	replace
270	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getQuotedString());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getQuotedString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getQuotedString());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	48	None	replace
271	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getJSType());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getJSType());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getJSType());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	48	None	replace
272	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SET);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SET);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.SET);    	non-compiled	[CE]  	33	None	replace
273	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SET);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.SET);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.SET);    	non-compiled	[CE]  	33	None	replace
274	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharIndex());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharIndex());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharIndex());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getCharString());    	non-compiled	[CE]  	63	None	replace
275	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getSourceName());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getSourceName());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getSourceName());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getCharString());    	non-compiled	[CE]  	63	None	replace
276	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0  ||  c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(childCount  ==  0  ||  c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(childCount  ==  0  ||  c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	24	None	replace
277	[BUG]  [BUGGY]  Preconditions.checkState(fn.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(fn.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(fn.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	24	None	replace
278	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  >>  Token.BLOCK);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  >>  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  >>  Token.BLOCK);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.BLOCK);    	non-compiled	[CE]  	21	None	replace
279	[BUG]  [BUGGY]  Context  c  =  getCurrentContextIn();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getCurrentContextIn();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getCurrentContextIn();	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  	76	None	replace
280	[BUG]  [BUGGY]  Context  c  =  findCurrentContext();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  findCurrentContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  findCurrentContext();	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  	76	None	replace
281	[BUG]  [BUGGY]  Context  c  =  getCurrentContextForNode();  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getCurrentContextForNode();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getCurrentContextForNode();	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  	76	None	replace
282	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME  ||  c.getType()  ==  Token.GET);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME  ||  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME  ||  c.getType()  ==  Token.GET);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  	1	None	replace
283	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()!=  null);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()!=  null);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()!=  null);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getJSType());    	non-compiled	[CE]  	61	None	replace
284	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.isQuotedString());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.isQuotedString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.isQuotedString());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getJSType());    	non-compiled	[CE]  	61	None	replace
285	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.hasChildren());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.hasChildren());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.hasChildren());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getJSType());    	non-compiled	[CE]  	61	None	replace
286	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getCharString());  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getCharString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getCharString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME,    c.getString());    	non-compiled	[CE]  	83	None	replace
287	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getLineno());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getLineno());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getLineno());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME,    c.getString());    	non-compiled	[CE]  	83	None	replace
288	[BUG]  [BUGGY]  Context  c  =  getContextForNode(context);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNode(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNode(context);	  Context    c    =    context.getContext();    	non-compiled	[CE]  	40	None	replace
289	[BUG]  [BUGGY]  Context  c  =  context.createChildContext(n);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createChildContext(n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createChildContext(n);	  Context    c    =    context.getContext();    	non-compiled	[CE]  	40	None	replace
290	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.START);    	non-compiled	[CE]  	27	None	replace
291	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.START);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.START);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.START);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.START);    	non-compiled	[CE]  	27	None	replace
292	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	11	None	replace
293	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getFirstChild()  ==  Token.EXPR_RESULT);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getFirstChild()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getFirstChild()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	7	None	replace
294	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.END);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.END);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.END);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.END);    	non-compiled	[CE]  	26	None	replace
295	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getChars());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getChars());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  c.getChars());	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
296	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getFirstChild());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getFirstChild());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  c.getFirstChild());	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
297	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getJSType());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getJSType());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  c.getJSType());	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
298	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getJSIdentifier());  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getJSIdentifier());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  c.getJSIdentifier());	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
299	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getString()  ==  null);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getString()  ==  null);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getString()  ==  null);	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  	18	None	replace
300	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  	54	None	replace
301	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.CATCH);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.CATCH);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  	54	None	replace
302	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING,  c.getString());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(parent.getType()  ==  Token.STRING,  c.getString());	  Preconditions.checkState(context.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
303	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING,  c.getString()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING,  c.getString()  +  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING,  c.getString()  +  1);	  Preconditions.checkState(context.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
304	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  add(c,  true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  add(c,  true);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  add(c,  true);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
305	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  add(c,  this);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  add(c,  this);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  add(c,  this);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
306	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
307	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
308	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.CATCH);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
309	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getCharString());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getCharString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getCharString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
310	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.toString());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.toString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.toString());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
311	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.STRING  ||  t.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.STRING  ||  t.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(t.getType()  ==  Token.STRING  ||  t.getType()  ==  Token.GET);	  Preconditions.checkState(t.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
312	[BUG]  [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);	  Preconditions.checkState(e.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
313	[BUG]  [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);	  Preconditions.checkState(e.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
314	[BUG]  [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING,  c.getString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(e.getType()  ==  Token.STRING,  c.getString());	  Preconditions.checkState(e.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
315	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(parent.getType()  ==  Token.STRING);	  Preconditions.checkState(e.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
316	[BUG]  [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  ||  e.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  ||  e.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(e.getType()  ==  Token.STRING  ||  e.getType()  ==  Token.GET);	  Preconditions.checkState(e.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
317	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  >>  Token.SET);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  >>  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  &&  c.getType()  >>  Token.SET);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.SET);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
318	[BUG]  [BUGGY]  Context  c  =  createContext(context,  context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createContext(context,  context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createContext(context,  context);	  Context    c    =    createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
319	[BUG]  [BUGGY]  Context  c  =  createContext(context,  null);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createContext(context,  null);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createContext(context,  null);	  Context    c    =    createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
320	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
321	[BUG]  [BUGGY]  Preconditions.checkState(fn.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(fn.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(fn.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
322	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);	  Context.checkState(c.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
323	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);	  Context.checkState(c.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
324	[BUG]  [BUGGY]  Node  c  =  n.getNext();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  c  =  n.getNext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  c  =  n.getNext();	  Node    c    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
325	[BUG]  [BUGGY]  Node  c  =  first.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  c  =  first.getFirstChild();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  c  =  first.getFirstChild();	  Node    c    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
326	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.SCRIPT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.SCRIPT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.SCRIPT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
327	[BUG]  [BUGGY]  Context  c  =  context.getContext();  Preconditions.checkState(c.getType()  ==  Token.STRING);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getContext();  Preconditions.checkState(c.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getContext();  Preconditions.checkState(c.getType()  ==  Token.STRING);	  Preconditions.checkState(context.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
328	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()!=  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()!=  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()!=  Token.NAME);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
329	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
330	[BUG]  [BUGGY]  Preconditions.checkState(fn.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(fn.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(fn.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
331	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.SET);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.SET);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
332	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING);	  Preconditions.checkArgument(c.getType()!=    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
333	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getString()!=  null);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getString()!=  null);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getString()!=  null);	  Preconditions.checkArgument(c.getType()!=    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
334	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);	  Preconditions.checkState(c.getType()    >=    Token.STRING    ||    c.getType()    ==    Token.SET);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
335	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  JSError.make(JSError.IN_FOR_INIT_CLAUSE));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  JSError.make(JSError.IN_FOR_INIT_CLAUSE));  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  JSError.make(JSError.IN_FOR_INIT_CLAUSE));	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
336	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  false);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  false);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  false);	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
337	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  JSError.IN_FOR_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  JSError.IN_FOR_INIT_CLAUSE);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  JSError.IN_FOR_INIT_CLAUSE);	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
338	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GET);	  Preconditions.checkState(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
339	[BUG]  [BUGGY]  Context  c  =  this.context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  this.context.getCurrentContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  this.context.getCurrentContext();	  Context    c    =    context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
340	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.GET);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
341	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.GET);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
342	[BUG]  [BUGGY]  Context  c  =  context.createContext(false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(false);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(false);	  Context    c    =    context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
343	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.NAME);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
344	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.START  ||  c.getType()  ==  Token.STRING);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.START  ||  c.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.START  ||  c.getType()  ==  Token.STRING);	  Preconditions.checkState(c.getType()    ==    Token.STRING    &&    c.getType()    ==    Token.START);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
345	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING,  c.getString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  >=  Token.STRING,  c.getString());	  Preconditions.checkState(c.getType()!=    Token.STRING,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
346	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.STRING,  c.getString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.STRING,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(parent.getType()!=  Token.STRING,  c.getString());	  Preconditions.checkState(c.getType()!=    Token.STRING,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
347	[BUG]  [BUGGY]  Context  c  =  getContextForNoChild(n);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNoChild(n);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNoChild(n);	  Context    c    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
348	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.START);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.START);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.START);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.START);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
349	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.START);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.START);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.START);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.START);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
350	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  >  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  >  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex()  >  1);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getCharacterIndex());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
351	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.GET);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.GET);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
352	[BUG]  [BUGGY]  Context  c  =  getContextForNonEmptyContext(context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNonEmptyContext(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNonEmptyContext(context);	  Context    c    =    getContextForNoInOperator(context);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
353	[BUG]  [BUGGY]  Context  c  =  getContextForNonLocal(context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNonLocal(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNonLocal(context);	  Context    c    =    getContextForNoInOperator(context);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
354	[BUG]  [BUGGY]  Context  c  =  createContextForNoDeclaration(context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createContextForNoDeclaration(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createContextForNoDeclaration(context);	  Context    c    =    getContextForNoDeclaration(context);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
355	[BUG]  [BUGGY]  Context  c  =  getContextForPositiveDeclaration(context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForPositiveDeclaration(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForPositiveDeclaration(context);	  Context    c    =    getContextForNoDeclaration(context);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
356	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getCharacterIndex());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getCharacterIndex());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getCharacterIndex());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
357	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getName());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getName());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING,  c.getName());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
358	[BUG]  [BUGGY]  Node  c  =  n.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Node  c  =  n.removeFirstChild();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Node  c  =  n.removeFirstChild();	  Node    c    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
359	[BUG]  [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
360	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SCRIPT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SCRIPT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SCRIPT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
361	[BUG]  [BUGGY]  Context  c  =  createContext(context,  n.getLastChild());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  createContext(context,  n.getLastChild());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  createContext(context,  n.getLastChild());	  Context    c    =    createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
362	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
363	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getName());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getName());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  c.getName());	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
364	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING,  c.getCharacterIndex());	  Context.checkState(c.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
365	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.STRING);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(parent.getType()!=  Token.STRING);	  Preconditions.checkState(context.getType()!=    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
366	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getName());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING,  c.getName());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING,  c.getName());	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getName());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
367	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.NAME,  c.getString());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.NAME,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.NAME,  c.getString());	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
368	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.NAME,  c);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.NAME,  c);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  context.getType()  ==  Token.NAME,  c);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
369	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getString());	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
370	[BUG]  [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(e.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.BLOCK);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
371	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  null);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  null);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  null);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getJSType());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
372	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  Context.STATEMENT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getJSType()  ||  c.getJSType()  ==  Context.STATEMENT);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getJSType());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
373	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.START);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.START);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.START);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.START);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
374	[BUG]  [BUGGY]  Context  c  =  t.getContext();  Preconditions.checkState(c.getType()  ==  Token.STRING);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  t.getContext();  Preconditions.checkState(c.getType()  ==  Token.STRING);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  t.getContext();  Preconditions.checkState(c.getType()  ==  Token.STRING);	  Preconditions.checkState(t.getType()    ==    Token.STRING);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
375	[BUG]  [BUGGY]  Context  c  =  getCurrentContextForNoInOperator();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getCurrentContextForNoInOperator();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getCurrentContextForNoInOperator();	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
376	[BUG]  [BUGGY]  Context  c  =  getCurrentContextInstance();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getCurrentContextInstance();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getCurrentContextInstance();	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
377	[BUG]  [BUGGY]  Context  c  =  getCurrentContextForNoInOperator(context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getCurrentContextForNoInOperator(context);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getCurrentContextForNoInOperator(context);	  Context    c    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
378	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING  ||  context.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()!=  Token.STRING  ||  context.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()!=  Token.STRING  ||  context.getType()  ==  Token.SET);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.SET);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
379	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(parent.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);	  Preconditions.checkState(context.getType()    ==    Token.STRING    ||    context.getType()    ==    Token.SET);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
380	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  Preconditions.checkState(c.getType()  ==  Token.STRING,  c.getString());	  Preconditions.checkState(context.getType()    ==    Token.STRING,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
381	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.START);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
382	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.START);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.START);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
383	[BUG]  [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getString());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getString());	  Context.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
384	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getName());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getName());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getName());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
385	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getCharacterIndex());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getCharacterIndex());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.EXPR_RESULT,  c.getCharacterIndex());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.EXPR_RESULT,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
386	[BUG]  [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(e.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(e.getType()  ==  Token.STRING  &&  c.getType()  ==  Token.GET);	  Preconditions.checkState(c.getType()!=    Token.STRING    &&    c.getType()    ==    Token.GET);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
387	[BUG]  [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(context.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.CATCH);	  Preconditions.checkState(c.getType()!=    Token.STRING    ||    c.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
388	[BUG]  [BUGGY]  Context  c  =  getContextForNoInOperator();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getContextForNoInOperator();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getContextForNoInOperator();	  Context    c    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
389	[BUG]  [BUGGY]  Context  c  =  context.createContext(n,  parent);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createContext(n,  parent);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createContext(n,  parent);	  Context    c    =    context.createContext(n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
390	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getString()  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getString()  +  1);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getString()  +  1);	  Preconditions.checkState(c.getType()    ==    Token.STRING,    c.getString()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
391	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GETELEM,  c);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GETELEM,  c);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.GETELEM,  c);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GETELEM);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
392	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.GET);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.GET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()!=  Token.STRING  ||  c.getType()  ==  Token.GET);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.GET);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
393	[BUG]  [BUGGY]  Context  c  =  context.createChildContext();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.createChildContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.createChildContext();	  Context    c    =    context.getContext();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
394	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  addToken(c);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  addToken(c);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  addToken(c);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
395	[BUG]  [BUGGY]  Context  c  =  getCurrentContext();  add(c);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  getCurrentContext();  add(c);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  getCurrentContext();  add(c);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
396	[BUG]  [BUGGY]  Context  c  =  context.getCurrentContext();  addTo(c);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =  context.getCurrentContext();  addTo(c);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =  context.getCurrentContext();  addTo(c);	  Context    c    =    context.getCurrentContext();    add(c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
397	[BUG]  [BUGGY]  Preconditions.checkArgument(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkArgument(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.BLOCK);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkArgument(c.getType()  >=  Token.STRING  ||  c.getType()  ==  Token.BLOCK);	  Preconditions.checkArgument(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
398	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getCharacterIndex());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getCharacterIndex());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getCharacterIndex());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
399	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getName());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getName());  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.NAME,  c.getName());	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()    ==    Token.NAME,    c.getString());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
400	[BUG]  [BUGGY]  Context  c  =(context  ==  null)?  context.getCurrentContext()  :  context.getRootContext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Context  c  =(context  ==  null)?  context.getCurrentContext()  :  context.getRootContext();  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Context  c  =(context  ==  null)?  context.getCurrentContext()  :  context.getRootContext();	  Context    c    =    context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
401	[BUG]  [BUGGY]  Preconditions.checkState(!(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(!(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(!(c.getType()  ==  Token.STRING  ||  c.getType()  ==  Token.SET);	  Preconditions.checkState(c.getType()    >=    Token.STRING    ||    c.getType()    ==    Token.SET);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
402	[BUG]  [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (c.getType()  ==  Token.GET  ||  c.getType()  ==  Token.SET)  {  add(c);  }  else  {      [BUGGY]  Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  key  =  c.getString();    if  (!c.isQuotedString()  &&  !TokenStream.isKeyword(key)  &&  TokenStream.isJSIdentifier(key)  &&    NodeUtil.isLatin(key))  {  add(key);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure52/src/com/google/javascript/jscomp/CodeGenerator.java	0.35355339059327373	661	661	1	replace	Preconditions.checkState(c.getType()!=  Token.STRING  ||  c.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(c.getType()    ==    Token.STRING    ||    c.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
