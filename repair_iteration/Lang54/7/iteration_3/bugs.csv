bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Class  <?>  str  =  this.cLanguagesByCountry.get(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  this.cLanguagesByCountry.get(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  this.cLanguagesByCountry.get(str);	  Class    <?>    str    =    this.cCountriesByLanguage.get(str);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2	[BUG]  [BUGGY]  Class  <?>  str  =  cLanguagesByCountry.get(str);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  cLanguagesByCountry.get(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  cLanguagesByCountry.get(str);	  Class    <?>    str    =    this.cCountriesByLanguage.get(str);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
3	[BUG]  [BUGGY]  Class  <?>  str  =  this.cCountriesByCountry.get(str);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  this.cCountriesByCountry.get(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  this.cCountriesByCountry.get(str);	  Class    <?>    str    =    this.cCountriesByLanguage.get(str);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
4	[BUG]  [BUGGY]  Class  <?>  str  =  cCountriesByCountry.get(str);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  cCountriesByCountry.get(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  cCountriesByCountry.get(str);	  Class    <?>    str    =    this.cCountriesByLanguage.get(str);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
5	[BUG]  [BUGGY]  Long  len  =  str.length();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Long  len  =  str.length();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Long  len  =  str.length();	  Integer    len    =    str.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  safeMultilineLocale(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  safeMultilineLocale(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	safeMultilineLocale(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  safeMultilineLocale(str)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
7	[BUG]  [BUGGY]  safeMultilineLocale(str,  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  safeMultilineLocale(str,  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	safeMultilineLocale(str,  false)  {  throw  new  IllegalArgumentException( " ");  }	  safeMultilineLocale(str)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
8	[BUG]  [BUGGY]  String  len  =  str.length();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  len  =  str.length();  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  len  =  str.length();	  char    len    =    str.length();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  char  len  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  char  len  =  str.length()  +  1;  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	char  len  =  str.length()  +  1;	  char    len    =    str.length();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  int  len  =  str.lastIndexOf('  ');  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  str.lastIndexOf('  ');  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.lastIndexOf('  ');	  int    len    =    str.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
11	[BUG]  [BUGGY]  char  len  =  str.indexOf('  ');  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  char  len  =  str.indexOf('  ');  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	char  len  =  str.indexOf('  ');	  int    len    =    str.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
12	[BUG]  [BUGGY]  int  len  =  str.indexOf('  ',  4);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  str.indexOf('  ',  4);  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.indexOf('  ',  4);	  int    len    =    str.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
13	[BUG]  [BUGGY]  while((  str  ==  null)&&(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while((  str  ==  null)&&(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str  ==  null)&&(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str    ==    null)&&(str.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
14	[BUG]  [BUGGY]  while((  str!=  null)&&(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while((  str!=  null)&&(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str!=  null)&&(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str    ==    null)&&(str.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
15	[BUG]  [BUGGY]  while((  str  ==  null)&&(str.length()  >=  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while((  str  ==  null)&&(str.length()  >=  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str  ==  null)&&(str.length()  >=  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str    ==    null)&&(str.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
16	[BUG]  [BUGGY]  String  str  =  getClass().getRealClass().getName();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getRealClass().getName();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getRealClass().getName();	  String    str    =    getClass().getRawClass().getName();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
17	[BUG]  [BUGGY]  Class  <?>  str  =  getRawClass();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  getRawClass();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  getRawClass();	  Class    <?>    str    =    getClass();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
18	[BUG]  [BUGGY]  Class  <?>  str  =  getClass().getComponentType();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  getClass().getComponentType();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  getClass().getComponentType();	  Class    <?>    str    =    getClass();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
19	[BUG]  [BUGGY]  Class  <?>  str  =  getClass().getName();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  getClass().getName();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  getClass().getName();	  Class    <?>    str    =    getClass();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
20	[BUG]  [BUGGY]  while(str!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  While(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
21	[BUG]  [BUGGY]  While(str!=  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  While(str!=  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While(str!=  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  While(str!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  while(str!=  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  While(str!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  Locale  locale  =  Locale.getLocale(str);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Locale  locale  =  Locale.getLocale(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Locale  locale  =  Locale.getLocale(str);	  Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
24	[BUG]  [BUGGY]  Locale  locale  =(Locale)str.getValue();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Locale  locale  =(Locale)str.getValue();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Locale  locale  =(Locale)str.getValue();	  Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
25	[BUG]  [BUGGY]  Locale  locale  =(Locale)str.clone();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Locale  locale  =(Locale)str.clone();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Locale  locale  =(Locale)str.clone();	  Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
26	[BUG]  [BUGGY]  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  if(str    ==    null    ||    str.length()!=    0)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
27	[BUG]  [BUGGY]  while(str!=  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  if(str    ==    null    ||    str.length()!=    0)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
28	[BUG]  [BUGGY]  String  str  =  getClass().getRawClass().getLocalName();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getRawClass().getLocalName();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getRawClass().getLocalName();	  String    str    =    getClass().getRawClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
29	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  cLanguagesByCountry.keySet().iterator();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  cLanguagesByCountry.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  cLanguagesByCountry.keySet().iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
30	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  cCountriesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  cCountriesByLanguage.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  cCountriesByLanguage.keySet().iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
31	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cLanguagesByCountry.keySet().iterator();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  this.cLanguagesByCountry.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cLanguagesByCountry.keySet().iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
32	[BUG]  [BUGGY]  Iterator  <  Locale>  it  =  cLanguagesByCountry.keySet().iterator();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  Locale>  it  =  cLanguagesByCountry.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  Locale>  it  =  cLanguagesByCountry.keySet().iterator();	  Iterator    <    Locale>    it    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
33	[BUG]  [BUGGY]  Iterator  <  Locale>  it  =  cCountriesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  Locale>  it  =  cCountriesByLanguage.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  Locale>  it  =  cCountriesByLanguage.keySet().iterator();	  Iterator    <    Locale>    it    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
34	[BUG]  [BUGGY]  Iterator  <  Locale>  it  =  this.cLanguagesByCountry.keySet().iterator();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  Locale>  it  =  this.cLanguagesByCountry.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  Locale>  it  =  this.cLanguagesByCountry.keySet().iterator();	  Iterator    <    Locale>    it    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
35	[BUG]  [BUGGY]  String  str  =(String)str.toUpperCase();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(String)str.toUpperCase();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)str.toUpperCase();	  String    str    =(String)str.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
36	[BUG]  [BUGGY]  Integer  str  =  getLowerBound();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLowerBound();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLowerBound();	  Integer    str    =    getUpperBound();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
37	[BUG]  [BUGGY]  Integer  str  =  this.getLowerBound();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  this.getLowerBound();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  this.getLowerBound();	  Integer    str    =    getUpperBound();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
38	[BUG]  [BUGGY]  Integer  str  =  getLowerCase();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLowerCase();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLowerCase();	  Integer    str    =    getUpperBound();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
39	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cAvailableLocaleSet.keySet().iterator();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  this.cAvailableLocaleSet.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cAvailableLocaleSet.keySet().iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByCountry.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
40	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.toLocale();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.toLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(str  ==  null)?  null  :  str.toLocale();	  String    str    =(str    ==    null)?    null    :    str.clone();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
41	[BUG]  [BUGGY]  String  str  =(str!=  null)?  null  :  str.clone();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str!=  null)?  null  :  str.clone();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(str!=  null)?  null  :  str.clone();	  String    str    =(str    ==    null)?    null    :    str.clone();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
42	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.toString();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(str  ==  null)?  null  :  str.toString();	  String    str    =(str    ==    null)?    null    :    str.clone();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
43	[BUG]  [BUGGY]  vices.put(str,  new  Locale(Locale.US));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  vices.put(str,  new  Locale(Locale.US));  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	vices.put(str,  new  Locale(Locale.US));	  vices.put(str,    new    Locale(Locale.getDefault()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
44	[BUG]  [BUGGY]  vices.put(str,  new  Locale(Locale.getDefault()),  true);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  vices.put(str,  new  Locale(Locale.getDefault()),  true);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	vices.put(str,  new  Locale(Locale.getDefault()),  true);	  vices.put(str,    new    Locale(Locale.getDefault()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
45	[BUG]  [BUGGY]  vices.put(str,  new  Locale(Locale.getDefault()),  false);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  vices.put(str,  new  Locale(Locale.getDefault()),  false);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	vices.put(str,  new  Locale(Locale.getDefault()),  false);	  vices.put(str,    new    Locale(Locale.getDefault()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
46	[BUG]  [BUGGY]  int  len  =  getLocale().length()  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  getLocale().length()  -  1;  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  getLocale().length()  -  1;	  int    len    =    getLocale().length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
47	[BUG]  [BUGGY]  int  len  =  getLocale().length()  +  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  getLocale().length()  +  1;  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  getLocale().length()  +  1;	  int    len    =    getLocale().length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
48	[BUG]  [BUGGY]  int  len  =  getLocale().length()  -  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  getLocale().length()  -  2;  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  getLocale().length()  -  2;	  int    len    =    getLocale().length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
49	[BUG]  [BUGGY]  Integer  str  =  getLanguageCount();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLanguageCount();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLanguageCount();	  Integer    str    =    getLanguage();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
50	[BUG]  [BUGGY]  Integer  str  =  getLanguageInt();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLanguageInt();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLanguageInt();	  Integer    str    =    getLanguage();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
51	[BUG]  [BUGGY]  Integer  str  =  getLanguage().intValue();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLanguage().intValue();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLanguage().intValue();	  Integer    str    =    getLanguage();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
52	[BUG]  [BUGGY]  String  str  =  getClass().getReturnType();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getReturnType();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getReturnType();	  String    str    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
53	[BUG]  [BUGGY]  while((  str  ==  null)&&(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while((  str  ==  null)&&(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str  ==  null)&&(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str    ==    null)||(str.length()    ==    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
54	[BUG]  [BUGGY]  While((  str  ==  null)&&(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  While((  str  ==  null)&&(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While((  str  ==  null)&&(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str    ==    null)||(str.length()    ==    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
55	[BUG]  [BUGGY]  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
56	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  &&  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
57	[BUG]  [BUGGY]  Integer  str  =  getLocale().intValue()  +  1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLocale().intValue()  +  1;  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLocale().intValue()  +  1;	  Integer    str    =    getLocale().intValue();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
58	[BUG]  [BUGGY]  Integer  str  =  getLocale().intValue()  -  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLocale().intValue()  -  1;  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLocale().intValue()  -  1;	  Integer    str    =    getLocale().intValue();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
59	[BUG]  [BUGGY]  Integer  str  =  getLocale().toLocale();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLocale().toLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLocale().toLocale();	  Integer    str    =    getLocale().intValue();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
60	[BUG]  [BUGGY]  While((  str  ==  null)&&(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  While((  str  ==  null)&&(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While((  str  ==  null)&&(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str    ==    null)||(str.length()!=    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
61	[BUG]  [BUGGY]  while((  str!=  null)&&(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while((  str!=  null)&&(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str!=  null)&&(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str    ==    null)||(str.length()!=    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
62	[BUG]  [BUGGY]  String  str  =(String)this.cLanguagesByCountry.clone();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(String)this.cLanguagesByCountry.clone();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)this.cLanguagesByCountry.clone();	  String    str    =(String)this.cCountriesByCountry.clone();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
63	[BUG]  [BUGGY]  String  str  =(String)cLanguagesByCountry.clone();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(String)cLanguagesByCountry.clone();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)cLanguagesByCountry.clone();	  String    str    =(String)this.cCountriesByCountry.clone();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
64	[BUG]  [BUGGY]  String  str  =(String)cCountriesByLanguage.clone();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(String)cCountriesByLanguage.clone();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)cCountriesByLanguage.clone();	  String    str    =(String)this.cCountriesByCountry.clone();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
65	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cLanguagesByCountry.iterator();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  this.cLanguagesByCountry.iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cLanguagesByCountry.iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByCountry.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
66	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  cLanguagesByCountry.iterator();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  cLanguagesByCountry.iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  cLanguagesByCountry.iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByCountry.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
67	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cCountriesByLanguage.iterator();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  this.cCountriesByLanguage.iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cCountriesByLanguage.iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByCountry.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
68	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cAvailableLocaleSet.iterator();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  this.cAvailableLocaleSet.iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cAvailableLocaleSet.iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByCountry.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
69	[BUG]  [BUGGY]  Iterator  <  Locale>  it  =  cCountriesByCountry.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  Locale>  it  =  cCountriesByCountry.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  Locale>  it  =  cCountriesByCountry.keySet().iterator();	  Iterator    <    Locale>    it    =    this.cCountriesByCountry.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
70	[BUG]  [BUGGY]  String  str  =(String)cCountriesByCountry.clone();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(String)cCountriesByCountry.clone();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)cCountriesByCountry.clone();	  String    str    =(String)this.cCountriesByLanguage.clone();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
71	[BUG]  [BUGGY]  Iterator  <  String>  str  =  cLanguagesByCountry.keySet().iterator();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  str  =  cLanguagesByCountry.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  str  =  cLanguagesByCountry.keySet().iterator();	  Iterator    <    String>    str    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
72	[BUG]  [BUGGY]  Iterator  <  String>  str  =  cCountriesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  str  =  cCountriesByLanguage.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  str  =  cCountriesByLanguage.keySet().iterator();	  Iterator    <    String>    str    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
73	[BUG]  [BUGGY]  Iterator  <  String>  str  =  this.cLanguagesByCountry.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  str  =  this.cLanguagesByCountry.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  str  =  this.cLanguagesByCountry.keySet().iterator();	  Iterator    <    String>    str    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
74	[BUG]  [BUGGY]  Integer  str  =  getRawClass();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getRawClass();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getRawClass();	  Integer    str    =    getRawLocale();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
75	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  allowLocale();  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0)  {  allowLocale();  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	if(str.length()  ==  0)  {  allowLocale();  }	  allowLocale();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
76	[BUG]  [BUGGY]  if(str.equals( " "))  {  allowLocale();  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.equals( " "))  {  allowLocale();  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	if(str.equals( " "))  {  allowLocale();  }	  allowLocale();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
77	[BUG]  [BUGGY]  enableLocale();  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  enableLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	enableLocale();	  allowLocale();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
78	[BUG]  [BUGGY]  while(str  ==  null)  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str  ==  null)  {  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str  ==  null)  {	  while(str!=    null)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
79	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  &&  str.length()  >  0)  {  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  &&  str.length()  >  0)  {	  while(str!=    null)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
80	[BUG]  [BUGGY]  while(str!=  null  ||  str.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  ||  str.length()  ==  0)  {  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  ||  str.length()  ==  0)  {	  while(str!=    null)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
81	[BUG]  [BUGGY]  String  str  =  getClass().getRealClass();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getRealClass();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getRealClass();	  String    str    =    getClass().getRawClass();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
82	[BUG]  [BUGGY]  Integer  len  =  this.str.length()  -  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  len  =  this.str.length()  -  1;  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  len  =  this.str.length()  -  1;	  Integer    len    =    this.str.length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
83	[BUG]  [BUGGY]  Integer  len  =  this.str.length()  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  len  =  this.str.length()  +  1;  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  len  =  this.str.length()  +  1;	  Integer    len    =    this.str.length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName(str.toLocale());  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName(str.toLocale());  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName(str.toLocale());	  String    str    =    getClass().getSimpleName(str);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
85	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName(str.toLowerCase());  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName(str.toLowerCase());  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName(str.toLowerCase());	  String    str    =    getClass().getSimpleName(str);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
86	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName(str).toLocale();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName(str).toLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName(str).toLocale();	  String    str    =    getClass().getSimpleName(str);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
87	[BUG]  [BUGGY]  SafeMultiply(str)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  SafeMultiply(str)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	SafeMultiply(str)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }	  safeMultiply(str)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
88	[BUG]  [BUGGY]  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }	  if(str    ==    null    ||    str.length()!=    0)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
89	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  &&  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  &&  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }	  if(str    ==    null    ||    str.length()!=    0)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
90	[BUG]  [BUGGY]  while(str!=  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }	  if(str    ==    null    ||    str.length()!=    0)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
91	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLowerCase();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLowerCase();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLowerCase();	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
92	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLocale();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLocale();	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
93	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.trim();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.trim();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName()  + "_ "  +  str.trim();	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
94	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "._ "+str.charAt(0);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName()  + "._ "+str.charAt(0);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName()  + "._ "+str.charAt(0);	  String    str    =    getClass().getSimpleName()    +   "_   "+str.charAt(0);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
95	[BUG]  [BUGGY]  String  str  =  getClass().getName()  + "_ "+str.charAt(0);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getName()  + "_ "+str.charAt(0);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getName()  + "_ "+str.charAt(0);	  String    str    =    getClass().getSimpleName()    +   "_   "+str.charAt(0);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
96	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "+str.substring(0,  1);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "+str.substring(0,  1);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName()  + "_ "+str.substring(0,  1);	  String    str    =    getClass().getSimpleName()    +   "_   "+str.charAt(0);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
97	[BUG]  [BUGGY]  Class  <?>  str  =  getClass().getRawClass().getSimpleName();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  getClass().getRawClass().getSimpleName();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  getClass().getRawClass().getSimpleName();	  Class    <?>    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
98	[BUG]  [BUGGY]  Class  <?>  str  =  getClass().getSimpleName()  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  getClass().getSimpleName()  +  1;  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  getClass().getSimpleName()  +  1;	  Class    <?>    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
99	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  allowInvalidLocale(str);  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0)  {  allowInvalidLocale(str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	if(str.length()  ==  0)  {  allowInvalidLocale(str);  }	  allowInvalidLocale(str);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
100	[BUG]  [BUGGY]  enableLocale(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  enableLocale(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	enableLocale(str);	  allowInvalidLocale(str);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
101	[BUG]  [BUGGY]  toLocale(str);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  toLocale(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	toLocale(str);	  allowInvalidLocale(str);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
102	[BUG]  [BUGGY]  while((  str!=  null)&&(str.length()  >=  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while((  str!=  null)&&(str.length()  >=  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str!=  null)&&(str.length()  >=  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str!=    null)&&(str.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
103	[BUG]  [BUGGY]  While((  str!=  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  While((  str!=  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While((  str!=  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str!=    null)&&(str.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
104	[BUG]  [BUGGY]  while(str  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  While(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
105	[BUG]  [BUGGY]  int  len  =  string.length()  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  string.length()  -  1;  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  string.length()  -  1;	  int    len    =    string.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
106	[BUG]  [BUGGY]  char  len  =  string.length();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  char  len  =  string.length();  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	char  len  =  string.length();	  int    len    =    string.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
107	[BUG]  [BUGGY]  while(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  While(str    ==    null    ||    str.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
108	[BUG]  [BUGGY]  while(str!=  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  While(str    ==    null    ||    str.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
109	[BUG]  [BUGGY]  int  len  =  str.lastIndexOf('.',  4);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  str.lastIndexOf('.',  4);  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.lastIndexOf('.',  4);	  int    len    =    str.lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
110	[BUG]  [BUGGY]  int  len  =  str.lastIndexOf('.',  0);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  str.lastIndexOf('.',  0);  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.lastIndexOf('.',  0);	  int    len    =    str.lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
111	[BUG]  [BUGGY]  int  len  =  str.lastIndexOf('.',  2);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  str.lastIndexOf('.',  2);  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.lastIndexOf('.',  2);	  int    len    =    str.lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
112	[BUG]  [BUGGY]  allowLocale(str,  false);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  allowLocale(str,  false);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	allowLocale(str,  false);	  allowLocale(str);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
113	[BUG]  [BUGGY]  enableLocale(str,  false);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  enableLocale(str,  false);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	enableLocale(str,  false);	  allowLocale(str);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
114	[BUG]  [BUGGY]  allowLocale(str,  true);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  allowLocale(str,  true);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	allowLocale(str,  true);	  allowLocale(str);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
115	[BUG]  [BUGGY]  Integer  str  =  getClass().getSimpleName()  +  1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getClass().getSimpleName()  +  1;  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getClass().getSimpleName()  +  1;	  Integer    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
116	[BUG]  [BUGGY]  Integer  str  =  getClass().getRawClass().getSimpleName();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getClass().getRawClass().getSimpleName();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getClass().getRawClass().getSimpleName();	  Integer    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
117	[BUG]  [BUGGY]  Integer  str  =  getClass().getName();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getClass().getName();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getClass().getName();	  Integer    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
118	[BUG]  [BUGGY]  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
119	[BUG]  [BUGGY]  while(str!=  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
120	[BUG]  [BUGGY]  int  len  =  getLocale()  -  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  getLocale()  -  1;  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  getLocale()  -  1;	  int    len    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
121	[BUG]  [BUGGY]  int  len  =  getLocaleCount();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  getLocaleCount();  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  getLocaleCount();	  int    len    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
122	[BUG]  [BUGGY]  Integer  str  =  getDefaultLocale().intValue();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getDefaultLocale().intValue();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getDefaultLocale().intValue();	  Integer    str    =    getDefaultLocale();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
123	[BUG]  [BUGGY]  Integer  str  =  getDefaultLocale().getIntValue();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getDefaultLocale().getIntValue();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getDefaultLocale().getIntValue();	  Integer    str    =    getDefaultLocale();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
124	[BUG]  [BUGGY]  String  str  =  getClass().getName()  + "_ "  +  str;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getName()  + "_ "  +  str;  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getName()  + "_ "  +  str;	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
125	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "._ "  +  str;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName()  + "._ "  +  str;  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName()  + "._ "  +  str;	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
126	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cAvailableLocaleList.iterator();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  this.cAvailableLocaleList.iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cAvailableLocaleList.iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByCountry.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
127	[BUG]  [BUGGY]  Class  <?>  str  =  this.cLanguagesByLanguage.get(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  this.cLanguagesByLanguage.get(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  this.cLanguagesByLanguage.get(str);	  Class    <?>    str    =    this.cCountriesByLanguage.get(str);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
128	[BUG]  [BUGGY]  Class  <?>  str  =  this.cAvailableLocaleList.get(str);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  this.cAvailableLocaleList.get(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  this.cAvailableLocaleList.get(str);	  Class    <?>    str    =    this.cCountriesByLanguage.get(str);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
129	[BUG]  [BUGGY]  String  str  =  getClass().getLocale().getName();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getLocale().getName();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getLocale().getName();	  String    str    =    getClass().getRawClass().getName();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
130	[BUG]  [BUGGY]  String  str  =  getClass().getRawClass().getLocale();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getRawClass().getLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getRawClass().getLocale();	  String    str    =    getClass().getRawClass().getName();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
131	[BUG]  [BUGGY]  While(str!=  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  While(str!=  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While(str!=  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  While(str    ==    null    ||    str.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
132	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  &&  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  While(str    ==    null    ||    str.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
133	[BUG]  [BUGGY]  String  str  =(String)this.cAvailableLocaleList.clone();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(String)this.cAvailableLocaleList.clone();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)this.cAvailableLocaleList.clone();	  String    str    =(String)this.cCountriesByLanguage.clone();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
134	[BUG]  [BUGGY]  Locale  locale  =(Locale)locales.get(str);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Locale  locale  =(Locale)locales.get(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Locale  locale  =(Locale)locales.get(str);	  Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
135	[BUG]  [BUGGY]  Locale  locale  =  getLocale();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Locale  locale  =  getLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Locale  locale  =  getLocale();	  Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
136	[BUG]  [BUGGY]  Integer  str  =  getClass().getLocale();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getClass().getLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getClass().getLocale();	  Integer    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
137	[BUG]  [BUGGY]  Integer  str  =  getClass().getSimpleName(str);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getClass().getSimpleName(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getClass().getSimpleName(str);	  Integer    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
138	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName(str,  0);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName(str,  0);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName(str,  0);	  String    str    =    getClass().getSimpleName(str);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
139	[BUG]  [BUGGY]  String  str  =  getClass().getLocale();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getLocale();	  String    str    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
140	[BUG]  [BUGGY]  Class  <?>  str  =  getClass().getRawClass();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  getClass().getRawClass();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  getClass().getRawClass();	  Class    <?>    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
141	[BUG]  [BUGGY]  Class  <?>  str  =  getClass().getLocale();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  getClass().getLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  getClass().getLocale();	  Class    <?>    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
142	[BUG]  [BUGGY]  Integer  str  =  getLanguage().toLocale();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLanguage().toLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLanguage().toLocale();	  Integer    str    =    getLanguage();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
143	[BUG]  [BUGGY]  int  len  =  getLocale().length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  getLocale().length;  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  getLocale().length;	  int    len    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
144	[BUG]  [BUGGY]  int  len  =  string.length()  -  2;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  string.length()  -  2;  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  string.length()  -  2;	  int    len    =    string.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
145	[BUG]  [BUGGY]  int  str  =  getLowerBound();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  getLowerBound();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  str  =  getLowerBound();	  Integer    str    =    getUpperBound();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
146	[BUG]  [BUGGY]  if(str  ==  null)  {  allowInvalidLocale(str);  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null)  {  allowInvalidLocale(str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	if(str  ==  null)  {  allowInvalidLocale(str);  }	  allowInvalidLocale(str);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
147	[BUG]  [BUGGY]  enableInvalidLocale(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  enableInvalidLocale(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	enableInvalidLocale(str);	  allowInvalidLocale(str);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
148	[BUG]  [BUGGY]  Int  len  =  str.length()  -  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Int  len  =  str.length()  -  1;  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Int  len  =  str.length()  -  1;	  Int    len    =    str.length();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
149	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ ",  str.charAt(0);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ ",  str.charAt(0);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName()  + "_ ",  str.charAt(0);	  String    str    =    getClass().getSimpleName()    +   "_   "+str.charAt(0);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
150	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cAvailableLocaleList.keySet().iterator();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  this.cAvailableLocaleList.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cAvailableLocaleList.keySet().iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByCountry.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
151	[BUG]  [BUGGY]  Integer  str  =  getDefaultLocale().toLocale();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getDefaultLocale().toLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getDefaultLocale().toLocale();	  Integer    str    =    getDefaultLocale();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
152	[BUG]  [BUGGY]  int  len  =  str.indexOf('  ',  0);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  str.indexOf('  ',  0);  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.indexOf('  ',  0);	  int    len    =    str.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
153	[BUG]  [BUGGY]  int  len  =  str.indexOf('  ')+  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  str.indexOf('  ')+  1;  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.indexOf('  ')+  1;	  int    len    =    str.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
154	[BUG]  [BUGGY]  Iterator  <  Locale>  it  =  cLanguagesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  Locale>  it  =  cLanguagesByLanguage.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  Locale>  it  =  cLanguagesByLanguage.keySet().iterator();	  Iterator    <    Locale>    it    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
155	[BUG]  [BUGGY]  Iterator  <  Locale>  it  =  this.cAvailableLocaleSet.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  Locale>  it  =  this.cAvailableLocaleSet.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  Locale>  it  =  this.cAvailableLocaleSet.keySet().iterator();	  Iterator    <    Locale>    it    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
156	[BUG]  [BUGGY]  Iterator  <  Locale>  it  =  this.cLanguagesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  Locale>  it  =  this.cLanguagesByLanguage.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  Locale>  it  =  this.cLanguagesByLanguage.keySet().iterator();	  Iterator    <    Locale>    it    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
157	[BUG]  [BUGGY]  while(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  While(str!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
158	[BUG]  [BUGGY]  cCountriesByLanguage.setLocale(str);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  cCountriesByLanguage.setLocale(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	cCountriesByLanguage.setLocale(str);	  allowLocale();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
159	[BUG]  [BUGGY]  cCountriesByLanguage.put(str,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  cCountriesByLanguage.put(str,  Locale.getDefault());  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	cCountriesByLanguage.put(str,  Locale.getDefault());	  allowLocale();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
160	[BUG]  [BUGGY]  cCountriesByLanguage.put(str,  null);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  cCountriesByLanguage.put(str,  null);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	cCountriesByLanguage.put(str,  null);	  allowLocale();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
161	[BUG]  [BUGGY]  Iterator  <  String>  str  =  cLanguagesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  str  =  cLanguagesByLanguage.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  str  =  cLanguagesByLanguage.keySet().iterator();	  Iterator    <    String>    str    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
162	[BUG]  [BUGGY]  Iterator  <  String>  str  =  this.cAvailableLocaleSet().iterator();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  str  =  this.cAvailableLocaleSet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  str  =  this.cAvailableLocaleSet().iterator();	  Iterator    <    String>    str    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
163	[BUG]  [BUGGY]  Iterator  <  String>  str  =  this.cLanguagesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  str  =  this.cLanguagesByLanguage.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  str  =  this.cLanguagesByLanguage.keySet().iterator();	  Iterator    <    String>    str    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
164	[BUG]  [BUGGY]  vices.put(str,  new  Locale(Locale.getDefault()  +  1));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  vices.put(str,  new  Locale(Locale.getDefault()  +  1));  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	vices.put(str,  new  Locale(Locale.getDefault()  +  1));	  vices.put(str,    new    Locale(Locale.getDefault()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
165	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  &&  str.length()  ==  0)  {	  while(str!=    null)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
166	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cLanguagesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  this.cLanguagesByLanguage.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cLanguagesByLanguage.keySet().iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
167	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  cLanguagesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  String>  strIterator  =  cLanguagesByLanguage.keySet().iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  cLanguagesByLanguage.keySet().iterator();	  Iterator    <    String>    strIterator    =    this.cCountriesByLanguage.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
168	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.toLowerCase();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.toLowerCase();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(str  ==  null)?  null  :  str.toLowerCase();	  String    str    =(str    ==    null)?    null    :    str.clone();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
169	[BUG]  [BUGGY]  Iterator  <  Locale>  it  =  this.cAvailableLocaleSet.iterator();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Iterator  <  Locale>  it  =  this.cAvailableLocaleSet.iterator();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  Locale>  it  =  this.cAvailableLocaleSet.iterator();	  Iterator    <    Locale>    it    =    this.cCountriesByCountry.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
170	[BUG]  [BUGGY]  if(str  ==  null)  {  vices.put(str,  new  Locale( "Locale "));  }  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null)  {  vices.put(str,  new  Locale( "Locale "));  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	if(str  ==  null)  {  vices.put(str,  new  Locale( "Locale "));  }	  vices.put(str,    new    Locale(   "Locale   "));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
171	[BUG]  [BUGGY]  Viceps.put(str,  new  Locale( "Locale "));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Viceps.put(str,  new  Locale( "Locale "));  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Viceps.put(str,  new  Locale( "Locale "));	  vices.put(str,    new    Locale(   "Locale   "));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
172	[BUG]  [BUGGY]  int  len  =  str.lastIndexOf('.',  1);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  str.lastIndexOf('.',  1);  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.lastIndexOf('.',  1);	  int    len    =    str.lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
173	[BUG]  [BUGGY]  int  len  =  str.lastIndexOf('.',  16);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  str.lastIndexOf('.',  16);  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.lastIndexOf('.',  16);	  int    len    =    str.lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
174	[BUG]  [BUGGY]  Character  len  =  str.length();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Character  len  =  str.length();  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Character  len  =  str.length();	  char    len    =    str.length();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
175	[BUG]  [BUGGY]  while(str!=  null  &&  str.endsWith( ".java "))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  &&  str.endsWith( ".java "))  {  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  &&  str.endsWith( ".java "))  {	  while(str!=    null)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
176	[BUG]  [BUGGY]  Locale  locale  =(Locale)getLocale();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Locale  locale  =(Locale)getLocale();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Locale  locale  =(Locale)getLocale();	  Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
177	[BUG]  [BUGGY]  Integer  len  =  string.length();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  len  =  string.length();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  len  =  string.length();	  Integer    len    =    str.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
178	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format:   "  +  str);  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format:   "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  &&  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format:   "  +  str);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
179	[BUG]  [BUGGY]  While((  str  ==  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  While((  str  ==  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While((  str  ==  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str    ==    null)&&(str.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
180	[BUG]  [BUGGY]  String  str  =(String)str.substring(0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(String)str.substring(0,  str.length()  -  1);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)str.substring(0,  str.length()  -  1);	  String    str    =(String)str.toLocale();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
181	[BUG]  [BUGGY]  while((  str!=  null)&&(str.length()  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while((  str!=  null)&&(str.length()  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str!=  null)&&(str.length()  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }	  while((    str!=    null)&&(str.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
182	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format:   "  +  str);  }  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  while(str!=  null  &&  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format:   "  +  str);  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null  &&  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format:   "  +  str);  }	  if(str    ==    null    ||    str.length()!=    0)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
183	[BUG]  [BUGGY]  Integer  str  =  getLanguageVersion();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLanguageVersion();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLanguageVersion();	  Integer    str    =    getLanguage();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
184	[BUG]  [BUGGY]  int  len  =  getLanguage();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  len  =  getLanguage();  [BUGGY]      if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  getLanguage();	  int    len    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
185	[BUG]  [BUGGY]  While(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  While(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  While(str    ==    null    ||    str.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
186	[BUG]  [BUGGY]  safeMultilineLocale(str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  safeMultilineLocale(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	safeMultilineLocale(str);	  safeMultilineLocale(str)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
187	[BUG]  [BUGGY]  Integer  str  =  getLocale().toUpperCase();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getLocale().toUpperCase();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLocale().toUpperCase();	  Integer    str    =    getLocale().intValue();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
188	[BUG]  [BUGGY]  if(str  ==  null)  {  allowLocale();  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null)  {  allowLocale();  }  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	if(str  ==  null)  {  allowLocale();  }	  allowLocale();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
189	[BUG]  [BUGGY]  cLanguagesByCountry.setLocale(str);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  cLanguagesByCountry.setLocale(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	cLanguagesByCountry.setLocale(str);	  allowLocale();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
190	[BUG]  [BUGGY]  Class  <?>  str  =  cLanguagesByLanguage.get(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Class  <?>  str  =  cLanguagesByLanguage.get(str);  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  cLanguagesByLanguage.get(str);	  Class    <?>    str    =    this.cCountriesByLanguage.get(str);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
191	[BUG]  [BUGGY]  Integer  str  =  getValue();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getValue();  [BUGGY]      int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,       "     ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getValue();	  Integer    str    =    getDefaultLocale();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
