bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  While(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  While(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  While(str!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  While(str!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While(str!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  While(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  While(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
4	[BUG]  [BUGGY]  While(str  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  While(str  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	While(str  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
5	[BUG]  [BUGGY]  Integer  len  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  len  =  str.length()  +  1;  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  len  =  str.length()  +  1;	      Integer    len    =    str.length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
6	[BUG]  [BUGGY]  Integer  len  =  str.length()  -  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  len  =  str.length()  -  1;  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  len  =  str.length()  -  1;	      Integer    len    =    str.length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  Integer  len  =  this.str.length();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  len  =  this.str.length();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  len  =  this.str.length();	      Integer    len    =    str.length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  String  str  =(String)str.toLocale();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =(String)str.toLocale();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)str.toLocale();	      String    str    =(String)str.getValue();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  String  str  =(String)str.getKey();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =(String)str.getKey();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)str.getKey();	      String    str    =(String)str.getValue();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  char  len  =  str.length();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  char  len  =  str.length();  [BUGGY]    if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	char  len  =  str.length();	  int    len    =    str.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  int  len  =  string.length();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  len  =  string.length();  [BUGGY]    if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  string.length();	  int    len    =    str.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  String  str  =(String)str.toLowerCase();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =(String)str.toLowerCase();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)str.toLowerCase();	      String    str    =(String)str.clone();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
13	[BUG]  [BUGGY]  allowLocale(str);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  allowLocale(str);  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	allowLocale(str);	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  while(str!=  null)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  while(str!=  null)  {  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while(str!=  null)  {	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  Locale  locale  =  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Locale  locale  =  Locale.getDefault();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Locale  locale  =  Locale.getDefault();	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
16	[BUG]  [BUGGY]  allowLocale();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  allowLocale();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	allowLocale();	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
17	[BUG]  [BUGGY]  vices.put(str,  new  Locale( "Locale "));  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  vices.put(str,  new  Locale( "Locale "));  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	vices.put(str,  new  Locale( "Locale "));	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  vices.put(str,  new  Locale(Locale.getDefault()));  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  vices.put(str,  new  Locale(Locale.getDefault()));  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	vices.put(str,  new  Locale(Locale.getDefault()));	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
19	[BUG]  [BUGGY]  allowInvalidLocale(str);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  allowInvalidLocale(str);  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	allowInvalidLocale(str);	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  int  len  =  getLocale().length();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  len  =  getLocale().length();  [BUGGY]    if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  getLocale().length();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  int  len  =  getLocale();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  len  =  getLocale();  [BUGGY]    if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  getLocale();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  String  str  =  getClass().getName();  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =  getClass().getName();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getName();	      String    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  String  str  =  getClass().getRawClass().getSimpleName();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =  getClass().getRawClass().getSimpleName();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getRawClass().getSimpleName();	      String    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
24	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "+str.charAt(0);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "+str.charAt(0);  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName()  + "_ "+str.charAt(0);	      String    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
25	[BUG]  [BUGGY]  Integer  str  =  getLocale().intValue();  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  getLocale().intValue();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLocale().intValue();	      Integer    str    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
26	[BUG]  [BUGGY]  Integer  str  =  getRawLocale();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  getRawLocale();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getRawLocale();	      Integer    str    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
27	[BUG]  [BUGGY]  Integer  str  =  getUpperBound();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  getUpperBound();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getUpperBound();	      Integer    str    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
28	[BUG]  [BUGGY]  Integer  str  =  getLanguage();  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  getLanguage();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getLanguage();	      Integer    str    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
29	[BUG]  [BUGGY]  Integer  str  =  getDefaultLocale();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  getDefaultLocale();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getDefaultLocale();	      Integer    str    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
30	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName(str);  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =  getClass().getSimpleName(str);  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName(str);	      String    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  String  str  =  getClass().getRawClass();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =  getClass().getRawClass();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getRawClass();	      String    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  Integer  len  =  str.length()  -  2;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  len  =  str.length()  -  2;  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  len  =  str.length()  -  2;	      Integer    len    =    str.length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cCountriesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Iterator  <  String>  strIterator  =  this.cCountriesByLanguage.keySet().iterator();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cCountriesByLanguage.keySet().iterator();	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cCountriesByCountry.keySet().iterator();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Iterator  <  String>  strIterator  =  this.cCountriesByCountry.keySet().iterator();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cCountriesByCountry.keySet().iterator();	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  Iterator  <  String>  str  =  this.cCountriesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Iterator  <  String>  str  =  this.cCountriesByLanguage.keySet().iterator();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  str  =  this.cCountriesByLanguage.keySet().iterator();	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
36	[BUG]  [BUGGY]  Iterator  <  String>  strIterator  =  this.cCountriesByCountry.iterator();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Iterator  <  String>  strIterator  =  this.cCountriesByCountry.iterator();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  String>  strIterator  =  this.cCountriesByCountry.iterator();	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.clone();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =(str  ==  null)?  null  :  str.clone();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(str  ==  null)?  null  :  str.clone();	      String    str    =(String)str.clone();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  safeMultiply(str)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  safeMultiply(str)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	safeMultiply(str)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
39	[BUG]  [BUGGY]  Iterator  <  Locale>  it  =  this.cCountriesByLanguage.keySet().iterator();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Iterator  <  Locale>  it  =  this.cCountriesByLanguage.keySet().iterator();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  Locale>  it  =  this.cCountriesByLanguage.keySet().iterator();	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
40	[BUG]  [BUGGY]  Iterator  <  Locale>  it  =  this.cCountriesByCountry.keySet().iterator();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Iterator  <  Locale>  it  =  this.cCountriesByCountry.keySet().iterator();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Iterator  <  Locale>  it  =  this.cCountriesByCountry.keySet().iterator();	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
41	[BUG]  [BUGGY]  int  len  =  str.lastIndexOf('.');  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  len  =  str.lastIndexOf('.');  [BUGGY]    if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.lastIndexOf('.');	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  int  len  =  str.indexOf('  ');  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  len  =  str.indexOf('  ');  [BUGGY]    if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	int  len  =  str.indexOf('  ');	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  Int  len  =  str.length();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Int  len  =  str.length();  [BUGGY]    if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Int  len  =  str.length();	  int    len    =    str.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
44	[BUG]  [BUGGY]  Class  <?>  str  =  getClass().getSimpleName();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Class  <?>  str  =  getClass().getSimpleName();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  getClass().getSimpleName();	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  safeMultilineLocale(str)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  safeMultilineLocale(str)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	safeMultilineLocale(str)  {  throw  new  IllegalArgumentException( " ");  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
46	[BUG]  [BUGGY]  Class  <?>  str  =  this.cCountriesByLanguage.get(str);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Class  <?>  str  =  this.cCountriesByLanguage.get(str);  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  this.cCountriesByLanguage.get(str);	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
47	[BUG]  [BUGGY]  Class  <?>  str  =  getClass();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Class  <?>  str  =  getClass();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Class  <?>  str  =  getClass();	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  while((  str  ==  null)||(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  while((  str  ==  null)||(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str  ==  null)||(str.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
49	[BUG]  [BUGGY]  while((  str  ==  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  while((  str  ==  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str  ==  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
50	[BUG]  [BUGGY]  while((  str  ==  null)||(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  while((  str  ==  null)||(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str  ==  null)||(str.length()!=  0))  {  throw  new  IllegalArgumentException( " ");  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
51	[BUG]  [BUGGY]  while((  str!=  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  while((  str!=  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	while((  str!=  null)&&(str.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
52	[BUG]  [BUGGY]  Integer  str  =  getClass().getSimpleName();  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  getClass().getSimpleName();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	Integer  str  =  getClass().getSimpleName();	      Integer    str    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
53	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
54	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	if(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Locale  format: "  +  str);  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
55	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
56	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	if(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	      if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  String  str  =(String)this.cCountriesByCountry.clone();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =(String)this.cCountriesByCountry.clone();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)this.cCountriesByCountry.clone();	      String    str    =(String)str.clone();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
58	[BUG]  [BUGGY]  String  str  =(String)this.cCountriesByLanguage.clone();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =(String)this.cCountriesByLanguage.clone();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =(String)this.cCountriesByLanguage.clone();	      String    str    =(String)str.clone();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
59	[BUG]  [BUGGY]  String  str  =  getClass().getRawClass().getName();  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =  getClass().getRawClass().getName();  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getRawClass().getName();	      String    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  static  Locale  toLocale(String  str)  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str;  [BUGGY]    int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(   "Invalid  locale  format:     "  +  str);  }  if  (len  ==  2)  {  return  new  Locale(str,     "   ");  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	98	98	1	replace	String  str  =  getClass().getSimpleName()  + "_ "  +  str;	      String    str    =    getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
