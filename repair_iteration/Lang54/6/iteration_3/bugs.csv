bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)this.cLanguagesByCountry.get(str);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)this.cLanguagesByCountry.get(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)this.cLanguagesByCountry.get(str);	  Locale    toLocale    =(Locale)this.cCountriesByCountry.get(str);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
2	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)this.cCountriesByLanguage.get(str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)this.cCountriesByLanguage.get(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)this.cCountriesByLanguage.get(str);	  Locale    toLocale    =(Locale)this.cCountriesByCountry.get(str);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
3	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)this.cAvailableLocaleSet.get(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)this.cAvailableLocaleSet.get(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)this.cAvailableLocaleSet.get(str);	  Locale    toLocale    =(Locale)this.cCountriesByCountry.get(str);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
4	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)this.cAvailableLocaleList.get(str);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)this.cAvailableLocaleList.get(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)this.cAvailableLocaleList.get(str);	  Locale    toLocale    =(Locale)this.cCountriesByCountry.get(str);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
5	[BUG]  [BUGGY]  Locale.for(Locale.ENGLISH,  str)  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.ENGLISH,  str)  {  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.ENGLISH,  str)  {	  Locale.for(Locale.ENGLISH)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
6	[BUG]  [BUGGY]  Locale.for(Locale.US)  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.US)  {  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.US)  {	  Locale.for(Locale.ENGLISH)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
7	[BUG]  [BUGGY]  Locale.for(Locale.ENGLISH,  str.length())  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.ENGLISH,  str.length())  {  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.ENGLISH,  str.length())  {	  Locale.for(Locale.ENGLISH)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
8	[BUG]  [BUGGY]  Locale.for(Locale.getDefault())  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.getDefault())  {  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.getDefault())  {	  Locale.for(Locale.ENGLISH)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
9	[BUG]  [BUGGY]  Locale  str  =(Locale)getDefaultLocale();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)getDefaultLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)getDefaultLocale();	  Locale    str    =    getDefaultLocale();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
10	[BUG]  [BUGGY]  Locale.for(Locale.ENGLISH,  str,  0))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.ENGLISH,  str,  0))  {  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.ENGLISH,  str,  0))  {	  Locale.for(Locale.ENGLISH,    str))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
11	[BUG]  [BUGGY]  Locale.for(Locale.US,  str))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.US,  str))  {  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.US,  str))  {	  Locale.for(Locale.ENGLISH,    str))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
12	[BUG]  [BUGGY]  Locale.for(Locale.ENGLISH,  str.length()))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.ENGLISH,  str.length()))  {  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.ENGLISH,  str.length()))  {	  Locale.for(Locale.ENGLISH,    str))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
13	[BUG]  [BUGGY]  Locale.for(Locale.ENGLISH,  str,  true))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.ENGLISH,  str,  true))  {  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.ENGLISH,  str,  true))  {	  Locale.for(Locale.ENGLISH,    str))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
14	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)str.toLocale();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)str.toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)str.toLocale();	  Locale    toLocale    =(Locale)str.clone();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
15	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)str.getValue();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)str.getValue();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)str.getValue();	  Locale    toLocale    =(Locale)str.clone();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
16	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)str.getKey();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)str.getKey();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)str.getKey();	  Locale    toLocale    =(Locale)str.clone();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
17	[BUG]  [BUGGY]  Locale.setDefault(toLocale());  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(toLocale());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(toLocale());	  Locale.setDefault(getDefault());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
18	[BUG]  [BUGGY]  Locale.for(Locale.ENGLISH,  str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.ENGLISH,  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.ENGLISH,  str);	  Locale.for(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
19	[BUG]  [BUGGY]  Locale.for(Locale.US);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.US);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.US);	  Locale.for(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
20	[BUG]  [BUGGY]  Locale.for(Locale.ENGLISH,  str));  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.ENGLISH,  str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.ENGLISH,  str));	  Locale.for(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
21	[BUG]  [BUGGY]  Locale.for(Locale.getDefault());  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.getDefault());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.getDefault());	  Locale.for(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
22	[BUG]  [BUGGY]  String  str  =  getClass().getRawClass().getSimpleName();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getRawClass().getSimpleName();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getRawClass().getSimpleName();	  String    str    =    getClass().getRawClass().getName();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
23	[BUG]  [BUGGY]  String  str  =  getClass().getRawClass().toLocale();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getRawClass().toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getRawClass().toLocale();	  String    str    =    getClass().getRawClass().getName();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
24	[BUG]  [BUGGY]  String  str  =  getClass().getLocale().getName();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getLocale().getName();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getLocale().getName();	  String    str    =    getClass().getRawClass().getName();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
25	[BUG]  [BUGGY]  Locale.US_ASCII  =  new  Locale(Locale.US_ASCII,  str);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.US_ASCII  =  new  Locale(Locale.US_ASCII,  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.US_ASCII  =  new  Locale(Locale.US_ASCII,  str);	  Locale.US_ASCII    =    new    Locale(Locale.US_ASCII);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
26	[BUG]  [BUGGY]  Locale.US_ASCII  =  new  Locale(str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.US_ASCII  =  new  Locale(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.US_ASCII  =  new  Locale(str);	  Locale.US_ASCII    =    new    Locale(Locale.US_ASCII);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
27	[BUG]  [BUGGY]  Locale.US_ASCII  =  new  Locale(String.valueOf(str));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.US_ASCII  =  new  Locale(String.valueOf(str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.US_ASCII  =  new  Locale(String.valueOf(str));	  Locale.US_ASCII    =    new    Locale(Locale.US_ASCII);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
28	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  null  :  locale.getDefault();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  null  :  locale.getDefault();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =(locale  ==  null)?  null  :  locale.getDefault();	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
29	[BUG]  [BUGGY]  Locale  locale  =  str.getDefault();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =  str.getDefault();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =  str.getDefault();	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
30	[BUG]  [BUGGY]  Locale.setDefault(str.getLocale());  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(str.getLocale());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(str.getLocale());	  Locale.setDefault(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
31	[BUG]  [BUGGY]  Locale.setDefault(str.getValue());  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(str.getValue());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(str.getValue());	  Locale.setDefault(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
32	[BUG]  [BUGGY]  Locale.setDefault(str.getType());  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(str.getType());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(str.getType());	  Locale.setDefault(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
33	[BUG]  [BUGGY]  Locale.setDefault(false,  true);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(false,  true);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(false,  true);	  Locale.setDefault(false);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
34	[BUG]  [BUGGY]  Locale.setDefault(false,  false);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(false,  false);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(false,  false);	  Locale.setDefault(false);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
35	[BUG]  [BUGGY]  Locale  str  =(Locale)this.locales.get(str);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)this.locales.get(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)this.locales.get(str);	  Locale    str    =(Locale)locales.get(str);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
36	[BUG]  [BUGGY]  Locale  str  =(Locale)locales.get(str  +  1);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)locales.get(str  +  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)locales.get(str  +  1);	  Locale    str    =(Locale)locales.get(str);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
37	[BUG]  [BUGGY]  Locale  str  =(Locale)locales.get(str.toLocale());  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)locales.get(str.toLocale());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)locales.get(str.toLocale());	  Locale    str    =(Locale)locales.get(str);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
38	[BUG]  [BUGGY]  Locale  locale  =(Locale)str.getKey();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =(Locale)str.getKey();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =(Locale)str.getKey();	  Locale    locale    =(Locale)str.getValue();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
39	[BUG]  [BUGGY]  Locale  locale  =(Locale)str.toLocale();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =(Locale)str.toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =(Locale)str.toLocale();	  Locale    locale    =(Locale)str.getValue();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  String  str  =  getClass().getRawClass().getLocale();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getRawClass().getLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getRawClass().getLocale();	  String    str    =    getClass().getLocale();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
41	[BUG]  [BUGGY]  Integer  len  =  str.length();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Integer  len  =  str.length();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Integer  len  =  str.length();	  int    len    =    str.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
42	[BUG]  [BUGGY]  allowNonLocale(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  allowNonLocale(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	allowNonLocale(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
43	[BUG]  [BUGGY]  allowLocale(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  allowLocale(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	allowLocale(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
44	[BUG]  [BUGGY]  allowLocale(str);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  allowLocale(str);  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	allowLocale(str);	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
45	[BUG]  [BUGGY]  allowNull(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  allowNull(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	allowNull(str)  {  throw  new  IllegalArgumentException( "Invalid  locale  format: "  +  str);  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
46	[BUG]  [BUGGY]  Locale  str  =  getLocale(str,  false);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  getLocale(str,  false);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  getLocale(str,  false);	  Locale    str    =    getLocale(str);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
47	[BUG]  [BUGGY]  Locale  str  =  getLocale(str,  true);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  getLocale(str,  true);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  getLocale(str,  true);	  Locale    str    =    getLocale(str);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
48	[BUG]  [BUGGY]  Locale  toLocale  =  locale.toLocale();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  locale.toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  locale.toLocale();	  Locale    toLocale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
49	[BUG]  [BUGGY]  Locale  toLocale  =  locale.get(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  locale.get(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  locale.get(str);	  Locale    toLocale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
50	[BUG]  [BUGGY]  Locale  str  =(Locale)this.getLocale();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)this.getLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)this.getLocale();	  Locale    str    =(Locale)getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
51	[BUG]  [BUGGY]  Locale  str  =(Locale)getUpperBound();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)getUpperBound();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)getUpperBound();	  Locale    str    =(Locale)getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
52	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)this.locales.get(str);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)this.locales.get(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)this.locales.get(str);	  Locale    toLocale    =(Locale)locales.get(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
53	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)locales.get(str  +  1);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)locales.get(str  +  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)locales.get(str  +  1);	  Locale    toLocale    =(Locale)locales.get(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
54	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)locales.get(str  -  1);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)locales.get(str  -  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)locales.get(str  -  1);	  Locale    toLocale    =(Locale)locales.get(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
55	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  Locale.getDefault();  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  Locale.getDefault();  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  return  Locale.getDefault();  }	  if(str    ==    null)    {    return    Locale.getDefault();    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
56	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  return  Locale.getDefault();  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  return  Locale.getDefault();  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	if(str  ==  null  ||  str.length()!=  0)  {  return  Locale.getDefault();  }	  if(str    ==    null)    {    return    Locale.getDefault();    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
57	[BUG]  [BUGGY]  while(str!=  null)  {  return  Locale.getDefault();  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  while(str!=  null)  {  return  Locale.getDefault();  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	while(str!=  null)  {  return  Locale.getDefault();  }	  if(str    ==    null)    {    return    Locale.getDefault();    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
58	[BUG]  [BUGGY]  Locale  l  =(Locale)str.getValue();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  l  =(Locale)str.getValue();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  l  =(Locale)str.getValue();	  Locale    l    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
59	[BUG]  [BUGGY]  Locale  l  =  getLocale();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  l  =  getLocale();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  l  =  getLocale();	  Locale    l    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  Locale  l  =(Locale)str.clone();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  l  =(Locale)str.clone();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  l  =(Locale)str.clone();	  Locale    l    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  int  len  =  string.length();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  int  len  =  string.length();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	int  len  =  string.length();	  int    len    =    str.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
62	[BUG]  [BUGGY]  Locale  cLanguagesByCountry  =  new  Locale(str.length());  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguagesByCountry  =  new  Locale(str.length());  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguagesByCountry  =  new  Locale(str.length());	  Locale    cLanguagesByCountry    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
63	[BUG]  [BUGGY]  Locale  cLanguagesByCountry  =  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguagesByCountry  =  null;  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguagesByCountry  =  null;	  Locale    cLanguagesByCountry    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
64	[BUG]  [BUGGY]  Locale  cLanguagesByCountry  =  locale.getDefault();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguagesByCountry  =  locale.getDefault();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguagesByCountry  =  locale.getDefault();	  Locale    cLanguagesByCountry    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
65	[BUG]  [BUGGY]  Locale.setDefault(str.toLocale());  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(str.toLocale());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(str.toLocale());	  Locale.setDefault(str);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
66	[BUG]  [BUGGY]  Locale.setDefault(locale);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(locale);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(locale);	  Locale.setDefault(str);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
67	[BUG]  [BUGGY]  String  str  =  getClass().getName()  + "; ";  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getName()  + "; ";  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getName()  + "; ";	  String    str    =    getClass().getSimpleName()    +   ";   ";    	non-compiled	[CE]  <identifier>  expected	21	None	replace
68	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + ";n ";  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName()  + ";n ";  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName()  + ";n ";	  String    str    =    getClass().getSimpleName()    +   ";   ";    	non-compiled	[CE]  <identifier>  expected	21	None	replace
69	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + ",  locale: ";  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName()  + ",  locale: ";  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName()  + ",  locale: ";	  String    str    =    getClass().getSimpleName()    +   ";   ";    	non-compiled	[CE]  <identifier>  expected	21	None	replace
70	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName(str).toLocale();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName(str).toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName(str).toLocale();	  String    str    =    getClass().getSimpleName(str);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
71	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName(str.toLocale());  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName(str.toLocale());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName(str.toLocale());	  String    str    =    getClass().getSimpleName(str);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
72	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName(str.toLowerCase());  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName(str.toLowerCase());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName(str.toLowerCase());	  String    str    =    getClass().getSimpleName(str);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
73	[BUG]  [BUGGY]  While(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  While(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	While(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
74	[BUG]  [BUGGY]  While(str!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  While(str!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	While(str!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
75	[BUG]  [BUGGY]  While(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  While(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	While(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
76	[BUG]  [BUGGY]  While(str  ==  null  &&  str.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  While(str  ==  null  &&  str.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	While(str  ==  null  &&  str.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
77	[BUG]  [BUGGY]  Locale  toLocale  =  Locale.newInstance(str);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  Locale.newInstance(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  Locale.newInstance(str);	  Locale    toLocale    =    Locale.newInstance();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
78	[BUG]  [BUGGY]  Locale  toLocale  =  Locale.newInstance(str,  false);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  Locale.newInstance(str,  false);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  Locale.newInstance(str,  false);	  Locale    toLocale    =    Locale.newInstance();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  Locale  str  =  this.locale.getLocale();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  this.locale.getLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  this.locale.getLocale();	  Locale    str    =    locale.getLocale();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
80	[BUG]  [BUGGY]  Locale  str  =(str  ==  null)?  getLocale()  :  null;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(str  ==  null)?  getLocale()  :  null;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(str  ==  null)?  getLocale()  :  null;	  Locale    str    =(locale    ==    null)?    getLocale()    :    null;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
81	[BUG]  [BUGGY]  Locale  str  =(str!=  null)?  getLocale()  :  null;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(str!=  null)?  getLocale()  :  null;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(str!=  null)?  getLocale()  :  null;	  Locale    str    =(locale    ==    null)?    getLocale()    :    null;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
82	[BUG]  [BUGGY]  String  str  =  getClass().getName().toLocale();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getName().toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getName().toLocale();	  String    str    =    getClass().getSimpleName().toLocale();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
83	[BUG]  [BUGGY]  String  str  =  getClass().getRawClass().getSimpleName().toLocale();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getRawClass().getSimpleName().toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getRawClass().getSimpleName().toLocale();	  String    str    =    getClass().getSimpleName().toLocale();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
84	[BUG]  [BUGGY]  Locale  str  =(Locale)str.getKey();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)str.getKey();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)str.getKey();	  Locale    str    =(Locale)str.getValue();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
85	[BUG]  [BUGGY]  Locale  str  =(Locale)str.toLocale();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)str.toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)str.toLocale();	  Locale    str    =(Locale)str.getValue();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
86	[BUG]  [BUGGY]  Locale.US_ASCII  =  new  Locale(Locale.getDefault(),  str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.US_ASCII  =  new  Locale(Locale.getDefault(),  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.US_ASCII  =  new  Locale(Locale.getDefault(),  str);	  Locale.US_ASCII    =    new    Locale(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
87	[BUG]  [BUGGY]  Locale.US_ASCII  =  new  Locale(str.getValue());  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.US_ASCII  =  new  Locale(str.getValue());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.US_ASCII  =  new  Locale(str.getValue());	  Locale.US_ASCII    =    new    Locale(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
88	[BUG]  [BUGGY]  Locale.US_ASCII  =  new  Locale(str.getType());  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.US_ASCII  =  new  Locale(str.getType());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.US_ASCII  =  new  Locale(str.getType());	  Locale.US_ASCII    =    new    Locale(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
89	[BUG]  [BUGGY]  Locale.setDefault(getLocale(),  str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(getLocale(),  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(getLocale(),  str);	  Locale.setDefault(getLocale());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
90	[BUG]  [BUGGY]  Locale  cLanguage  =(Locale)str.clone();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguage  =(Locale)str.clone();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguage  =(Locale)str.clone();	  Locale    cLanguage    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
91	[BUG]  [BUGGY]  Locale  cLanguage  =(Locale)str.getValue();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguage  =(Locale)str.getValue();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguage  =(Locale)str.getValue();	  Locale    cLanguage    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
92	[BUG]  [BUGGY]  Locale  cLanguage  =  Locale.newInstance();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguage  =  Locale.newInstance();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguage  =  Locale.newInstance();	  Locale    cLanguage    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
93	[BUG]  [BUGGY]  Locale  str  =  this.getLocale(str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  this.getLocale(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  this.getLocale(str);	  Locale    str    =    this.getLocale();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
94	[BUG]  [BUGGY]  Locale  str  =  this.toLocale(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  this.toLocale(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  this.toLocale(str);	  Locale    str    =    this.getLocale();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
95	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(str.length()  -  1);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(str.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(str.length()  -  1);	  Locale    toLocale    =    new    Locale(str.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
96	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(str.length()  +  1);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(str.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(str.length()  +  1);	  Locale    toLocale    =    new    Locale(str.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
97	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(str.length(),  str.length());  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(str.length(),  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(str.length(),  str.length());	  Locale    toLocale    =    new    Locale(str.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
98	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(str.length()  -  2);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(str.length()  -  2);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(str.length()  -  2);	  Locale    toLocale    =    new    Locale(str.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
99	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(str.getValue());  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(str.getValue());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(str.getValue());	  Locale    toLocale    =    new    Locale(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
100	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(Locale.getDefault(),  str);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(Locale.getDefault(),  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(Locale.getDefault(),  str);	  Locale    toLocale    =    new    Locale(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
101	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(String.valueOf(str));  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(String.valueOf(str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(String.valueOf(str));	  Locale    toLocale    =    new    Locale(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
102	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(str.getType());  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(str.getType());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(str.getType());	  Locale    toLocale    =    new    Locale(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
103	[BUG]  [BUGGY]  Locale  locale  =  getDefaultLocale();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =  getDefaultLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =  getDefaultLocale();	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
104	[BUG]  [BUGGY]  Locale  locale  =  getLocale(str);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =  getLocale(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =  getLocale(str);	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
105	[BUG]  [BUGGY]  Locale  locale  =  toLocale(str);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =  toLocale(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =  toLocale(str);	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
106	[BUG]  [BUGGY]  Locale  str  =(str  ==  null)?  getLocale()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(str  ==  null)?  getLocale()  :  Locale.getDefault();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(str  ==  null)?  getLocale()  :  Locale.getDefault();	  Locale    str    =(locale    ==    null)?    getLocale()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
107	[BUG]  [BUGGY]  Locale  str  =(str!=  null)?  getLocale()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(str!=  null)?  getLocale()  :  Locale.getDefault();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(str!=  null)?  getLocale()  :  Locale.getDefault();	  Locale    str    =(locale    ==    null)?    getLocale()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
108	[BUG]  [BUGGY]  Locale.setDefault(true,  false);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(true,  false);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(true,  false);	  Locale.setDefault(true);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
109	[BUG]  [BUGGY]  t  len  =  str.length();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  t  len  =  str.length();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	t  len  =  str.length();	  int    len    =    str.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
110	[BUG]  [BUGGY]  Int  len  =  str.length();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Int  len  =  str.length();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Int  len  =  str.length();	  int    len    =    str.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
111	[BUG]  [BUGGY]  Locale  locale  =  Locale.getLocale(str,  false);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =  Locale.getLocale(str,  false);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =  Locale.getLocale(str,  false);	  Locale    locale    =    Locale.getLocale(str);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
112	[BUG]  [BUGGY]  Locale  locale  =  Locale.getLocale(str,  true);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =  Locale.getLocale(str,  true);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =  Locale.getLocale(str,  true);	  Locale    locale    =    Locale.getLocale(str);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
113	[BUG]  [BUGGY]  Locale  locale  =  Locale.getLocale(String.valueOf(str));  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =  Locale.getLocale(String.valueOf(str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =  Locale.getLocale(String.valueOf(str));	  Locale    locale    =    Locale.getLocale(str);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
114	[BUG]  [BUGGY]  Locale.setDefault(getDefaultLocale(),  str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(getDefaultLocale(),  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(getDefaultLocale(),  str);	  Locale.setDefault(getDefaultLocale());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
115	[BUG]  [BUGGY]  Locale.setDefault(toLocale(str));  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(toLocale(str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(toLocale(str));	  Locale.setDefault(getDefaultLocale());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
116	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLowerCase();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLowerCase();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLowerCase();	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
117	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLocale();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName()  + "_ "  +  str.toLocale();	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
118	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.charAt(0);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName()  + "_ "  +  str.charAt(0);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName()  + "_ "  +  str.charAt(0);	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
119	[BUG]  [BUGGY]  String  str  =  getClass().getName()  + "_ "  +  str;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getName()  + "_ "  +  str;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getName()  + "_ "  +  str;	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
120	[BUG]  [BUGGY]  Locale  str  =(Locale)getAvailableLocale();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)getAvailableLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)getAvailableLocale();	  Locale    str    =(Locale)getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
121	[BUG]  [BUGGY]  Locale  str  =(Locale)getObject();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)getObject();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)getObject();	  Locale    str    =(Locale)getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
122	[BUG]  [BUGGY]  While(str  ==  null)  {  return  Locale.getDefault();  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  While(str  ==  null)  {  return  Locale.getDefault();  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	While(str  ==  null)  {  return  Locale.getDefault();  }	  if(str    ==    null)    {    return    Locale.getDefault();    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
123	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName().toLocale(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName().toLocale(Locale.ENGLISH);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName().toLocale(Locale.ENGLISH);	  String    str    =    getClass().getSimpleName().toLocale();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
124	[BUG]  [BUGGY]  allowNull(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  allowNull(str);  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	allowNull(str);	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
125	[BUG]  [BUGGY]  safeTree();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  safeTree();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	safeTree();	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
126	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName(str,  false);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName(str,  false);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName(str,  false);	  String    str    =    getClass().getSimpleName(str);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
127	[BUG]  [BUGGY]  Locale.for(String.valueOf(str));  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(String.valueOf(str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(String.valueOf(str));	  Locale.for(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
128	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + ",  null ";  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName()  + ",  null ";  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName()  + ",  null ";	  String    str    =    getClass().getSimpleName()    +   ";   ";    	non-compiled	[CE]  <identifier>  expected	21	None	replace
129	[BUG]  [BUGGY]  Locale  str  =  locale.toLocale();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  locale.toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  locale.toLocale();	  Locale    str    =    locale.getLocale();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
130	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(Locale.US);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(Locale.US);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(Locale.US);	  Locale    toLocale    =    new    Locale(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
131	[BUG]  [BUGGY]  Locale.setDefault(getDefault(),  str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(getDefault(),  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(getDefault(),  str);	  Locale.setDefault(getDefault());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
132	[BUG]  [BUGGY]  Locale  cLanguage  =(Locale)locales.get(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguage  =(Locale)locales.get(str);  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguage  =(Locale)locales.get(str);	  Locale    cLanguage    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
133	[BUG]  [BUGGY]  Locale  cLanguage  =  locale.getDefault();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguage  =  locale.getDefault();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguage  =  locale.getDefault();	  Locale    cLanguage    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
134	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  getLocale()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  getLocale()  :  Locale.getDefault();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =(locale  ==  null)?  getLocale()  :  Locale.getDefault();	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
135	[BUG]  [BUGGY]  Locale  str  =(Locale)locales.get(str  -  1);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)locales.get(str  -  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)locales.get(str  -  1);	  Locale    str    =(Locale)locales.get(str);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
136	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName()  + "._ "  +  str;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName()  + "._ "  +  str;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName()  + "._ "  +  str;	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
137	[BUG]  [BUGGY]  Locale  l  =(Locale)str;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  l  =(Locale)str;  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  l  =(Locale)str;	  Locale    l    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
138	[BUG]  [BUGGY]  Locale  l  =  locale.getLocale();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  l  =  locale.getLocale();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  l  =  locale.getLocale();	  Locale    l    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
139	[BUG]  [BUGGY]  Locale  str  =(locale  ==  null)?  null  :  locale.getLocale();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(locale  ==  null)?  null  :  locale.getLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(locale  ==  null)?  null  :  locale.getLocale();	  Locale    str    =    this.getLocale();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
140	[BUG]  [BUGGY]  Locale  str  =(locale  ==  null)?  null  :  this.getLocale();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(locale  ==  null)?  null  :  this.getLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(locale  ==  null)?  null  :  this.getLocale();	  Locale    str    =    this.getLocale();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
141	[BUG]  [BUGGY]  Locale  str  =  getDefaultLocale(str);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  getDefaultLocale(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  getDefaultLocale(str);	  Locale    str    =    getDefaultLocale();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
142	[BUG]  [BUGGY]  Locale  str  =  getLocale(String.valueOf(str));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  getLocale(String.valueOf(str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  getLocale(String.valueOf(str));	  Locale    str    =    getLocale(str);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
143	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)str.toUpperCase();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)str.toUpperCase();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)str.toUpperCase();	  Locale    toLocale    =(Locale)str.clone();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
144	[BUG]  [BUGGY]  While(str  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  While(str  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	While(str  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
145	[BUG]  [BUGGY]  While(str  ==  null)  {  throw  new  IllegalArgumentException( "Locale  cannot  be  null. ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  While(str  ==  null)  {  throw  new  IllegalArgumentException( "Locale  cannot  be  null. ");  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	While(str  ==  null)  {  throw  new  IllegalArgumentException( "Locale  cannot  be  null. ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
146	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(str.toLowerCase());  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(str.toLowerCase());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(str.toLowerCase());	  Locale    toLocale    =    new    Locale(str.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
147	[BUG]  [BUGGY]  Locale.setDefault(Locale.getDefault(),  str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(Locale.getDefault(),  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(Locale.getDefault(),  str);	  Locale.setDefault(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
148	[BUG]  [BUGGY]  Locale.setDefault(Locale.US);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(Locale.US);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(Locale.US);	  Locale.setDefault(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
149	[BUG]  [BUGGY]  Locale  locale  =(Locale)str.toUpperCase();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =(Locale)str.toUpperCase();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =(Locale)str.toUpperCase();	  Locale    locale    =(Locale)str.clone();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
150	[BUG]  [BUGGY]  Locale  str  =(len  ==  0)?  getLocale()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(len  ==  0)?  getLocale()  :  Locale.getDefault();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(len  ==  0)?  getLocale()  :  Locale.getDefault();	  Locale    str    =(locale    ==    null)?    getLocale()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
151	[BUG]  [BUGGY]  Locale.US_ASCII  =  new  Locale(Locale.getDefault()  +  1);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.US_ASCII  =  new  Locale(Locale.getDefault()  +  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.US_ASCII  =  new  Locale(Locale.getDefault()  +  1);	  Locale.US_ASCII    =    new    Locale(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
152	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(str);	  Locale    toLocale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
153	[BUG]  [BUGGY]  Locale.for(Locale.ENGLISH,  str)||(str  ==  null  &&  str.length()  >  0);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.ENGLISH,  str)||(str  ==  null  &&  str.length()  >  0);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.ENGLISH,  str)||(str  ==  null  &&  str.length()  >  0);	  Locale.for(Locale.ENGLISH,    str))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
154	[BUG]  [BUGGY]  Locale.US_ASCII  =  new  Locale(Locale.US);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.US_ASCII  =  new  Locale(Locale.US);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.US_ASCII  =  new  Locale(Locale.US);	  Locale.US_ASCII    =    new    Locale(Locale.US_ASCII);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
155	[BUG]  [BUGGY]  Locale  cLanguagesByCountry  =(Locale)locales.get(str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguagesByCountry  =(Locale)locales.get(str);  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguagesByCountry  =(Locale)locales.get(str);	  Locale    cLanguagesByCountry    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
156	[BUG]  [BUGGY]  Locale.setDefault(getDefaultLocale()  +  1);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(getDefaultLocale()  +  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(getDefaultLocale()  +  1);	  Locale.setDefault(getDefaultLocale());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
157	[BUG]  [BUGGY]  Locale  str  =(len  ==  0)?  getLocale()  :  null;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(len  ==  0)?  getLocale()  :  null;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(len  ==  0)?  getLocale()  :  null;	  Locale    str    =(locale    ==    null)?    getLocale()    :    null;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
158	[BUG]  [BUGGY]  Locale  str  =(locale  ==  null)?  getLocale()  :  locale;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(locale  ==  null)?  getLocale()  :  locale;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(locale  ==  null)?  getLocale()  :  locale;	  Locale    str    =(locale    ==    null)?    getLocale()    :    null;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
159	[BUG]  [BUGGY]  Locale.for(Locale.ENGLISH,  str)||  str.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.ENGLISH,  str)||  str.length()  ==  0)  {  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.ENGLISH,  str)||  str.length()  ==  0)  {	  Locale.for(Locale.ENGLISH,    str))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
160	[BUG]  [BUGGY]  Locale.for(Locale.ENGLISH,  str)||  str.length()  ==  1)  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.for(Locale.ENGLISH,  str)||  str.length()  ==  1)  {  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.for(Locale.ENGLISH,  str)||  str.length()  ==  1)  {	  Locale.for(Locale.ENGLISH,    str))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
161	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)cCountriesByCountry.get(str);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)cCountriesByCountry.get(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)cCountriesByCountry.get(str);	  Locale    toLocale    =(Locale)this.cCountriesByCountry.get(str);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
162	[BUG]  [BUGGY]  Locale  str  =(Locale)getKey();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)getKey();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)getKey();	  Locale    str    =(Locale)getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
163	[BUG]  [BUGGY]  Locale  str  =(Locale)getDefault();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)getDefault();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)getDefault();	  Locale    str    =(Locale)getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
164	[BUG]  [BUGGY]  Locale  toLocale  =(Locale)str.toLowerCase();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =(Locale)str.toLowerCase();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =(Locale)str.toLowerCase();	  Locale    toLocale    =(Locale)str.clone();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
165	[BUG]  [BUGGY]  Locale  locale  =  locale.toLocale();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  locale  =  locale.toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  locale  =  locale.toLocale();	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
166	[BUG]  [BUGGY]  String  str  =  getClass().getRealClass().getName();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getRealClass().getName();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getRealClass().getName();	  String    str    =    getClass().getRawClass().getName();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
167	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  tries  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	tries  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
168	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  [Delete]  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	[Delete]	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
169	[BUG]  [BUGGY]  tries  ==  null  ||  isEnabled(Feature.AUTO_LOCAL_DEFAULT))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  tries  ==  null  ||  isEnabled(Feature.AUTO_LOCAL_DEFAULT))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	tries  ==  null  ||  isEnabled(Feature.AUTO_LOCAL_DEFAULT))  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
170	[BUG]  [BUGGY]  tries  ==  null  ||  isEnabled(Feature.QUOTE_NULL_VALUE))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  tries  ==  null  ||  isEnabled(Feature.QUOTE_NULL_VALUE))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	tries  ==  null  ||  isEnabled(Feature.QUOTE_NULL_VALUE))  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
171	[BUG]  [BUGGY]  Locale  str  =  toLocale();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  toLocale();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  toLocale();	  Locale    str    =    getDefaultLocale();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
172	[BUG]  [BUGGY]  Locale  toLocale  =  new  Locale(str.substring(0,  str.length()  -  1));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  new  Locale(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  new  Locale(str.substring(0,  str.length()  -  1));	  Locale    toLocale    =    new    Locale(str.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
173	[BUG]  [BUGGY]  Locale  str  =(locale  ==  null)?  getLocale()  :  locale.getDefault();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(locale  ==  null)?  getLocale()  :  locale.getDefault();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(locale  ==  null)?  getLocale()  :  locale.getDefault();	  Locale    str    =(locale    ==    null)?    getLocale()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
174	[BUG]  [BUGGY]  aughtException( "Invalid  locale  format: "  +  str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  aughtException( "Invalid  locale  format: "  +  str);  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	aughtException( "Invalid  locale  format: "  +  str);	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
175	[BUG]  [BUGGY]  allowNonLocale(str);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  allowNonLocale(str);  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	allowNonLocale(str);	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    locale    format:   "    +    str);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
176	[BUG]  [BUGGY]  Locale  toLocale  =  Locale.getInstance();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  Locale.getInstance();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  Locale.getInstance();	  Locale    toLocale    =    Locale.newInstance();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
177	[BUG]  [BUGGY]  Locale.setDefault(getLanguage());  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(getLanguage());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(getLanguage());	  Locale.setDefault(getLocale());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
178	[BUG]  [BUGGY]  Locale  cLanguagesByCountry  =(Locale)cCountriesByLanguage.clone();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguagesByCountry  =(Locale)cCountriesByLanguage.clone();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguagesByCountry  =(Locale)cCountriesByLanguage.clone();	  Locale    cLanguagesByCountry    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
179	[BUG]  [BUGGY]  Locale  cLanguagesByCountry  =(Locale)cCountriesByLanguage.get(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguagesByCountry  =(Locale)cCountriesByLanguage.get(str);  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguagesByCountry  =(Locale)cCountriesByLanguage.get(str);	  Locale    cLanguagesByCountry    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
180	[BUG]  [BUGGY]  Locale  cLanguagesByCountry  =(Locale)cLanguagesByCountry.clone();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguagesByCountry  =(Locale)cLanguagesByCountry.clone();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguagesByCountry  =(Locale)cLanguagesByCountry.clone();	  Locale    cLanguagesByCountry    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
181	[BUG]  [BUGGY]  Locale  str  =(Locale)str.toUpperCase();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)str.toUpperCase();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)str.toUpperCase();	  Locale    str    =(Locale)str.getValue();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
182	[BUG]  [BUGGY]  Locale  cLanguage  =(Locale)cCountriesByLanguage.clone();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguage  =(Locale)cCountriesByLanguage.clone();  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguage  =(Locale)cCountriesByLanguage.clone();	  Locale    cLanguage    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
183	[BUG]  [BUGGY]  Locale  cLanguage  =(Locale)cCountriesByLanguage.get(str);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguage  =(Locale)cCountriesByLanguage.get(str);  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguage  =(Locale)cCountriesByLanguage.get(str);	  Locale    cLanguage    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
184	[BUG]  [BUGGY]  Locale  cLanguage  =(Locale)cLanguagesByCountry.get(str);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  cLanguage  =(Locale)cLanguagesByCountry.get(str);  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  cLanguage  =(Locale)cLanguagesByCountry.get(str);	  Locale    cLanguage    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
185	[BUG]  [BUGGY]  String  str  =  getClass().getName()  + "._ "  +  str;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getName()  + "._ "  +  str;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getName()  + "._ "  +  str;	  String    str    =    getClass().getSimpleName()    +   "_   "    +    str;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
186	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName().trim();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName().trim();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName().trim();	  String    str    =    getClass().getSimpleName().toLocale();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
187	[BUG]  [BUGGY]  String  str  =  getClass().getRealClass();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getRealClass();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getRealClass();	  String    str    =    getClass().getRawClass();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
188	[BUG]  [BUGGY]  Locale  str  =  this.getLanguage();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  this.getLanguage();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  this.getLanguage();	  Locale    str    =    this.getLocale();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
189	[BUG]  [BUGGY]  String  str  =  getClass().getSimpleName(str,  true);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  String  str  =  getClass().getSimpleName(str,  true);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	String  str  =  getClass().getSimpleName(str,  true);	  String    str    =    getClass().getSimpleName(str);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
190	[BUG]  [BUGGY]  Locale  str  =(Locale)this.cCountriesByCountry.get(str);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)this.cCountriesByCountry.get(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)this.cCountriesByCountry.get(str);	  Locale    str    =(Locale)locales.get(str);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
191	[BUG]  [BUGGY]  Locale  str  =(Locale)cCountriesByCountry.get(str);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)cCountriesByCountry.get(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)cCountriesByCountry.get(str);	  Locale    str    =(Locale)locales.get(str);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
192	[BUG]  [BUGGY]  Locale  toLocale  =  locale.get();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  toLocale  =  locale.get();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  toLocale  =  locale.get();	  Locale    toLocale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
193	[BUG]  [BUGGY]  Locale  l  =  new  Locale(Locale.getDefault());  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  l  =  new  Locale(Locale.getDefault());  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  l  =  new  Locale(Locale.getDefault());	  Locale    l    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
194	[BUG]  [BUGGY]  Locale  l  =  new  Locale(str);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  l  =  new  Locale(str);  [BUGGY]      return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  l  =  new  Locale(str);	  Locale    l    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
195	[BUG]  [BUGGY]  Locale.US_ASCII  =  new  Locale(Str.US_ASCII);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.US_ASCII  =  new  Locale(Str.US_ASCII);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.US_ASCII  =  new  Locale(Str.US_ASCII);	  Locale.US_ASCII    =    new    Locale(Locale.US_ASCII);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
196	[BUG]  [BUGGY]  Locale.setDefault(getDefaultLocale()  ||  getDefaultLocale()!=  null);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(getDefaultLocale()  ||  getDefaultLocale()!=  null);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(getDefaultLocale()  ||  getDefaultLocale()!=  null);	  Locale.setDefault(getDefaultLocale());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
197	[BUG]  [BUGGY]  Locale  str  =  toLocale(str);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =  toLocale(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =  toLocale(str);	  Locale    str    =    getLocale(str);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
198	[BUG]  [BUGGY]  Locale.setDefault(true,  true);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale.setDefault(true,  true);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale.setDefault(true,  true);	  Locale.setDefault(true);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
199	[BUG]  [BUGGY]  Locale  str  =(Locale)this.cCountriesByCountry.clone();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  Locale  toLocale(String  str)  {      [BUGGY]  Locale  str  =(Locale)this.cCountriesByCountry.clone();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  int  len  =  str.length();  if  (len  !=  2  &&  len  !=  5  &&  len  <  7)  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  }  char  ch0  =  str.charAt(0);  char  ch1  =  str.charAt(1);  if  (ch0  <  'a'  ||  ch0  >  'z'  ||  ch1  <  'a'  ||  ch1  >  'z')  {  throw  new  IllegalArgumentException(     "Invalid  locale  format:       "  +  str);  [CLASS]  LocaleUtils  [METHOD]  toLocale  [RETURN_TYPE]  Locale  String  str  [VARIABLES]  Set  cAvailableLocaleSet  boolean  char  ch0  ch1  ch3  ch4  List  cAvailableLocaleList  String  str  Map  cCountriesByLanguage  cLanguagesByCountry  int  len  	projects/Lang54/src/java/org/apache/commons/lang/LocaleUtils.java	0.5	95	95	1	replace	Locale  str  =(Locale)this.cCountriesByCountry.clone();	  Locale    str    =(Locale)str.clone();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
