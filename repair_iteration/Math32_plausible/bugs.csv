bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] super(boundary); [FE] ClassCastException [CONTEXT] public PolygonsSet(final Collection<SubHyperplane<Euclidean2D>> boundary) { [BUGGY] super(boundary); [BUGGY] } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] Collection)  Euclidean2D>> boundary [VARIABLES] AVLTree sorted Collection boundary OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	87	87	1	replace	
2	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public PolygonsSet(final Collection<SubHyperplane<Euclidean2D>> boundary) { [BUGGY] [BUGGY] super(boundary); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] Collection)  Euclidean2D>> boundary [VARIABLES] AVLTree sorted Collection boundary OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	87	87	1	add	
3	[BUG] [BUGGY] } [FE] ClassCastException [CONTEXT] public PolygonsSet(final Collection<SubHyperplane<Euclidean2D>> boundary) { super(boundary); [BUGGY] } [BUGGY]  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] Collection)  Euclidean2D>> boundary [VARIABLES] AVLTree sorted Collection boundary OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	88	88	1	replace	
4	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public PolygonsSet(final Collection<SubHyperplane<Euclidean2D>> boundary) { super(boundary); [BUGGY] [BUGGY] } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] Collection)  Euclidean2D>> boundary [VARIABLES] AVLTree sorted Collection boundary OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	88	88	1	add	
5	[BUG] [BUGGY] final BSPTree<Euclidean2D> tree = getTree(false); [FE] ClassCastException [CONTEXT] protected void computeGeometricalProperties() { final Vector2D[][] v = getVertices(); if (v.length == 0) { [BUGGY] final BSPTree<Euclidean2D> tree = getTree(false); [BUGGY] if ((Boolean) tree.getAttribute()) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(0); setBarycenter(new Vector2D(0, 0)); } } else if (v[0][0] == null) {  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	
6	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] protected void computeGeometricalProperties() { final Vector2D[][] v = getVertices(); if (v.length == 0) { [BUGGY] [BUGGY] final BSPTree<Euclidean2D> tree = getTree(false); if ((Boolean) tree.getAttribute()) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(0); setBarycenter(new Vector2D(0, 0)); } } else if (v[0][0] == null) {  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	add	
7	[BUG] [BUGGY] if ((Boolean) tree.getAttribute()) { [FE] ClassCastException [CONTEXT] protected void computeGeometricalProperties() { final Vector2D[][] v = getVertices(); if (v.length == 0) { final BSPTree<Euclidean2D> tree = getTree(false); [BUGGY] if ((Boolean) tree.getAttribute()) { [BUGGY]  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(0); setBarycenter(new Vector2D(0, 0)); } } else if (v[0][0] == null) {  setSize(Double.POSITIVE_INFINITY); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	136	136	1	replace	
8	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] protected void computeGeometricalProperties() { final Vector2D[][] v = getVertices(); if (v.length == 0) { final BSPTree<Euclidean2D> tree = getTree(false); [BUGGY] [BUGGY] if ((Boolean) tree.getAttribute()) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(0); setBarycenter(new Vector2D(0, 0)); } } else if (v[0][0] == null) {  setSize(Double.POSITIVE_INFINITY); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	136	136	1	add	
9	[BUG] [BUGGY] return null; [FE] ClassCastException [CONTEXT] selectedNode = n; selectedSegment= segment; selectedDistance = distance; } } if (selectedDistance > 1.0e-10) {    [BUGGY] return null; [BUGGY] } end = selectedSegment.getEnd(); loop.add(selectedSegment); selectedNode.delete(); } if ((loop.size() == 2) && !open) {  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] followLoop [RETURN_TYPE] List  Node node ComparableSegment> sorted [VARIABLES] boolean open Vector2D end globalStart double distance selectedDistance Node n node selectedNode ArrayList loop ComparableSegment lowerLeft segment selectedSegment upperRight AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	330	330	1	replace	
10	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] selectedNode = n; selectedSegment= segment; selectedDistance = distance; } } if (selectedDistance > 1.0e-10) {    [BUGGY] [BUGGY] return null; } end = selectedSegment.getEnd(); loop.add(selectedSegment); selectedNode.delete(); } if ((loop.size() == 2) && !open) {  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] followLoop [RETURN_TYPE] List  Node node ComparableSegment> sorted [VARIABLES] boolean open Vector2D end globalStart double distance selectedDistance Node n node selectedNode ArrayList loop ComparableSegment lowerLeft segment selectedSegment upperRight AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	330	330	1	add	
11	[BUG] [BUGGY] super(); [FE] ClassCastException [CONTEXT] public PolygonsSet() { [BUGGY] super(); [BUGGY] } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] PolygonsSet()  [VARIABLES] AVLTree sorted OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	50	50	1	replace	
12	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public PolygonsSet() { [BUGGY] [BUGGY] super(); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] PolygonsSet()  [VARIABLES] AVLTree sorted OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	50	50	1	add	
13	[BUG] [BUGGY] } [FE] ClassCastException [CONTEXT] public PolygonsSet() { super(); [BUGGY] } [BUGGY]  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] PolygonsSet()  [VARIABLES] AVLTree sorted OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	51	51	1	replace	
14	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public PolygonsSet() { super(); [BUGGY] [BUGGY] } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] PolygonsSet()  [VARIABLES] AVLTree sorted OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	51	51	1	add	
15	[BUG] [BUGGY] super(tree); [FE] ClassCastException [CONTEXT] public PolygonsSet(final BSPTree<Euclidean2D> tree) { [BUGGY] super(tree); [BUGGY] } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] BSPTree)  Euclidean2D> tree [VARIABLES] AVLTree sorted BSPTree tree OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	63	63	1	replace	
16	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public PolygonsSet(final BSPTree<Euclidean2D> tree) { [BUGGY] [BUGGY] super(tree); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] BSPTree)  Euclidean2D> tree [VARIABLES] AVLTree sorted BSPTree tree OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	63	63	1	add	
17	[BUG] [BUGGY] } [FE] ClassCastException [CONTEXT] public PolygonsSet(final BSPTree<Euclidean2D> tree) { super(tree); [BUGGY] } [BUGGY]  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] BSPTree)  Euclidean2D> tree [VARIABLES] AVLTree sorted BSPTree tree OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	64	64	1	replace	
18	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public PolygonsSet(final BSPTree<Euclidean2D> tree) { super(tree); [BUGGY] [BUGGY] } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] <init> [RETURN_TYPE] BSPTree)  Euclidean2D> tree [VARIABLES] AVLTree sorted BSPTree tree OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	64	64	1	add	
19	[BUG] [BUGGY] return new PolygonsSet(tree); [FE] ClassCastException [CONTEXT] public PolygonsSet buildNew(final BSPTree<Euclidean2D> tree) { [BUGGY] return new PolygonsSet(tree); [BUGGY] } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] buildNew [RETURN_TYPE] PolygonsSet  Euclidean2D> tree [VARIABLES] AVLTree sorted BSPTree tree OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	125	125	1	replace	
20	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public PolygonsSet buildNew(final BSPTree<Euclidean2D> tree) { [BUGGY] [BUGGY] return new PolygonsSet(tree); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] buildNew [RETURN_TYPE] PolygonsSet  Euclidean2D> tree [VARIABLES] AVLTree sorted BSPTree tree OrderedTuple sortingKey boolean Vector2D[][] vertices  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	125	125	1	add	
21	[BUG] [BUGGY] final Vector2D[][] v = getVertices(); [FE] ClassCastException [CONTEXT] protected void computeGeometricalProperties() { [BUGGY] final Vector2D[][] v = getVertices(); [BUGGY]  if (v.length == 0) { final BSPTree<Euclidean2D> tree = getTree(false); if ((Boolean) tree.getAttribute()) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(0); setBarycenter(new Vector2D(0, 0)); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	132	132	1	replace	
22	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] protected void computeGeometricalProperties() { [BUGGY] [BUGGY] final Vector2D[][] v = getVertices(); if (v.length == 0) { final BSPTree<Euclidean2D> tree = getTree(false); if ((Boolean) tree.getAttribute()) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(0); setBarycenter(new Vector2D(0, 0)); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	132	132	1	add	
23	[BUG] [BUGGY] if (v.length == 0) { [FE] ClassCastException [CONTEXT] protected void computeGeometricalProperties() { final Vector2D[][] v = getVertices(); [BUGGY] if (v.length == 0) { [BUGGY] final BSPTree<Euclidean2D> tree = getTree(false); if ((Boolean) tree.getAttribute()) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(0); setBarycenter(new Vector2D(0, 0)); } } else if (v[0][0] == null) { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	134	134	1	replace	
24	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] protected void computeGeometricalProperties() { final Vector2D[][] v = getVertices(); [BUGGY] [BUGGY] if (v.length == 0) { final BSPTree<Euclidean2D> tree = getTree(false); if ((Boolean) tree.getAttribute()) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(0); setBarycenter(new Vector2D(0, 0)); } } else if (v[0][0] == null) { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	134	134	1	add	
25	[BUG] [BUGGY] } else if (v[0][0] == null) { [FE] ClassCastException [CONTEXT] if (v.length == 0) { final BSPTree<Euclidean2D> tree = getTree(false); if ((Boolean) tree.getAttribute()) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(0); setBarycenter(new Vector2D(0, 0)); } [BUGGY] } else if (v[0][0] == null) { [BUGGY]  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  double sum= 0; double sumX = 0; double sumY = 0;  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	144	144	1	replace	
26	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] if (v.length == 0) { final BSPTree<Euclidean2D> tree = getTree(false); if ((Boolean) tree.getAttribute()) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(0); setBarycenter(new Vector2D(0, 0)); } [BUGGY] [BUGGY] } else if (v[0][0] == null) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  double sum= 0; double sumX = 0; double sumY = 0;  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	144	144	1	add	
27	[BUG] [BUGGY] double sum= 0; [FE] ClassCastException [CONTEXT] } else if (v[0][0] == null) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  [BUGGY] double sum= 0; [BUGGY] double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	151	151	1	replace	
28	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] } else if (v[0][0] == null) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  [BUGGY] [BUGGY] double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	151	151	1	add	
29	[BUG] [BUGGY] double sumX = 0; [FE] ClassCastException [CONTEXT] } else if (v[0][0] == null) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  double sum= 0; [BUGGY] double sumX = 0; [BUGGY] double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	152	152	1	replace	
30	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] } else if (v[0][0] == null) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  double sum= 0; [BUGGY] [BUGGY] double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	152	152	1	add	
31	[BUG] [BUGGY] double sumY = 0; [FE] ClassCastException [CONTEXT] } else if (v[0][0] == null) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  double sum= 0; double sumX = 0; [BUGGY] double sumY = 0; [BUGGY]  for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	153	153	1	replace	
32	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] } else if (v[0][0] == null) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  double sum= 0; double sumX = 0; [BUGGY] [BUGGY] double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	153	153	1	add	
33	[BUG] [BUGGY] for (Vector2D[] loop : v) { [FE] ClassCastException [CONTEXT]  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  double sum= 0; double sumX = 0; double sumY = 0; [BUGGY] for (Vector2D[] loop : v) { [BUGGY] double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	155	155	1	replace	
34	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT]  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  double sum= 0; double sumX = 0; double sumY = 0; [BUGGY] [BUGGY] for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	155	155	1	add	
35	[BUG] [BUGGY] double x1 = loop[loop.length - 1].getX(); [FE] ClassCastException [CONTEXT] setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { [BUGGY] double x1 = loop[loop.length - 1].getX(); [BUGGY] double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	156	156	1	replace	
36	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else {  double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { [BUGGY] [BUGGY] double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	156	156	1	add	
37	[BUG] [BUGGY] double y1 = loop[loop.length - 1].getY(); [FE] ClassCastException [CONTEXT] setBarycenter(Vector2D.NaN); } else {  double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); [BUGGY] double y1 = loop[loop.length - 1].getY(); [BUGGY] for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	157	157	1	replace	
38	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] setBarycenter(Vector2D.NaN); } else {  double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); [BUGGY] [BUGGY] double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	157	157	1	add	
39	[BUG] [BUGGY] for (final Vector2D point : loop) { [FE] ClassCastException [CONTEXT] } else {  double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); [BUGGY] for (final Vector2D point : loop) { [BUGGY] final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	158	158	1	replace	
40	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] } else {  double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); [BUGGY] [BUGGY] for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	158	158	1	add	
41	[BUG] [BUGGY] final double x0 = x1; [FE] ClassCastException [CONTEXT]  double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { [BUGGY] final double x0 = x1; [BUGGY] final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } }  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	159	159	1	replace	
42	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT]  double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { [BUGGY] [BUGGY] final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } }  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	159	159	1	add	
43	[BUG] [BUGGY] final double y0 = y1; [FE] ClassCastException [CONTEXT] double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; [BUGGY] final double y0 = y1; [BUGGY] x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	160	160	1	replace	
44	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; [BUGGY] [BUGGY] final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	160	160	1	add	
45	[BUG] [BUGGY] x1 = point.getX(); [FE] ClassCastException [CONTEXT] double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; [BUGGY] x1 = point.getX(); [BUGGY] y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) {  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	161	161	1	replace	
46	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] double sum= 0; double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; [BUGGY] [BUGGY] x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) {  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	161	161	1	add	
47	[BUG] [BUGGY] y1 = point.getY(); [FE] ClassCastException [CONTEXT] double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); [BUGGY] y1 = point.getY(); [BUGGY] final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	162	162	1	replace	
48	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] double sumX = 0; double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); [BUGGY] [BUGGY] y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	162	162	1	add	
49	[BUG] [BUGGY] final double factor = x0 * y1 - y0 * x1; [FE] ClassCastException [CONTEXT] double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); [BUGGY] final double factor = x0 * y1 - y0 * x1; [BUGGY] sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	163	163	1	replace	
50	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] double sumY = 0; for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); [BUGGY] [BUGGY] final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	163	163	1	add	
51	[BUG] [BUGGY] sum+= factor; [FE] ClassCastException [CONTEXT] for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; [BUGGY] sum+= factor; [BUGGY] sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	164	164	1	replace	
52	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; [BUGGY] [BUGGY] sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	164	164	1	add	
53	[BUG] [BUGGY] sumX += factor * (x0 + x1); [FE] ClassCastException [CONTEXT] for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; [BUGGY] sumX += factor * (x0 + x1); [BUGGY] sumY += factor * (y0 + y1); } } if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(sum / 2); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	165	165	1	replace	
54	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] for (Vector2D[] loop : v) { double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; [BUGGY] [BUGGY] sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(sum / 2); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	165	165	1	add	
55	[BUG] [BUGGY] sumY += factor * (y0 + y1); [FE] ClassCastException [CONTEXT] double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); [BUGGY] sumY += factor * (y0 + y1); [BUGGY] } } if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(sum / 2); setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum))); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	166	166	1	replace	
56	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] double x1 = loop[loop.length - 1].getX(); double y1 = loop[loop.length - 1].getY(); for (final Vector2D point : loop) { final double x0 = x1; final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); [BUGGY] [BUGGY] sumY += factor * (y0 + y1); } } if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(sum / 2); setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum))); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	166	166	1	add	
57	[BUG] [BUGGY] if (sum < 0) { [FE] ClassCastException [CONTEXT] final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } [BUGGY] if (sum < 0) { [BUGGY]  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(sum / 2); setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum))); } } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	170	170	1	replace	
58	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] final double y0 = y1; x1 = point.getX(); y1 = point.getY(); final double factor = x0 * y1 - y0 * x1; sum+= factor; sumX += factor * (x0 + x1); sumY += factor * (y0 + y1); } } [BUGGY] [BUGGY] if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(sum / 2); setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum))); } } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	170	170	1	add	
59	[BUG] [BUGGY] setSize(sum / 2); [FE] ClassCastException [CONTEXT] if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { [BUGGY] setSize(sum / 2); [BUGGY] setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum))); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	175	175	1	replace	
60	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { [BUGGY] [BUGGY] setSize(sum / 2); setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum))); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	175	175	1	add	
61	[BUG] [BUGGY] setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum))); [FE] ClassCastException [CONTEXT] if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(sum / 2); [BUGGY] setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum))); [BUGGY] } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	176	176	1	replace	
62	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] if (sum < 0) {  setSize(Double.POSITIVE_INFINITY); setBarycenter(Vector2D.NaN); } else { setSize(sum / 2); [BUGGY] [BUGGY] setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum))); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] computeGeometricalProperties [RETURN_TYPE] void  [VARIABLES] BSPTree tree boolean Vector2D point double factor sum sumX sumY x0 x1 y0 y1 AVLTree sorted OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	176	176	1	add	
64	[BUG] [BUGGY] if (vertices == null) { [FE] ClassCastException [CONTEXT] public Vector2D[][] getVertices() { [BUGGY] if (vertices == null) { [BUGGY] if (getTree(false).getCut() == null) { vertices = new Vector2D[0][]; } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	207	207	1	replace	
65	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public Vector2D[][] getVertices() { [BUGGY] [BUGGY] if (vertices == null) { if (getTree(false).getCut() == null) { vertices = new Vector2D[0][]; } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	207	207	1	add	
66	[BUG] [BUGGY] if (getTree(false).getCut() == null) { [FE] ClassCastException [CONTEXT] public Vector2D[][] getVertices() { if (vertices == null) { [BUGGY] if (getTree(false).getCut() == null) { [BUGGY] vertices = new Vector2D[0][]; } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();    [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	208	208	1	replace	
67	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] public Vector2D[][] getVertices() { if (vertices == null) { [BUGGY] [BUGGY] if (getTree(false).getCut() == null) { vertices = new Vector2D[0][]; } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();    [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	208	208	1	add	
68	[BUG] [BUGGY] final SegmentsBuilder visitor = new SegmentsBuilder(); [FE] ClassCastException [CONTEXT] if (getTree(false).getCut() == null) { vertices = new Vector2D[0][]; } else {  [BUGGY] final SegmentsBuilder visitor = new SegmentsBuilder(); [BUGGY] getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	213	213	1	replace	
69	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] if (getTree(false).getCut() == null) { vertices = new Vector2D[0][]; } else {  [BUGGY] [BUGGY] final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	213	213	1	add	
70	[BUG] [BUGGY] getTree(true).visit(visitor); [FE] ClassCastException [CONTEXT] if (getTree(false).getCut() == null) { vertices = new Vector2D[0][]; } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); [BUGGY] getTree(true).visit(visitor); [BUGGY] final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	214	214	1	replace	
71	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] if (getTree(false).getCut() == null) { vertices = new Vector2D[0][]; } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); [BUGGY] [BUGGY] getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	214	214	1	add	
72	[BUG] [BUGGY] final AVLTree<ComparableSegment> sorted = visitor.getSorted(); [FE] ClassCastException [CONTEXT] if (getTree(false).getCut() == null) { vertices = new Vector2D[0][]; } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); [BUGGY] final AVLTree<ComparableSegment> sorted = visitor.getSorted(); [BUGGY]    final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	215	215	1	replace	
73	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] if (getTree(false).getCut() == null) { vertices = new Vector2D[0][]; } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); [BUGGY] [BUGGY] final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	215	215	1	add	
74	[BUG] [BUGGY] final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); [FE] ClassCastException [CONTEXT] vertices = new Vector2D[0][]; } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   [BUGGY] final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); [BUGGY] while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	219	219	1	replace	
75	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] vertices = new Vector2D[0][]; } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   [BUGGY] [BUGGY] final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	219	219	1	add	
76	[BUG] [BUGGY] while (!sorted.isEmpty()) { [FE] ClassCastException [CONTEXT] } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); [BUGGY] while (!sorted.isEmpty()) { [BUGGY] final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	220	220	1	replace	
77	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] } else {  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); [BUGGY] [BUGGY] while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	220	220	1	add	
78	[BUG] [BUGGY] final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); [FE] ClassCastException [CONTEXT]  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { [BUGGY] final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); [BUGGY] final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0;  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	221	221	1	replace	
79	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT]  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { [BUGGY] [BUGGY] final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0;  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	221	221	1	add	
80	[BUG] [BUGGY] final List<ComparableSegment> loop = followLoop(node, sorted); [FE] ClassCastException [CONTEXT]  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); [BUGGY] final List<ComparableSegment> loop = followLoop(node, sorted); [BUGGY] if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	222	222	1	replace	
81	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT]  final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); [BUGGY] [BUGGY] final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	222	222	1	add	
82	[BUG] [BUGGY] if (loop != null) { [FE] ClassCastException [CONTEXT] final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); [BUGGY] if (loop != null) { [BUGGY] loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	223	223	1	replace	
83	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] final SegmentsBuilder visitor = new SegmentsBuilder(); getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); [BUGGY] [BUGGY] if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	223	223	1	add	
84	[BUG] [BUGGY] loops.add(loop); [FE] ClassCastException [CONTEXT] getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { [BUGGY] loops.add(loop); [BUGGY] } }  vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	224	224	1	replace	
85	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] getTree(true).visit(visitor); final AVLTree<ComparableSegment> sorted = visitor.getSorted();   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { [BUGGY] [BUGGY] loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	224	224	1	add	
86	[BUG] [BUGGY] } [FE] ClassCastException [CONTEXT]   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } [BUGGY] } [BUGGY]   vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	226	226	1	replace	
87	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT]   final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } [BUGGY] [BUGGY] }  vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	226	226	1	add	
88	[BUG] [BUGGY] vertices = new Vector2D[loops.size()][]; [FE] ClassCastException [CONTEXT] final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  [BUGGY] vertices = new Vector2D[loops.size()][]; [BUGGY] int i = 0; for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { null, line.toSpace(new Vector1D(-Float.MAX_VALUE)), line.toSpace(new Vector1D(+Float.MAX_VALUE)) [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	229	229	1	replace	
89	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] final ArrayList<List<ComparableSegment>> loops = new ArrayList<List<ComparableSegment>>(); while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  [BUGGY] [BUGGY] vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { null, line.toSpace(new Vector1D(-Float.MAX_VALUE)), line.toSpace(new Vector1D(+Float.MAX_VALUE)) [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	229	229	1	add	
90	[BUG] [BUGGY] int i = 0; [FE] ClassCastException [CONTEXT] while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; [BUGGY] int i = 0; [BUGGY]  for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { null, line.toSpace(new Vector1D(-Float.MAX_VALUE)), line.toSpace(new Vector1D(+Float.MAX_VALUE)) }; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	230	230	1	replace	
91	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] while (!sorted.isEmpty()) { final AVLTree<ComparableSegment>.Node node = sorted.getSmallest(); final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; [BUGGY] [BUGGY] int i = 0; for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { null, line.toSpace(new Vector1D(-Float.MAX_VALUE)), line.toSpace(new Vector1D(+Float.MAX_VALUE)) }; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	230	230	1	add	
92	[BUG] [BUGGY] for (final List<ComparableSegment> loop : loops) { [FE] ClassCastException [CONTEXT] final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; [BUGGY] for (final List<ComparableSegment> loop : loops) { [BUGGY] if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { null, line.toSpace(new Vector1D(-Float.MAX_VALUE)), line.toSpace(new Vector1D(+Float.MAX_VALUE)) }; } else if (loop.get(0).getStart() == null) {  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	232	232	1	replace	
93	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] final List<ComparableSegment> loop = followLoop(node, sorted); if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; [BUGGY] [BUGGY] for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { null, line.toSpace(new Vector1D(-Float.MAX_VALUE)), line.toSpace(new Vector1D(+Float.MAX_VALUE)) }; } else if (loop.get(0).getStart() == null) {  [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	232	232	1	add	
94	[BUG] [BUGGY] if (loop.size() < 2) { [FE] ClassCastException [CONTEXT] if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { [BUGGY] if (loop.size() < 2) { [BUGGY]  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { null, line.toSpace(new Vector1D(-Float.MAX_VALUE)), line.toSpace(new Vector1D(+Float.MAX_VALUE)) }; } else if (loop.get(0).getStart() == null) {  final Vector2D[] array = new Vector2D[loop.size() + 2]; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	233	233	1	replace	
95	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] if (loop != null) { loops.add(loop); } }  vertices = new Vector2D[loops.size()][]; int i = 0; for (final List<ComparableSegment> loop : loops) { [BUGGY] [BUGGY] if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { null, line.toSpace(new Vector1D(-Float.MAX_VALUE)), line.toSpace(new Vector1D(+Float.MAX_VALUE)) }; } else if (loop.get(0).getStart() == null) {  final Vector2D[] array = new Vector2D[loop.size() + 2]; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	233	233	1	add	
96	[BUG] [BUGGY] } else if (loop.get(0).getStart() == null) { [FE] ClassCastException [CONTEXT] for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { null, line.toSpace(new Vector1D(-Float.MAX_VALUE)), line.toSpace(new Vector1D(+Float.MAX_VALUE)) }; [BUGGY] } else if (loop.get(0).getStart() == null) { [BUGGY]  final Vector2D[] array = new Vector2D[loop.size() + 2]; int j = 0; for (Segment segment : loop) { if (j == 0) {  double x = segment.getLine().toSubSpace(segment.getEnd()).getX(); x -= FastMath.max(1.0, FastMath.abs(x / 2)); array[j++] = null; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	241	241	1	replace	
97	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] for (final List<ComparableSegment> loop : loops) { if (loop.size() < 2) {  final Line line = loop.get(0).getLine(); vertices[i++] = new Vector2D[] { null, line.toSpace(new Vector1D(-Float.MAX_VALUE)), line.toSpace(new Vector1D(+Float.MAX_VALUE)) }; [BUGGY] [BUGGY] } else if (loop.get(0).getStart() == null) {  final Vector2D[] array = new Vector2D[loop.size() + 2]; int j = 0; for (Segment segment : loop) { if (j == 0) {  double x = segment.getLine().toSubSpace(segment.getEnd()).getX(); x -= FastMath.max(1.0, FastMath.abs(x / 2)); array[j++] = null; [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	241	241	1	add	
98	[BUG] [BUGGY] final Vector2D[] array = new Vector2D[loop.size()]; [FE] ClassCastException [CONTEXT] if (j == (array.length - 1)) {  double x = segment.getLine().toSubSpace(segment.getStart()).getX(); x += FastMath.max(1.0, FastMath.abs(x / 2)); array[j++] = segment.getLine().toSpace(new Vector1D(x)); } } vertices[i++] = array; } else { [BUGGY] final Vector2D[] array = new Vector2D[loop.size()]; [BUGGY] int j = 0; for (Segment segment : loop) { array[j++] = segment.getStart(); } vertices[i++] = array; } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	270	270	1	replace	
99	[BUG] [BUGGY] [FE] ClassCastException [CONTEXT] if (j == (array.length - 1)) {  double x = segment.getLine().toSubSpace(segment.getStart()).getX(); x += FastMath.max(1.0, FastMath.abs(x / 2)); array[j++] = segment.getLine().toSpace(new Vector1D(x)); } } vertices[i++] = array; } else { [BUGGY] [BUGGY] final Vector2D[] array = new Vector2D[loop.size()]; int j = 0; for (Segment segment : loop) { array[j++] = segment.getStart(); } vertices[i++] = array; } [CLASS] PolygonsSet ComparableSegment SegmentsBuilder [METHOD] getVertices [RETURN_TYPE] Vector2D[][]  [VARIABLES] double x Node node ArrayList loops OrderedTuple sortingKey Vector2D[][] v vertices Vector2D[] array int i j Segment segment Line line boolean SegmentsBuilder visitor AVLTree sorted List loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	0.4082482904638631	270	270	1	add	
