bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone);  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone);	  junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  Pattern.compile(pattern,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Pattern.compile(pattern,  timeZone,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Pattern.compile(pattern,  timeZone,  locale);	      junit.framework.ComparisonFailure:    Pattern.compile(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale,  false);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale,  false);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale,  false);	      junit.framework.ComparisonFailure:    Pattern.compile(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale,  null);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale,  null);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale,  null);	      junit.framework.ComparisonFailure:    Pattern.compile(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone,  Locale.getDefault());  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone,  Locale.getDefault());  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone,  Locale.getDefault());	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  this.junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  this.junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	this.junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone,  locale);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  true;  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  true;  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  true;	  junit.framework.ComparisonFailure:    false;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null;  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  null;  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  null;	  junit.framework.ComparisonFailure:    false;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  DEFAULT;  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  DEFAULT;  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  DEFAULT;	  junit.framework.ComparisonFailure:    false;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  locale);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  locale);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  TimeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  TimeZone.getDefault());  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  TimeZone.getDefault());	      junit.framework.ComparisonFailure    =    new    FastDateFormat(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  null);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  this(pattern,  timeZone,  locale,  null);  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	this(pattern,  timeZone,  locale,  null);	  this(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  false);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  this(pattern,  timeZone,  locale,  false);  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	this(pattern,  timeZone,  locale,  false);	  this(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  true);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  this(pattern,  timeZone,  locale,  true);  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	this(pattern,  timeZone,  locale,  true);	  this(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  mLocale);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  this(pattern,  timeZone,  locale,  mLocale);  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	this(pattern,  timeZone,  locale,  mLocale);	  this(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mValues,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mValues,  timeZone,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Pattern  pattern  =  Pattern.compile(mValues,  timeZone,  locale);	      Pattern    pattern    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mValues,  timeZone);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mValues,  timeZone);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Pattern  pattern  =  Pattern.compile(mValues,  timeZone);	      Pattern    pattern    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  mValues,  locale);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  mValues,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Pattern  pattern  =  Pattern.compile(mPattern,  mValues,  locale);	      Pattern    pattern    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStandard,  mValues,  locale);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mStandard,  mValues,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Pattern  pattern  =  Pattern.compile(mStandard,  mValues,  locale);	      Pattern    pattern    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mValue,  locale);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mValue,  locale);  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Pattern  pattern  =  Pattern.compile(mValue,  locale);	  junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  locale);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  locale);  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  locale);	  junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mValue);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mValue);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mValue);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValue,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  pattern,  locale);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  pattern,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  pattern,  locale);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValue,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mValues);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mValues);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mValues);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValue,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  timeZone);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  timeZone);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  timeZone);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValue,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  Locale  locale  =  locale.getDefault();  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =  locale.getDefault();  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Locale  locale  =  locale.getDefault();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  Locale  locale  =  locale.getLocale();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =  locale.getLocale();  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Locale  locale  =  locale.getLocale();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(pattern);	      junit.framework.ComparisonFailure:    pattern;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  pattern,  timeZone;  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  pattern,  timeZone;  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  pattern,  timeZone;	      junit.framework.ComparisonFailure:    pattern;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  timeZone,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  timeZone,  locale);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
31	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  pattern);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  pattern);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  pattern);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  timeZone);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  timeZone);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  timeZone);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  locale);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  locale);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  locale);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  locale);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone,  pattern);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone,  pattern);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone,  pattern);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(pattern,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure(pattern,  timeZone,  locale);  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure(pattern,  timeZone,  locale);	  junit.framework.ComparisonFailure:    this;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mValues,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mValues,  timeZone,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(mValues,  timeZone,  locale);	      junit.framework.ComparisonFailure:    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mValues,  timeZone);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mValues,  timeZone);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(mValues,  timeZone);	      junit.framework.ComparisonFailure:    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mValues,  pattern);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mValues,  pattern);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(mValues,  pattern);	      junit.framework.ComparisonFailure:    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mValues,  pattern,  locale);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mValues,  pattern,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(mValues,  pattern,  locale);	      junit.framework.ComparisonFailure:    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale,  null);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale,  null);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale,  null);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  pattern  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  pattern  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  pattern	  junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected  +  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  expected  +  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  expected  +	  junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  Locale  locale  =  getLocale();  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =  getLocale();  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Locale  locale  =  getLocale();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(timeZone,  pattern,  locale);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(timeZone,  pattern,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(timeZone,  pattern,  locale);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(mean,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(mean,  timeZone,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(mean,  timeZone,  locale);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  TimeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  TimeZone.getDefault());  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  TimeZone.getDefault());	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
51	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  TimeZone.getDefault(),  locale);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  TimeZone.getDefault(),  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  TimeZone.getDefault(),  locale);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(timeZone,  pattern);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(timeZone,  pattern);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(timeZone,  pattern);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone,  locale);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  Pattern.DEFAULT,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  Pattern.DEFAULT,  timeZone,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  Pattern.DEFAULT,  timeZone,  locale);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone,  pattern,  locale);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone,  pattern,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  timeZone,  pattern,  locale);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mValues,  locale);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mValues,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mValues,  locale);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(this,  locale);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(this,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(this,  locale);	      junit.framework.ComparisonFailure:    pattern;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  pattern  +  locale;  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  pattern  +  locale;  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  pattern  +  locale;	      junit.framework.ComparisonFailure:    pattern;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  locale);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  locale);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValue,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
60	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  timeZone);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  timeZone);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  timeZone);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValue,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
61	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mPattern,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mPattern,  timeZone,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(mPattern,  timeZone,  locale);	      junit.framework.ComparisonFailure:    Pattern.compile(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  null);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  null);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  null);	      junit.framework.ComparisonFailure:    Pattern.compile(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(timeZone,  pattern,  locale);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(timeZone,  pattern,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(timeZone,  pattern,  locale);	      junit.framework.ComparisonFailure:    Pattern.compile(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
64	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  locale);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Pattern  pattern  =  Pattern.compile(mPattern,  locale);	      Pattern    pattern    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mStandard,  mValues,  locale);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mStandard,  mValues,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(mStandard,  mValues,  locale);	      junit.framework.ComparisonFailure:    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mPattern,  locale);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mPattern,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(mPattern,  locale);	      junit.framework.ComparisonFailure:    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  Pattern.UTF8);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  Pattern.UTF8);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  Pattern.UTF8);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
68	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mRules,  locale);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(mRules,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(mRules,  locale);	      junit.framework.ComparisonFailure:    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
69	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  pattern);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  pattern);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  pattern);	      junit.framework.ComparisonFailure    =    Pattern.compile(mValue,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure();  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  new  ComparisonFailure();  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  new  ComparisonFailure();	  junit.framework.ComparisonFailure:    this;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
71	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale)+  1;  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale)+  1;  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale)+  1;	      junit.framework.ComparisonFailure:    Pattern.compile(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
73	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale  +  1);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale  +  1);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(pattern,  timeZone,  locale  +  1);	      junit.framework.ComparisonFailure:    Pattern.compile(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  unexpected;  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  unexpected;  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  unexpected;	  junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
75	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(this,  pattern);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure:  Pattern.compile(this,  pattern);  [BUGGY]    if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure:  Pattern.compile(this,  pattern);	  junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
76	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone,  locale).withUTC();  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone,  locale).withUTC();  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(this,  pattern,  timeZone,  locale).withUTC();	      junit.framework.ComparisonFailure    =    new    FastDateFormat(this,    pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  locale);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  locale);	      Pattern    pattern    =    Pattern.compile(mValues,    locale);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
78	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale).withUTC();  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale).withUTC();  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale).withUTC();	      junit.framework.ComparisonFailure    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
79	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag    [CONTEXT]    protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [BUGGY]    super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(   "The  pattern  must  not  be  null   ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	535	535	1	replace	junit.framework.ComparisonFailure  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);	      junit.framework.ComparisonFailure    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
