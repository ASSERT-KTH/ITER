bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    mTimeZone  =  TimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    mTimeZone  =  TimeZone.getDefault();  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    mTimeZone  =  TimeZone.getDefault();		non-compiled	[CE]  illegal  start  of  expression	36	None	add
2	[BUG]  [BUGGY]    mTimeZoneForced  =(timeZone  ==  null)?  null  :  timeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    mTimeZoneForced  =(timeZone  ==  null)?  null  :  timeZone.getDefault();  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    mTimeZoneForced  =(timeZone  ==  null)?  null  :  timeZone.getDefault();		non-compiled	[CE]  illegal  start  of  expression	36	None	add
3	[BUG]  [BUGGY]    Locale  locale  =  Locale.getDefault();  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    Locale  locale  =  Locale.getDefault();  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    Locale  locale  =  Locale.getDefault();		non-compiled	[CE]  illegal  start  of  expression	36	None	add
4	[BUG]  [BUGGY]    junit.framework.ComparisonFailure:  Pattern.compile(mPattern,  pattern);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    junit.framework.ComparisonFailure:  Pattern.compile(mPattern,  pattern);  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    junit.framework.ComparisonFailure:  Pattern.compile(mPattern,  pattern);		non-compiled	[CE]  illegal  start  of  expression	36	None	add
5	[BUG]  [BUGGY]    junit.framework.ComparisonFailure:  pattern;  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    junit.framework.ComparisonFailure:  pattern;  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    junit.framework.ComparisonFailure:  pattern;		non-compiled	[CE]  illegal  start  of  expression	36	None	add
6	[BUG]  [BUGGY]  timeZone  =  TimeZone.getInstance();  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]  timeZone  =  TimeZone.getInstance();  [BUGGY]  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	timeZone  =  TimeZone.getInstance();	timeZone  =  TimeZone.getDefault();  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
7	[BUG]  [BUGGY]  timeZone  =  TimeZone.getTimeZone(pattern);  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]  timeZone  =  TimeZone.getTimeZone(pattern);  [BUGGY]  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	timeZone  =  TimeZone.getTimeZone(pattern);	timeZone  =  TimeZone.getDefault();  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
8	[BUG]  [BUGGY]  timeZone  =  TimeZone.getInstance(pattern);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]  timeZone  =  TimeZone.getInstance(pattern);  [BUGGY]  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	timeZone  =  TimeZone.getInstance(pattern);	timeZone  =  TimeZone.getDefault();  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
9	[BUG]  [BUGGY]    mTimeZoneForced  =  TimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    mTimeZoneForced  =  TimeZone.getDefault();  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    mTimeZoneForced  =  TimeZone.getDefault();		non-compiled	[CE]  illegal  start  of  expression	36	None	add
10	[BUG]  [BUGGY]    junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  timeZone);  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  timeZone);  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  timeZone);		non-compiled	[CE]  illegal  start  of  expression	36	None	add
11	[BUG]  [BUGGY]    junit.framework.ComparisonFailure  =  Pattern.compile(mPattern);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    junit.framework.ComparisonFailure  =  Pattern.compile(mPattern);  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    junit.framework.ComparisonFailure  =  Pattern.compile(mPattern);		non-compiled	[CE]  illegal  start  of  expression	36	None	add
12	[BUG]  [BUGGY]  timeZone  =  DateTimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]  timeZone  =  DateTimeZone.getDefault();  [BUGGY]  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	timeZone  =  DateTimeZone.getDefault();	timeZone  =  TimeZone.getDefault();  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
13	[BUG]  [BUGGY]  timeZone  =  TimeZone.getTimeZone(timeZone);  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]  timeZone  =  TimeZone.getTimeZone(timeZone);  [BUGGY]  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	timeZone  =  TimeZone.getTimeZone(timeZone);	timeZone  =  TimeZone.getDefault();  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
14	[BUG]  [BUGGY]    junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  pattern);  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  pattern);  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  pattern);		non-compiled	[CE]  illegal  start  of  expression	36	None	add
15	[BUG]  [BUGGY]    mPattern  =  pattern.toString();  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    mPattern  =  pattern.toString();  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    mPattern  =  pattern.toString();		non-compiled	[CE]  illegal  start  of  expression	36	None	add
16	[BUG]  [BUGGY]    junit.framework.ComparisonFailure  =  pattern;  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<fredag  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  [BUGGY]    junit.framework.ComparisonFailure  =  pattern;  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	543	543	1	replace	    junit.framework.ComparisonFailure  =  pattern;		non-compiled	[CE]  illegal  start  of  expression	36	None	add
