bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mTimeZoneForced,  mPattern);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mTimeZoneForced,  mPattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mTimeZoneForced,  mPattern);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mStandard);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
2	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mDaylight,  mStandard);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mDaylight,  mStandard);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mDaylight,  mStandard);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mStandard);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
3	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  mTimeZoneForced,  mStandard);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  mTimeZoneForced,  mStandard);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mValue,  mTimeZoneForced,  mStandard);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mStandard);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
4	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard,  mTimeZoneForced);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard,  mTimeZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard,  mTimeZoneForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mStandard);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
5	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZoneForced);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  timeZoneForced);	  mPattern    =    Pattern.compile(pattern,    mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  c);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  c);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  c);	  mPattern    =    Pattern.compile(pattern,    mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);	  mPattern    =    Pattern.compile(mPattern,    timeZone);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
8	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());	  mPattern    =    Pattern.compile(mPattern,    timeZone);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
9	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  mTimeZone);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  mTimeZone);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  mTimeZone);	  mPattern    =    Pattern.compile(mTimeZoneForced,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
10	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  mStandard);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  mStandard);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  mStandard);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);	  if(mPattern!=    null)    {    mPattern    =    Pattern.compile(pattern,    mDaylight);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
11	[BUG]  [BUGGY]  if(mStandard!=  null)  {  mPattern  =  Pattern.compile(pattern,  mDaylight);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mStandard!=  null)  {  mPattern  =  Pattern.compile(pattern,  mDaylight);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mStandard!=  null)  {  mPattern  =  Pattern.compile(pattern,  mDaylight);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  if(mPattern!=    null)    {    mPattern    =    Pattern.compile(pattern,    mDaylight);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
12	[BUG]  [BUGGY]  mTimeZoneForced  =(pattern!=  null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(pattern!=  null);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(pattern!=  null);	  mTimeZoneForced    =(timeZone!=    null);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(cDefaultPattern,  TimeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(cDefaultPattern,  TimeZone.getDefault());  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(cDefaultPattern,  TimeZone.getDefault());	  mPattern    =    Pattern.compile(mPattern,    TimeZone.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
14	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getDefault());  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getDefault());	  mPattern    =    Pattern.compile(mPattern,    TimeZone.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
15	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.getLocale();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.getLocale();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.getLocale();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    pattern.getLocale();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
16	[BUG]  [BUGGY]  mTimeZoneForced  =(pattern!=  null)?  null  :  pattern.getLocale();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(pattern!=  null)?  null  :  pattern.getLocale();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(pattern!=  null)?  null  :  pattern.getLocale();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    pattern.getLocale();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
17	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mDaylight);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mDaylight);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mDaylight);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    cDefaultPattern);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(cDefaultPattern,  mTimeZoneForced);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(cDefaultPattern,  mTimeZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(cDefaultPattern,  mTimeZoneForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    cDefaultPattern);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  mPattern  =  timeZone.getDefault();  mTimeZoneForced  =  (timeZone!=  null);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  timeZone.getDefault();  mTimeZoneForced  =  (timeZone!=  null);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  timeZone.getDefault();  mTimeZoneForced  =  (timeZone!=  null);	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    (timeZone!=    null);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
20	[BUG]  [BUGGY]  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (timeZone  ==  null);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (timeZone  ==  null);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (timeZone  ==  null);	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    (timeZone!=    null);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
21	[BUG]  [BUGGY]  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone!=  null);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone!=  null);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  pattern;  mTimeZoneForced  =  (timeZone!=  null);	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    (timeZone!=    null);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
22	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(pattern);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(pattern);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(pattern);	  mStandard    =    Pattern.compile(mPattern);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
23	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(pattern,  mTimeZoneForced);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(pattern,  mTimeZoneForced);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(pattern,  mTimeZoneForced);	  mStandard    =    Pattern.compile(mPattern);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
24	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(cDefaultPattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(cDefaultPattern);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(cDefaultPattern);	  mStandard    =    Pattern.compile(mPattern);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
25	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  cDefaultPattern);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  cDefaultPattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  cDefaultPattern);	  mPattern    =    Pattern.compile(pattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
26	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  mDaylight);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  mDaylight);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  mDaylight);	  mPattern    =    Pattern.compile(mPattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
27	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  mStandard);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  mStandard);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  mStandard);	  mPattern    =    Pattern.compile(mPattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(mStandard,  pattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(mStandard,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(mStandard,  pattern);	  mPattern    =    Pattern.compile(pattern,    mDaylight);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(pattern,  mDaylight);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(pattern,  mDaylight);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(pattern,  mDaylight);	  mPattern    =    Pattern.compile(pattern,    mDaylight);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  pattern);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  pattern);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  timeZone);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  timeZone);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  timeZone);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.getDefault();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.getDefault();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    pattern.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
33	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  null  :  timeZone.toString();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  null  :  timeZone.toString();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone!=  null)?  null  :  timeZone.toString();	  mTimeZoneForced    =(timeZone    ==    null)?    null    :    timeZone.toString();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
34	[BUG]  [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  null  :  pattern.toString();  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  null  :  pattern.toString();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(pattern  ==  null)?  null  :  pattern.toString();	  mTimeZoneForced    =(timeZone    ==    null)?    null    :    timeZone.toString();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
35	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.toString();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.toString();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.toString();	  mTimeZoneForced    =(timeZone    ==    null)?    null    :    timeZone.toString();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
36	[BUG]  [BUGGY]  mPattern  =  timeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  timeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  timeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    (locale!=    null);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
37	[BUG]  [BUGGY]  mTimeZoneForced  =(this.timeZone!=  null)?  TimeZone.getDefault()  :  null;  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(this.timeZone!=  null)?  TimeZone.getDefault()  :  null;  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(this.timeZone!=  null)?  TimeZone.getDefault()  :  null;	  mTimeZoneForced    =(this.timeZone    ==    null)?    TimeZone.getDefault()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
38	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mTimeZoneForced);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mTimeZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mTimeZoneForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  timeZone);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  timeZone);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  timeZone);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  pattern,  cDefaultPattern);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  pattern,  cDefaultPattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  pattern,  cDefaultPattern);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZone);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZone);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZone);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZone,    mPattern);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mPattern);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mPattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mPattern);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZone,    mPattern);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZone,  pattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZone,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZone,  pattern);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZone,    mPattern);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mPattern);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mPattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mPattern);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZone,    mPattern);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  MutablePattern  mPattern  =  Pattern.compile(pattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  MutablePattern  mPattern  =  Pattern.compile(pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	MutablePattern  mPattern  =  Pattern.compile(pattern);	  MutablePattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
46	[BUG]  [BUGGY]  MutablePattern  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  MutablePattern  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	MutablePattern  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());	  MutablePattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
47	[BUG]  [BUGGY]  MutablePattern  mPattern  =  Pattern.compile(this,  pattern);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  MutablePattern  mPattern  =  Pattern.compile(this,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	MutablePattern  mPattern  =  Pattern.compile(this,  pattern);	  MutablePattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
48	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  timeZoneForced);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  timeZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  timeZoneForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    timeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZone,  timeZoneForced);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZone,  timeZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZone,  timeZoneForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    timeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.getValue();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.getValue();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone  ==  null)?  null  :  pattern.getValue();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    timeZone.getValue();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
51	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  period.getValue();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  period.getValue();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone  ==  null)?  null  :  period.getValue();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    timeZone.getValue();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  Pattern  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  Pattern  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	Pattern  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());	  Pattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
53	[BUG]  [BUGGY]  Pattern  mPattern  =  Pattern.compile(this,  pattern);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  Pattern  mPattern  =  Pattern.compile(this,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	Pattern  mPattern  =  Pattern.compile(this,  pattern);	  Pattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
54	[BUG]  [BUGGY]  Pattern  mPattern  =  Pattern.compile(pattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  Pattern  mPattern  =  Pattern.compile(pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	Pattern  mPattern  =  Pattern.compile(pattern);	  Pattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
55	[BUG]  [BUGGY]  Pattern  mPattern  =  Pattern.getDefault();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  Pattern  mPattern  =  Pattern.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	Pattern  mPattern  =  Pattern.getDefault();	  Pattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
56	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(pattern,  timeZone);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(pattern,  timeZone);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(pattern,  timeZone);	  mStandard    =    Pattern.compile(mPattern,    mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
57	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(pattern,  timeZoneForced);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(pattern,  timeZoneForced);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(pattern,  timeZoneForced);	  mStandard    =    Pattern.compile(mPattern,    mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
58	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  pattern);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  pattern);	  junit.framework.ComparisonFailure    =    Pattern.compile(mStandard);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard);	  junit.framework.ComparisonFailure    =    Pattern.compile(mStandard);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  mTimeZoneForced  =  TimeZone.getInstance();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =  TimeZone.getInstance();  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =  TimeZone.getInstance();	  mTimeZoneForced    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
61	[BUG]  [BUGGY]  mTimeZoneForced  =  timeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =  timeZone.getDefault();  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =  timeZone.getDefault();	  mTimeZoneForced    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
62	[BUG]  [BUGGY]  mTimeZoneForced  =  TimeZone.getInstance(pattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =  TimeZone.getInstance(pattern);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =  TimeZone.getInstance(pattern);	  mTimeZoneForced    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
63	[BUG]  [BUGGY]  mPattern  =  DateTimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  DateTimeZone.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  DateTimeZone.getDefault();	  if(mPattern    ==    null)    {    mPattern    =    DateTimeZone.getDefault();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
64	[BUG]  [BUGGY]  mPattern  =  dateTimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  dateTimeZone.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  dateTimeZone.getDefault();	  if(mPattern    ==    null)    {    mPattern    =    DateTimeZone.getDefault();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
65	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this.timeZone,  pattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(this.timeZone,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(this.timeZone,  pattern);	  mPattern    =    Pattern.compile(this.timeZone);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
66	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this.timeZoneForced);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(this.timeZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(this.timeZoneForced);	  mPattern    =    Pattern.compile(this.timeZone);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
67	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale);	  mPattern    =    Pattern.compile(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(cDefaultPattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(cDefaultPattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(cDefaultPattern);	  mPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
69	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(cDefaultPattern,  pattern);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(cDefaultPattern,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(cDefaultPattern,  pattern);	  mPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
70	[BUG]  [BUGGY]  mPattern  =  pattern.getDefault();  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  pattern.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  pattern.getDefault();	  mPattern    =    timeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
71	[BUG]  [BUGGY]  mPattern  =  pattern.get();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  pattern.get();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  pattern.get();	  mPattern    =    timeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
72	[BUG]  [BUGGY]  mPattern  =  pattern.getTimeZone();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  pattern.getTimeZone();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  pattern.getTimeZone();	  mPattern    =    timeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
73	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getDefault()  :  timeZone;  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getDefault()  :  timeZone;  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getDefault()  :  timeZone;	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    timeZone;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
74	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  TimeZone.getDefault()  :  pattern;  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  TimeZone.getDefault()  :  pattern;  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone  ==  null)?  TimeZone.getDefault()  :  pattern;	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    timeZone;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
75	[BUG]  [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  TimeZone.getDefault()  :  timeZone;  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  TimeZone.getDefault()  :  timeZone;  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(pattern  ==  null)?  TimeZone.getDefault()  :  timeZone;	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    timeZone;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
76	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  mTimeZoneForced  =  Locale.getDefault();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  mTimeZoneForced  =  Locale.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  mTimeZoneForced  =  Locale.getDefault();	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
77	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mPatternForced);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mPatternForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(pattern,  mPatternForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZone,    mPatternForced);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
78	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mPatternForced);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mPatternForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mPatternForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZone,    mPatternForced);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
79	[BUG]  [BUGGY]  if(cDefaultPattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(cDefaultPattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(cDefaultPattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  if(pattern!=    null)    {    mPattern    =    Pattern.compile(mPattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
80	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(mStandard,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(mStandard,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(mStandard,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);	  if(pattern!=    null)    {    mPattern    =    Pattern.compile(mPattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
81	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(mDaylight,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(mDaylight,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(mDaylight,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);	  if(pattern!=    null)    {    mPattern    =    Pattern.compile(mPattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
82	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(cDefaultPattern,  mTimeZoneForced);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(cDefaultPattern,  mTimeZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(cDefaultPattern,  mTimeZoneForced);	  mPattern    =    Pattern.compile(mTimeZoneForced,    cDefaultPattern);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
83	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(cDefaultPattern,  mTimeZone);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(cDefaultPattern,  mTimeZone);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(cDefaultPattern,  mTimeZone);	  mPattern    =    Pattern.compile(mTimeZoneForced,    cDefaultPattern);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
84	[BUG]  [BUGGY]  mTimeZoneForced  =(pattern!=  null)?  null  :  pattern.getValue();  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(pattern!=  null)?  null  :  pattern.getValue();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(pattern!=  null)?  null  :  pattern.getValue();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    pattern.getValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
85	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(timeZone,  pattern);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(timeZone,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(timeZone,  pattern);	  mPattern    =    Pattern.compile(pattern,    timeZone);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
86	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard,  mDaylight);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard,  mDaylight);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard,  mDaylight);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mDaylight);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
87	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mPattern,  mDaylight);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mPattern,  mDaylight);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mPattern,  mDaylight);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mDaylight);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
88	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard,  mTimeZoneForced,  mDaylight);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard,  mTimeZoneForced,  mDaylight);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mStandard,  mTimeZoneForced,  mDaylight);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mDaylight);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
89	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mTimeZoneForced,  mDaylight);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mTimeZoneForced,  mDaylight);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mTimeZoneForced,  mDaylight);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mDaylight);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
90	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getDefault()  :  Locale.getDefault();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getDefault()  :  Locale.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getDefault()  :  Locale.getDefault();	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
91	[BUG]  [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  TimeZone.getDefault()  :  Locale.getDefault();  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  TimeZone.getDefault()  :  Locale.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(pattern  ==  null)?  TimeZone.getDefault()  :  Locale.getDefault();	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
92	[BUG]  [BUGGY]  mTimeZoneForced  =(locale  ==  null)?  TimeZone.getDefault()  :  Locale.getDefault();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(locale  ==  null)?  TimeZone.getDefault()  :  Locale.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(locale  ==  null)?  TimeZone.getDefault()  :  Locale.getDefault();	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
93	[BUG]  [BUGGY]  mTimeZoneForced  =(fredag  ==  null);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(fredag  ==  null);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(fredag  ==  null);	  mTimeZoneForced    =(pattern    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
94	[BUG]  [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  TimeZone.getLocale()  :  null;  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  TimeZone.getLocale()  :  null;  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(pattern  ==  null)?  TimeZone.getLocale()  :  null;	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getLocale()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
95	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  null  :  timeZone.getDefaultLocale();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  null  :  timeZone.getDefaultLocale();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone!=  null)?  null  :  timeZone.getDefaultLocale();	  mTimeZoneForced    =(timeZone    ==    null)?    null    :    timeZone.getDefaultLocale();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
96	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZoneForced);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZoneForced);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  timeZoneForced);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);	  if(mPattern!=    null)    {    mPattern    =    Pattern.compile(pattern,    mDaylight);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
97	[BUG]  [BUGGY]  mPattern  =  pattern.getLocale();  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  pattern.getLocale();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  pattern.getLocale();	  mPattern    =    timeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
98	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  timeZoneForced,  locale);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  timeZoneForced,  locale);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  timeZoneForced,  locale);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    timeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
99	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZoneForced,  mLocale);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZoneForced,  mLocale);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZoneForced,  mLocale);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mDaylight);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
100	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(mPattern,  timeZone);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(mPattern,  timeZone);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(mPattern,  timeZone);	  mStandard    =    Pattern.compile(mPattern,    mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
101	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this.daylight);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(this.daylight);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(this.daylight);	  mPattern    =    Pattern.compile(this.timeZone);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
102	[BUG]  [BUGGY]  Pattern  mPattern  =  Pattern.compile( "- ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  Pattern  mPattern  =  Pattern.compile( "- ");  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	Pattern  mPattern  =  Pattern.compile( "- ");	  Pattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
103	[BUG]  [BUGGY]  Pattern  mPattern  =  Pattern.compile( "%s ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  Pattern  mPattern  =  Pattern.compile( "%s ");  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	Pattern  mPattern  =  Pattern.compile( "%s ");	  Pattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
104	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  FORCED);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  FORCED);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  FORCED);	  mPattern    =    Pattern.compile(pattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
105	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  TimeZone.toString();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  null  :  TimeZone.toString();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone  ==  null)?  null  :  TimeZone.toString();	  mTimeZoneForced    =(timeZone    ==    null)?    null    :    timeZone.toString();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
106	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(c,  pattern);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(c,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(c,  pattern);	  mPattern    =    Pattern.compile(pattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
107	[BUG]  [BUGGY]  if(pattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(pattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(pattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  }	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    (locale!=    null);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
108	[BUG]  [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  }	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    (locale!=    null);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
109	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mTimeZoneForced);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mTimeZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  mTimeZoneForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mStandard);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
110	[BUG]  [BUGGY]  mTimeZoneForced  =(fredag  ==  null)?  TimeZone.getDefault()  :  null;  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(fredag  ==  null)?  TimeZone.getDefault()  :  null;  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(fredag  ==  null)?  TimeZone.getDefault()  :  null;	  mTimeZoneForced    =(pattern    ==    null)?    TimeZone.getDefault()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
111	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  timeZone);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  timeZone);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  timeZone);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZone,    mPattern);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
112	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this.daylight,  pattern);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(this.daylight,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(this.daylight,  pattern);	  mPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
113	[BUG]  [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  null  :  pattern.getPattern();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  null  :  pattern.getPattern();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(pattern  ==  null)?  null  :  pattern.getPattern();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    pattern.getLocale();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
114	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone  >=  null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone  >=  null);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone  >=  null);	  mTimeZoneForced    =(timeZone!=    null);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
115	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  cTimeZoneForced);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  cTimeZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  cTimeZoneForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    cDefaultPattern);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
116	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  cDefaultPattern);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  cDefaultPattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mStandard,  cDefaultPattern);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    cDefaultPattern);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
117	[BUG]  [BUGGY]  mTimeZoneForced  =(this.timeZone!=  null)?  null  :  TimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(this.timeZone!=  null)?  null  :  TimeZone.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(this.timeZone!=  null)?  null  :  TimeZone.getDefault();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
118	[BUG]  [BUGGY]  mTimeZoneForced  =(fredag  ==  null)?  null  :  TimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(fredag  ==  null)?  null  :  TimeZone.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(fredag  ==  null)?  null  :  TimeZone.getDefault();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
119	[BUG]  [BUGGY]  if(mTimeZoneForced!=  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mTimeZoneForced!=  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mTimeZoneForced!=  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }	  mTimeZoneForced    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
120	[BUG]  [BUGGY]  if(mTimeZoneForced!=  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  else  {  mTimeZoneForced  =  TimeZone.getDefault();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mTimeZoneForced!=  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  else  {  mTimeZoneForced  =  TimeZone.getDefault();  }  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mTimeZoneForced!=  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  else  {  mTimeZoneForced  =  TimeZone.getDefault();  }	  mTimeZoneForced    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
121	[BUG]  [BUGGY]  if(mTimeZoneForced!=  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mTimeZoneForced!=  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mTimeZoneForced!=  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  else  {  throw  new  IllegalStateException( " ");  }	  mTimeZoneForced    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
122	[BUG]  [BUGGY]  MutablePattern  mPattern  =  DateTimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  MutablePattern  mPattern  =  DateTimeZone.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	MutablePattern  mPattern  =  DateTimeZone.getDefault();	  if(mPattern    ==    null)    {    mPattern    =    DateTimeZone.getDefault();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
123	[BUG]  [BUGGY]  Pattern  mPattern  =  DateTimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  Pattern  mPattern  =  DateTimeZone.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	Pattern  mPattern  =  DateTimeZone.getDefault();	  if(mPattern    ==    null)    {    mPattern    =    DateTimeZone.getDefault();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
124	[BUG]  [BUGGY]  if(pattern  ==  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(pattern  ==  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(pattern  ==  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  if(pattern!=    null)    {    mPattern    =    Pattern.compile(mPattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
125	[BUG]  [BUGGY]  if(pattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (timeZone!=  null);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(pattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (timeZone!=  null);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(pattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (timeZone!=  null);  }	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    (timeZone!=    null);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
126	[BUG]  [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (timeZone!=  null);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (timeZone!=  null);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern  ==  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (timeZone!=  null);  }	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    (timeZone!=    null);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
127	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  TimeZone.getDefault()  :  TimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  TimeZone.getDefault()  :  TimeZone.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone  ==  null)?  TimeZone.getDefault()  :  TimeZone.getDefault();	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    timeZone;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
128	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getDefault()  :  TimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getDefault()  :  TimeZone.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getDefault()  :  TimeZone.getDefault();	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    timeZone;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
129	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  mPattern);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  mPattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  mPattern);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
130	[BUG]  [BUGGY]  mTimeZoneForced  =(locale!=  null)?  TimeZone.getDefault()  :  Locale.getDefault();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(locale!=  null)?  TimeZone.getDefault()  :  Locale.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(locale!=  null)?  TimeZone.getDefault()  :  Locale.getDefault();	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
131	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  mDaylight);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  mDaylight);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  mDaylight);	  mPattern    =    Pattern.compile(pattern,    mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
132	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  mStandard);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  mStandard);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  mStandard);	  mPattern    =    Pattern.compile(pattern,    mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
133	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(mPattern,  cDefaultPattern);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(mPattern,  cDefaultPattern);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(mPattern,  cDefaultPattern);	  mStandard    =    Pattern.compile(mPattern);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
134	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(cDefaultPattern,  mTimeZoneForced);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(cDefaultPattern,  mTimeZoneForced);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(cDefaultPattern,  mTimeZoneForced);	  mStandard    =    Pattern.compile(mPattern);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
135	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(mPattern,  mDaylight);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(mPattern,  mDaylight);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(mPattern,  mDaylight);	  mStandard    =    Pattern.compile(mPattern);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
136	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  mTimeZoneForced,  mStandard);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  mTimeZoneForced,  mStandard);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mValues,  mTimeZoneForced,  mStandard);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mStandard);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
137	[BUG]  [BUGGY]  mPattern  =  timeZone.getPattern();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  timeZone.getPattern();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  timeZone.getPattern();	  mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
138	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this,  pattern);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(this,  pattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(this,  pattern);	  mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
139	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getLocale()  :  null;  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getLocale()  :  null;  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone!=  null)?  TimeZone.getLocale()  :  null;	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getLocale()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
140	[BUG]  [BUGGY]  MutablePattern  mPattern  =  timeZone.getPattern();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  MutablePattern  mPattern  =  timeZone.getPattern();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	MutablePattern  mPattern  =  timeZone.getPattern();	  MutablePattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
141	[BUG]  [BUGGY]  MutablePattern  mPattern  =  Pattern.compile(pattern,  timeZone);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  MutablePattern  mPattern  =  Pattern.compile(pattern,  timeZone);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	MutablePattern  mPattern  =  Pattern.compile(pattern,  timeZone);	  MutablePattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
142	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  null  :  pattern.getDefault();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone!=  null)?  null  :  pattern.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone!=  null)?  null  :  pattern.getDefault();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    pattern.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
143	[BUG]  [BUGGY]  if(pattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(pattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(pattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  mPattern    =    Pattern.compile(mPattern,    timeZone);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
144	[BUG]  [BUGGY]  if(pattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(pattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(pattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mPattern    =    Pattern.compile(mPattern,    timeZone);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
145	[BUG]  [BUGGY]  if(pattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(pattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(pattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mPattern    =    Pattern.compile(mPattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
146	[BUG]  [BUGGY]  MutablePattern  mPattern  =  Pattern.compile( "- ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  MutablePattern  mPattern  =  Pattern.compile( "- ");  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	MutablePattern  mPattern  =  Pattern.compile( "- ");	  MutablePattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
147	[BUG]  [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  mPattern    =    Pattern.compile(pattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
148	[BUG]  [BUGGY]  if(mTimeZoneForced!=  null)  {  mPattern  =  Pattern.compile(pattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mTimeZoneForced!=  null)  {  mPattern  =  Pattern.compile(pattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mTimeZoneForced!=  null)  {  mPattern  =  Pattern.compile(pattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  mPattern    =    Pattern.compile(pattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
149	[BUG]  [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mPattern    =    Pattern.compile(pattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
150	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  mTimeZoneForced  =(timeZone!=  null)?  null  :  timeZone.getDefault();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(timeZone  ==  null)  {  mTimeZoneForced  =(timeZone!=  null)?  null  :  timeZone.getDefault();  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(timeZone  ==  null)  {  mTimeZoneForced  =(timeZone!=  null)?  null  :  timeZone.getDefault();  }	  mTimeZoneForced    =(timeZone!=    null)?    null    :    timeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
151	[BUG]  [BUGGY]  mTimeZoneForced  =(this.timeZone  ==  null)?  null  :  TimeZone.getDefault();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(this.timeZone  ==  null)?  null  :  TimeZone.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(this.timeZone  ==  null)?  null  :  TimeZone.getDefault();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
152	[BUG]  [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  mStandard);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  mStandard);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  mStandard);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  if(mPattern!=    null)    {    mPattern    =    Pattern.compile(pattern,    mDaylight);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
153	[BUG]  [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  mPattern    =    Pattern.compile(pattern,    timeZone);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
154	[BUG]  [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  mPattern    =    Pattern.compile(pattern,    timeZone);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
155	[BUG]  [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mPattern    =    Pattern.compile(pattern,    timeZone);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
156	[BUG]  [BUGGY]  mPattern  =  pattern.getDefaultPattern();  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  pattern.getDefaultPattern();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  pattern.getDefaultPattern();	  mPattern    =    timeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
157	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZoneForced,  mMaxLengthEstimate);  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZoneForced,  mMaxLengthEstimate);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZoneForced,  mMaxLengthEstimate);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mDaylight);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
158	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZoneForced,  mLocaleForced);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZoneForced,  mLocaleForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mPattern,  mTimeZoneForced,  mLocaleForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mPattern,    mTimeZoneForced,    mDaylight);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
159	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  forced);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  forced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  forced);	  mPattern    =    Pattern.compile(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
160	[BUG]  [BUGGY]  if(mPattern!=  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern!=  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern!=  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  (locale!=  null);  }	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    (locale!=    null);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
161	[BUG]  [BUGGY]  mStandard  =  Pattern.compile(mPattern,  pattern);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mStandard  =  Pattern.compile(mPattern,  pattern);  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mStandard  =  Pattern.compile(mPattern,  pattern);	  mStandard    =    Pattern.compile(mPattern);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
162	[BUG]  [BUGGY]  mPattern  =  Pattern.compile( "- ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile( "- ");  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile( "- ");	  mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
163	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(mPattern,  timeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(mPattern,  timeZone.getDefault());  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(mPattern,  timeZone.getDefault());	  mPattern    =    Pattern.compile(mPattern,    TimeZone.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
164	[BUG]  [BUGGY]  Pattern  mPattern  =  Pattern.compile( "u000 ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  Pattern  mPattern  =  Pattern.compile( "u000 ");  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	Pattern  mPattern  =  Pattern.compile( "u000 ");	  Pattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
165	[BUG]  [BUGGY]  Pattern  mPattern  =  Pattern.compile( "t ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  Pattern  mPattern  =  Pattern.compile( "t ");  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	Pattern  mPattern  =  Pattern.compile( "t ");	  Pattern    mPattern    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
166	[BUG]  [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  mPattern    =    Pattern.compile(mPattern,    timeZone);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
167	[BUG]  [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(mPattern,  timeZone);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }	  mPattern    =    Pattern.compile(mPattern,    timeZone);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
168	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  cDefaultPattern);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  cDefaultPattern);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  mTimeZoneForced,  cDefaultPattern);	  mPattern    =    Pattern.compile(pattern,    mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
169	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  c);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  c);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  c);	  mPattern    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
170	[BUG]  [BUGGY]  mTimeZoneForced  =(this.timeZone  ==  null)?  TimeZone.getLocale()  :  null;  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(this.timeZone  ==  null)?  TimeZone.getLocale()  :  null;  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(this.timeZone  ==  null)?  TimeZone.getLocale()  :  null;	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getLocale()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
171	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  tempZoneForced);  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  tempZoneForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  tempZoneForced);	  mPattern    =    Pattern.compile(mPattern,    timeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
172	[BUG]  [BUGGY]  if(mPattern!=  null)  {  mPattern  =  DateTimeZone.getDefault();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern!=  null)  {  mPattern  =  DateTimeZone.getDefault();  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern!=  null)  {  mPattern  =  DateTimeZone.getDefault();  }	  if(mPattern    ==    null)    {    mPattern    =    DateTimeZone.getDefault();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
173	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  cLocale);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  cLocale);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  cLocale);	  mPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
174	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  cLengthEstimate);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mPattern  =  Pattern.compile(pattern,  cLengthEstimate);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mPattern  =  Pattern.compile(pattern,  cLengthEstimate);	  mPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
175	[BUG]  [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern!=  null)  {  mPattern  =  Pattern.compile(mPattern,  pattern);  mTimeZoneForced  =  Pattern.compile(mPattern,  pattern);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mPattern    =    Pattern.compile(mPattern,    pattern);    mTimeZoneForced    =    Pattern.compile(mPattern,    pattern);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
176	[BUG]  [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  TimeZone.getDefault()  :  DateTimeConstants.MILLIS_PER_DAY;  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(timeZone  ==  null)?  TimeZone.getDefault()  :  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(timeZone  ==  null)?  TimeZone.getDefault()  :  DateTimeConstants.MILLIS_PER_DAY;	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    timeZone;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
177	[BUG]  [BUGGY]  if(mTimeZoneForced  ==  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mTimeZoneForced  ==  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mTimeZoneForced  ==  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }	  mTimeZoneForced    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
178	[BUG]  [BUGGY]  if(mTimeZoneForced  ==  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  else  {  mTimeZoneForced  =  TimeZone.getDefault();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mTimeZoneForced  ==  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  else  {  mTimeZoneForced  =  TimeZone.getDefault();  }  [BUGGY]      timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mTimeZoneForced  ==  null)  {  mTimeZoneForced  =  TimeZone.getDefault();  }  else  {  mTimeZoneForced  =  TimeZone.getDefault();  }	  mTimeZoneForced    =    TimeZone.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
179	[BUG]  [BUGGY]  mTimeZoneForced  =(this.timeZone  ==  null)?  TimeZone.getDefault()  :  Locale.getDefault();  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(this.timeZone  ==  null)?  TimeZone.getDefault()  :  Locale.getDefault();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(this.timeZone  ==  null)?  TimeZone.getDefault()  :  Locale.getDefault();	  mTimeZoneForced    =(timeZone    ==    null)?    TimeZone.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
180	[BUG]  [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  null  :  pattern.getName();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  mTimeZoneForced  =(pattern  ==  null)?  null  :  pattern.getName();  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	mTimeZoneForced  =(pattern  ==  null)?  null  :  pattern.getName();	  mTimeZoneForced    =(pattern    ==    null)?    null    :    pattern.getLocale();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
181	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  mLocaleForced);  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  mLocaleForced);  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	junit.framework.ComparisonFailure  =  Pattern.compile(mTimeZoneForced,  mLocaleForced);	  junit.framework.ComparisonFailure    =    Pattern.compile(mTimeZoneForced);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
182	[BUG]  [BUGGY]  if(mPattern!=  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  Locale.getDefault();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<fredag      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);      [BUGGY]  if(mPattern!=  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  Locale.getDefault();  }  [BUGGY]      if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2672612419124244	542	542	1	replace	if(mPattern!=  null)  {  mPattern  =  TimeZone.getDefault();  mTimeZoneForced  =  Locale.getDefault();  }	  mPattern    =    TimeZone.getDefault();    mTimeZoneForced    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
