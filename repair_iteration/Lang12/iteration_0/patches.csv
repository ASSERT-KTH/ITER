bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action2	[BUG]  [BUGGY]    count  =  NumberInput.parseInt(chars,  start,  0);  [CE]  cannot  find  symbol  NumberInput  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  [BUGGY]    count  =  NumberInput.parseInt(chars,  start,  0);  [BUGGY]  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	    count  =  NumberInput.parseInt(chars,  start,  0);		non-compiled	[CE]  cannot  find  symbol  NumberInput	14	None	add
4	[BUG]  [BUGGY]    char  ch  =  buffer[count];  [CE]  cannot  find  symbol  buffer  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  [BUGGY]    char  ch  =  buffer[count];  [BUGGY]  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	    char  ch  =  buffer[count];		non-compiled	[CE]  cannot  find  symbol  buffer	14	None	add
5	[BUG]  [BUGGY]    count  =  Integer.MAX_VALUE;  ch  =  buffer[0];  [CE]  cannot  find  symbol  ch  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  [BUGGY]    count  =  Integer.MAX_VALUE;  ch  =  buffer[0];  [BUGGY]  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	    count  =  Integer.MAX_VALUE;  ch  =  buffer[0];		non-compiled	[CE]  cannot  find  symbol  ch	14	None	add
14	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  testExceptions  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length  ' "  +  count  + "  is  less  than  0. ");  [BUGGY]  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	add	throw  new  IllegalArgumentException( "Requested  random  string  length  ' "  +  count  + "  is  less  than  0. ");	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  	compilable	  [FE]  ArrayIndexOutOfBoundsException  testExceptions	7	2
15	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length  ' "  +  count  + "  is  less  than  0. ");  [FE]  ArrayIndexOutOfBoundsException  testExceptions  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length  ' "  +  count  + "  is  less  than  0. ");  [BUGGY]  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length  ' "  +  count  + "  is  less  than  0. ");	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  	compilable	  [FE]  ArrayIndexOutOfBoundsException  testExceptions	7	2	replace
15	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  testExceptions  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  [BUGGY]    [BUGGY]  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	add	  	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  	compilable	  [FE]  NegativeArraySizeException  testExceptions	7	2
16	[BUG]  [BUGGY]    [FE]  NegativeArraySizeException  testExceptions  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  [BUGGY]    [BUGGY]  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	  	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  	compilable	  [FE]  NegativeArraySizeException  testExceptions	7	2	replace
22	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  testExceptions  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  [BUGGY]  end  =  Integer.MAX_VALUE  -  1;  [BUGGY]  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	add	end  =  Integer.MAX_VALUE  -  1;	end  =  Integer.MAX_VALUE;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  testExceptions	13	2
23	[BUG]  [BUGGY]  end  =  Integer.MAX_VALUE  -  1;  [FE]  ArrayIndexOutOfBoundsException  testExceptions  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  [BUGGY]  end  =  Integer.MAX_VALUE  -  1;  [BUGGY]  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	end  =  Integer.MAX_VALUE  -  1;	end  =  Integer.MAX_VALUE;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  testExceptions	13	2	replace
31	[BUG]  [BUGGY]  if((  letters  &&  Character.isLetter(ch))  ||(numbers  &&  Character.isDigit(ch))  ||(!letters  &&!numbers))  {  [CE]  cannot  find  symbol  ch  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  letters  &&  Character.isLetter(ch))  ||(numbers  &&  Character.isDigit(ch))  ||(!letters  &&!numbers))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  Character.isLetter(ch))  ||(numbers  &&  Character.isDigit(ch))  ||(!letters  &&!numbers))  {	if  (count  ==  0)  {  	non-compiled	[CE]  cannot  find  symbol  ch	3	None	replace
33	[BUG]  [BUGGY]  if((  letters  &&  Character.isLetter(ch)||(numbers  &&  Character.isDigit(ch))  ||(!letters  &&!numbers))  {  [CE]  ')'  expected  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  letters  &&  Character.isLetter(ch)||(numbers  &&  Character.isDigit(ch))  ||(!letters  &&!numbers))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  Character.isLetter(ch)||(numbers  &&  Character.isDigit(ch))  ||(!letters  &&!numbers))  {	if  (count  ==  0)  {  	non-compiled	[CE]  ')'  expected	3	None	replace
34	[BUG]  [BUGGY]  if((  letters  &&  Character.isLetter(chars))  ||(numbers  &&  Character.isDigit(chars))  ||(!letters  &&!numbers))  {  [CE]  no  suitable  method  found  for  isLetter(char[])  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  letters  &&  Character.isLetter(chars))  ||(numbers  &&  Character.isDigit(chars))  ||(!letters  &&!numbers))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  Character.isLetter(chars))  ||(numbers  &&  Character.isDigit(chars))  ||(!letters  &&!numbers))  {	if  (count  ==  0)  {  	non-compiled	[CE]  no  suitable  method  found  for  isLetter(char[])	3	None	replace
35	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	  	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]    count  =  NumberInput.parseInt(chars,  start,  end);  [CE]  cannot  find  symbol  NumberInput  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  [BUGGY]    count  =  NumberInput.parseInt(chars,  start,  end);  [BUGGY]  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	    count  =  NumberInput.parseInt(chars,  start,  end);		non-compiled	[CE]  cannot  find  symbol  NumberInput	12	None	add
43	[BUG]  [BUGGY]    char  ch  =  fill(buffer,  start,  end);  [CE]  cannot  find  symbol  buffer  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  [BUGGY]    char  ch  =  fill(buffer,  start,  end);  [BUGGY]  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	    char  ch  =  fill(buffer,  start,  end);		non-compiled	[CE]  cannot  find  symbol  buffer	12	None	add
44	[BUG]  [BUGGY]    char  ch  =  buffer[0];  [CE]  cannot  find  symbol  buffer  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  [BUGGY]    char  ch  =  buffer[0];  [BUGGY]  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	    char  ch  =  buffer[0];		non-compiled	[CE]  cannot  find  symbol  buffer	12	None	add
45	[BUG]  [BUGGY]    count  =  NumberInput.parseInt(buffer,  start,  end);  [CE]  cannot  find  symbol  buffer  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  [BUGGY]    count  =  NumberInput.parseInt(buffer,  start,  end);  [BUGGY]  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	    count  =  NumberInput.parseInt(buffer,  start,  end);		non-compiled	[CE]  cannot  find  symbol  buffer	12	None	add
52	[BUG]  [BUGGY]    chars[count]  =  buffer[random.nextInt(gap)+  start];  [CE]  cannot  find  symbol  gap  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    chars[count]  =  buffer[random.nextInt(gap)+  start];  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    chars[count]  =  buffer[random.nextInt(gap)+  start];		non-compiled	[CE]  cannot  find  symbol  gap	18	None	add
53	[BUG]  [BUGGY]    chars[count]  =  buffer[random.nextInt(gap)+  1];  [CE]  cannot  find  symbol  gap  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    chars[count]  =  buffer[random.nextInt(gap)+  1];  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    chars[count]  =  buffer[random.nextInt(gap)+  1];		non-compiled	[CE]  cannot  find  symbol  gap	18	None	add
65	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  [BUGGY]    [BUGGY]  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	231	231	2	replace	  	if  (start  ==  0  &&  end  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
71	[BUG]  [BUGGY]    int  end  =  chars[count  -  1];  [CE]  variable  end  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  [BUGGY]    int  end  =  chars[count  -  1];  [BUGGY]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	231	231	2	replace	    int  end  =  chars[count  -  1];		non-compiled	[CE]  variable  end  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	10	None	add
72	[BUG]  [BUGGY]    char  ch  =  chars[count  -  1];  [CE]  variable  ch  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  [BUGGY]    char  ch  =  chars[count  -  1];  [BUGGY]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	231	231	2	replace	    char  ch  =  chars[count  -  1];		non-compiled	[CE]  variable  ch  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	10	None	add
73	[BUG]  [BUGGY]    int  start  =  chars[count  -  1];  [CE]  variable  start  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  [BUGGY]    int  start  =  chars[count  -  1];  [BUGGY]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	231	231	2	replace	    int  start  =  chars[count  -  1];		non-compiled	[CE]  variable  start  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	10	None	add
74	[BUG]  [BUGGY]    int  end  =  chars[count];  [CE]  variable  end  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  [BUGGY]    int  end  =  chars[count];  [BUGGY]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	231	231	2	replace	    int  end  =  chars[count];		non-compiled	[CE]  variable  end  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	10	None	add
75	[BUG]  [BUGGY]    int  end  =  chars[count  -  start];  [CE]  variable  end  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  [BUGGY]    int  end  =  chars[count  -  start];  [BUGGY]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	231	231	2	replace	    int  end  =  chars[count  -  start];		non-compiled	[CE]  variable  end  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	10	None	add
81	[BUG]  [BUGGY]    int  count  =  chars.length;  [CE]  variable  count  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [BUGGY]    int  count  =  chars.length;  [BUGGY]  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	    int  count  =  chars.length;		non-compiled	[CE]  variable  count  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	16	None	add
82	[BUG]  [BUGGY]    int  count  =  NumberInput.parseInt(letters,  end);  [CE]  variable  count  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [BUGGY]    int  count  =  NumberInput.parseInt(letters,  end);  [BUGGY]  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	    int  count  =  NumberInput.parseInt(letters,  end);		non-compiled	[CE]  variable  count  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	16	None	add
83	[BUG]  [BUGGY]    int  count  =  chars[count-1];  [CE]  variable  count  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [BUGGY]    int  count  =  chars[count-1];  [BUGGY]  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	    int  count  =  chars[count-1];		non-compiled	[CE]  variable  count  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	16	None	add
