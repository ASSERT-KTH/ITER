bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(count  ==  0  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  0  ||  count  ==  chars.length)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  count  ==  chars.length)  {	  if(count    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  if(count  <  0  ||  count  >  chars.length)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  <  0  ||  count  >  chars.length)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  count  >  chars.length)  {	  if(count    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
3	[BUG]  [BUGGY]  if(count  ==  0  ||  count  <  chars.length)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  0  ||  count  <  chars.length)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  count  <  chars.length)  {	  if(count    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  RANDOM);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  RANDOM);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(count,  RANDOM);	      char[]    chars    =    RandomStringUtils.convert(count,    chars);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  count);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  count);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  count);	      char[]    chars    =    RandomStringUtils.convert(count,    chars);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  RANDOM);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(count,  chars,  RANDOM);	      char[]    chars    =    RandomStringUtils.convert(count,    chars);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  String[]  chars  =  RandomStringUtils.convert(count,  chars);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  String[]  chars  =  RandomStringUtils.convert(count,  chars);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  RandomStringUtils.convert(count,  chars);	      char[]    chars    =    RandomStringUtils.convert(count,    chars);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  0,  chars);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  ==  0,  chars);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  0,  chars);	      RandomStringUtils.checkArgument(count    ==    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  chars);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  >  chars);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >  chars);	      RandomStringUtils.checkArgument(count    ==    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  <  1)  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(chars  ==  null  ||  chars.length  <  1)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(chars  ==  null  ||  chars.length  <  1)  {	  if(chars    ==    null    ||    chars.length    <    2)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
11	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  <  0)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(chars  ==  null  ||  chars.length  <  0)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(chars  ==  null  ||  chars.length  <  0)  {	  if(chars    ==    null    ||    chars.length    <    2)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
12	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length!=  0)  {  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  0  ||  chars.length!=  0)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars.length!=  0)  {	  if(chars    ==    null    ||    chars.length!=    0)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
13	[BUG]  [BUGGY]  if(count  ==  null  ||  chars.length!=  0)  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  null  ||  chars.length!=  0)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  null  ||  chars.length!=  0)  {	  if(chars    ==    null    ||    chars.length!=    0)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
14	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  1);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  ==  1);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  1);	      RandomStringUtils.checkArgument(count    ==    0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  =  0);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  <  =  0);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  =  0);	      RandomStringUtils.checkArgument(count    ==    0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  >  0);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >  0);	      RandomStringUtils.checkArgument(count    ==    0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
17	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars();  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  this.random.getChars();  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  this.random.getChars();	      char[]    chars    =    random.getChars();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  char[]  chars  =  RANDOM.getChars();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RANDOM.getChars();  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RANDOM.getChars();	      char[]    chars    =    random.getChars();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length,  chars.length);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  chars.length,  chars.length);	      RandomStringUtils.checkArgument(count    ==    chars.length);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length  +  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length  +  1);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  chars.length  +  1);	      RandomStringUtils.checkArgument(count    ==    chars.length);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  chars.length);	      RandomStringUtils.checkArgument(count    ==    chars.length);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  chars.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  >  chars.length);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >  chars.length);	      RandomStringUtils.checkArgument(count    ==    chars.length);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  if(count  <  chars.length)  {  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  <  chars.length)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length)  {	  if(count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {	  if(count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >=  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  >=  0);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >=  0);	      RandomStringUtils.checkArgument(count!=    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  chars);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  chars);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  chars);	      char[]    chars    =    RandomStringUtils.toCharArray(count);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
27	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  0);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  0);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  0);	      char[]    chars    =    RandomStringUtils.toCharArray(count);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
28	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  false);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  false);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  false);	      char[]    chars    =    RandomStringUtils.toCharArray(count);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
29	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(count);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(count);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toBooleanArray(count);	      char[]    chars    =    RandomStringUtils.toCharArray(count);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
30	[BUG]  [BUGGY]  if(count  ==  0  ||  count  ==  chars)  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  0  ||  count  ==  chars)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  count  ==  chars)  {	  if(count    ==    chars)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
31	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  random.getChars(count,  chars);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  chars);	      char[]    chars    =    random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
32	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  random.getChars(count,  0);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  0);	      char[]    chars    =    random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
33	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  chars.length);	      char[]    chars    =    random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
34	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars(count);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  this.random.getChars(count);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  this.random.getChars(count);	      char[]    chars    =    random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
35	[BUG]  [BUGGY]  if(count  ==  0  ||  chars!=  null)  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  0  ||  chars!=  null)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars!=  null)  {	  if(count    ==    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  if(count  <  0  ||  chars  ==  null)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  <  0  ||  chars  ==  null)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  chars  ==  null)  {	  if(count    ==    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  if(count!=  0  ||  chars  ==  null)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count!=  0  ||  chars  ==  null)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count!=  0  ||  chars  ==  null)  {	  if(count    ==    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  char[]  chars  =  getChars(count);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  getChars(count);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars(count);	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
39	[BUG]  [BUGGY]  String[]  chars  =  getChars();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  String[]  chars  =  getChars();  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  getChars();	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
40	[BUG]  [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||  chars.length  ==  0)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars  ==  null  ||  chars.length  ==  0)  {	  if(chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
41	[BUG]  [BUGGY]  if(count  ==  null  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  null  ||  chars.length  ==  0)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  null  ||  chars.length  ==  0)  {	  if(chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
42	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  0  ||  chars.length  ==  0)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars.length  ==  0)  {	  if(chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
43	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count!=  chars.length);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count!=  chars.length);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count!=  chars.length);	      RandomStringUtils.checkArgument(count!=    chars);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >=  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  >=  chars.length);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >=  chars.length);	      RandomStringUtils.checkArgument(count!=    chars);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count  +  1);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  random.getChars(count  +  1);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count  +  1);	      char[]    chars    =    random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
46	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  chars);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  chars);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  chars);	      char[]    chars    =    RandomStringUtils.convert(count,    chars);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
47	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  chars.length);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(count,  chars,  chars.length);	      char[]    chars    =    RandomStringUtils.convert(count,    chars);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
48	[BUG]  [BUGGY]  if(count  >=  0  ||  chars  ==  null)  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  >=  0  ||  chars  ==  null)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  >=  0  ||  chars  ==  null)  {	  if(count    ==    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  char[]  chars  =  getChars().toCharArray();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  getChars().toCharArray();  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars().toCharArray();	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  char[]  chars  =  getRandom();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  getRandom();  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getRandom();	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
51	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(random);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(random);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(random);	      char[]    chars    =    RandomStringUtils.toCharArray(count);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
52	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  chars.length);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  chars.length);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  chars,  chars.length);	      RandomStringUtils.checkArgument(count    ==    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  chars);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  <  chars);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  chars);	      RandomStringUtils.checkArgument(count    ==    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
54	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  chars  ==  null)  {  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  chars.length  ||  chars  ==  null)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  chars  ==  null)  {	  if(chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  <  2  ||  chars.length  >  0)  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(chars  ==  null  ||  chars.length  <  2  ||  chars.length  >  0)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(chars  ==  null  ||  chars.length  <  2  ||  chars.length  >  0)  {	  if(chars    ==    null    ||    chars.length    <    2)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
56	[BUG]  [BUGGY]  if(count  ==  chars  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  chars  ||  chars.length  ==  0)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars  ||  chars.length  ==  0)  {	  if(chars    ==    null    ||    chars.length!=    0)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
57	[BUG]  [BUGGY]  char[]  chars  =  getChars(count,  chars);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  getChars(count,  chars);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars(count,  chars);	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
58	[BUG]  [BUGGY]  char[]  chars  =  getClass().getChars();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  char[]  chars  =  getClass().getChars();  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getClass().getChars();	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
59	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length  +  1,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length  +  1,  chars.length);  [BUGGY]    if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  chars.length  +  1,  chars.length);	      RandomStringUtils.checkArgument(count    ==    chars.length);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  if(count!=  chars.length)  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count!=  chars.length)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count!=  chars.length)  {	  if(count    ==    chars)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {	  if(count    ==    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  if(count  <  chars.length  ||  chars  ==  null)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  <  chars.length  ||  chars  ==  null)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  chars  ==  null)  {	  if(count    ==    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
63	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {    [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length)  {  [BUGGY]    return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  count  ==  chars.length)  {	  if(count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
