bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  0,  chars.length);	  char[]    chars    =    random.getChars(count,    0);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
2	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  0L);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  0L);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  0L);	  char[]    chars    =    random.getChars(count,    0);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
3	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  1);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  1);	  char[]    chars    =    random.getChars(count,    0);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
4	[BUG]  [BUGGY]  if(count  ==  0  ||  count.length  ==  0)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  count.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  count.length  ==  0)  {	  if(count    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
5	[BUG]  [BUGGY]  if(count  <  0  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  0  ||  chars.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  chars.length  ==  0)  {	  if(count    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
6	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  =  chars);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  =  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  =  chars);	  RandomStringUtils.checkArgument(count    <    chars);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
7	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  chars,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  chars,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  chars,  chars.length);	  RandomStringUtils.checkArgument(count    <    chars);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
8	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  +  1,  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  +  1,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  +  1,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars.length    +    1,    chars.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
9	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length  +  1,  chars.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length  +  1,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  chars.length  +  1,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars.length    +    1,    chars.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
10	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  *  chars.length  +  1,  chars.length);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  *  chars.length  +  1,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  *  chars.length  +  1,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars.length    +    1,    chars.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
11	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  chars.length  +  1,  chars.length);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >  chars.length  +  1,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >  chars.length  +  1,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars.length    +    1,    chars.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
12	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  0);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  0);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  0);	  RandomStringUtils.checkArgument(count    <    =    0);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
13	[BUG]  [BUGGY]  if(count  >=  chars.length)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  >=  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  >=  chars.length)  {	  if(count!=    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
14	[BUG]  [BUGGY]  if(count  ==  null  ||  count.length  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  null  ||  count.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  null  ||  count.length  ==  0)  {	  if(count    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
15	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  0,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  0,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
16	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  0,  chars.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  chars,  0,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
17	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  chars,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >  chars,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >  chars,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
18	[BUG]  [BUGGY]  if(count  <  chars.length  ||  count  >  chars.length)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  count  >  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  count  >  chars.length)  {	  if(count    <    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
19	[BUG]  [BUGGY]  if(count  <  chars.length  ||  count  >  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  count  >  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  count  >  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {	  if(count    <    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
20	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  RANDOM,  chars);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  RANDOM,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(count,  RANDOM,  chars);	  char[]    chars    =    RandomStringUtils.convert(count,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  0);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  0);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(count,  0);	  char[]    chars    =    RandomStringUtils.convert(count,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  if(count  <  0  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  0  ||  count  ==  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  count  ==  chars.length)  {	  if(count    ==    0    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  if(count  ==  0  ||  count!=  chars.length)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  count!=  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  count!=  chars.length)  {	  if(count    ==    0    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
24	[BUG]  [BUGGY]  if(count!=  0  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count!=  0  ||  count  ==  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count!=  0  ||  count  ==  chars.length)  {	  if(count    ==    0    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  if(count  ==  chars  ||  count.length  ==  0)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars  ||  count.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars  ||  count.length  ==  0)  {	  if(count    ==    chars    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
26	[BUG]  [BUGGY]  if(count  ==  chars  ||  chars.length!=  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars  ||  chars.length!=  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars  ||  chars.length!=  0)  {	  if(count    ==    chars    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
27	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >=  chars.length  +  1);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >=  chars.length  +  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >=  chars.length  +  1);	  RandomStringUtils.checkArgument(count    ==    chars.length    +    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
28	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count!=  chars.length  +  1);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count!=  chars.length  +  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count!=  chars.length  +  1);	  RandomStringUtils.checkArgument(count    ==    chars.length    +    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
29	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >>  chars.length  +  1);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >>  chars.length  +  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >>  chars.length  +  1);	  RandomStringUtils.checkArgument(count    ==    chars.length    +    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
30	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  chars!=  null)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  chars!=  null)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  chars!=  null)  {	  if(count    ==    chars.length    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
31	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  count  ==  null)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  count  ==  null)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  count  ==  null)  {	  if(count    ==    chars.length    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
32	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length  <  2  ||  chars.length  >  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  chars.length  <  2  ||  chars.length  >  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars.length  <  2  ||  chars.length  >  0)  {	  if(chars    ==    null    ||    chars.length    <    2    ||    chars.length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
33	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  <  1  ||  chars.length  >  0)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(chars  ==  null  ||  chars.length  <  1  ||  chars.length  >  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(chars  ==  null  ||  chars.length  <  1  ||  chars.length  >  0)  {	  if(chars    ==    null    ||    chars.length    <    2    ||    chars.length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
34	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >=  chars);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >=  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >=  chars);	  RandomStringUtils.checkArgument(count    >    chars);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  char[]  chars  =  getChars(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getChars(count,  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars(count,  0,  chars.length);	  char[]    chars    =    getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
36	[BUG]  [BUGGY]  char[]  chars  =  getChars(count,  0);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getChars(count,  0);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars(count,  0);	  char[]    chars    =    getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
37	[BUG]  [BUGGY]  char[]  chars  =  getChars(count,  chars,  false);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getChars(count,  chars,  false);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars(count,  chars,  false);	  char[]    chars    =    getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
38	[BUG]  [BUGGY]  char[]  chars  =  getChars(count,  chars.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getChars(count,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars(count,  chars.length);	  char[]    chars    =    getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
39	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  count,  chars);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  count,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  count,  chars);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  false);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  false);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(count,  chars,  false);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  chars,  count);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  chars,  count);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  chars,  count);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
42	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  RANDOM,  0);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  RANDOM,  0);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(count,  chars,  RANDOM,  0);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
43	[BUG]  [BUGGY]  if(count  ==  0  ||  count  >=  chars.length)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  count  >=  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  count  >=  chars.length)  {	  if(count    ==    0    ||    count    <    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
44	[BUG]  [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||  chars.length  <  0)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||  chars.length  <  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars  ==  null  ||  chars.length  <  0)  {	  if(chars    ==    null    ||    chars.length    <    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||  chars.length  <  =  0)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||  chars.length  <  =  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars  ==  null  ||  chars.length  <  =  0)  {	  if(chars    ==    null    ||    chars.length    <    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
46	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  0L);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  0L);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  0L);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    0);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
47	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  0,  chars.length);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    0);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
48	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  1);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    0);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
49	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  0,  chars);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  0,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  0,  chars);	  char[]    chars    =    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
50	[BUG]  [BUGGY]  String[]  chars  =  RandomStringUtils.convert(random,  chars);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  RandomStringUtils.convert(random,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  RandomStringUtils.convert(random,  chars);	  char[]    chars    =    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
51	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  count  ==  0)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  count  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  count  ==  0)  {	  if(count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
52	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {	  if(count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
53	[BUG]  [BUGGY]  if(count  >  0  ||  chars  ==  null)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  >  0  ||  chars  ==  null)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  >  0  ||  chars  ==  null)  {	  if(count    >=    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
54	[BUG]  [BUGGY]  String[]  chars  =  random.getChars(count,  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  random.getChars(count,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  random.getChars(count,  chars.length);	  char[]    chars    =    random.getChars(count,    chars.length);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
55	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length,  0);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length,  0);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  chars.length,  0);	  char[]    chars    =    random.getChars(count,    chars.length);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
56	[BUG]  [BUGGY]  if(count  <  0  ||  count  ==  chars)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  0  ||  count  ==  chars)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  count  ==  chars)  {	  if(count    ==    0    ||    count    ==    chars)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
57	[BUG]  [BUGGY]  char[]  chars  =  getClass().getChars(count);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getClass().getChars(count);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getClass().getChars(count);	  char[]    chars    =    getClass().getChars();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
58	[BUG]  [BUGGY]  char[]  chars  =  getClass().getName();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getClass().getName();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getClass().getName();	  char[]    chars    =    getClass().getChars();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
59	[BUG]  [BUGGY]  char[]  chars  =  getClass().getSimpleName();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getClass().getSimpleName();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getClass().getSimpleName();	  char[]    chars    =    getClass().getChars();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
60	[BUG]  [BUGGY]  String[]  chars  =  this.random.getChars();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  this.random.getChars();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  this.random.getChars();	  String[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
61	[BUG]  [BUGGY]  String[]  chars  =  getChars(count);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  getChars(count);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  getChars(count);	  String[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
62	[BUG]  [BUGGY]  String[]  chars  =  getRandom();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  getRandom();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  getRandom();	  String[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
63	[BUG]  [BUGGY]  if(count  <  0  ||  count  >=  chars.length)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  0  ||  count  >=  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  count  >=  chars.length)  {	  if(count    <    0    ||    count    >    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  if(count  <  0  ||  count!=  chars.length)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  0  ||  count!=  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  count!=  chars.length)  {	  if(count    <    0    ||    count    >    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
65	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  2);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  2);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  2);	  RandomStringUtils.checkArgument(count    ==    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
66	[BUG]  [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||  chars.length!=  0)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||  chars.length!=  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars  ==  null  ||  chars.length!=  0)  {	  if(count    ==    0    ||    chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
67	[BUG]  [BUGGY]  if(count  <  0  ||  chars  ==  null  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  0  ||  chars  ==  null  ||  chars.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  chars  ==  null  ||  chars.length  ==  0)  {	  if(count    ==    0    ||    chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
68	[BUG]  [BUGGY]  if(count  ==  0,  chars  ==  null  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0,  chars  ==  null  ||  chars.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0,  chars  ==  null  ||  chars.length  ==  0)  {	  if(count    ==    0    ||    chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
69	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >  chars.length,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >  chars.length,  chars.length);	  RandomStringUtils.checkArgument(count    >    chars.length);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
70	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  RANDOM);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  RANDOM);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    chars);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
71	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  false);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  false);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  false);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    chars);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
72	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  0,  chars);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  0,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  0,  chars);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    chars);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
73	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars(count,  chars);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  this.random.getChars(count,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  this.random.getChars(count,  chars);	  char[]    chars    =    this.random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
74	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars(count,  0);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  this.random.getChars(count,  0);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  this.random.getChars(count,  0);	  char[]    chars    =    this.random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
75	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  this.random.getChars(count,  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  this.random.getChars(count,  0,  chars.length);	  char[]    chars    =    this.random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
76	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(count,  false);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(count,  false);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toBooleanArray(count,  false);	  char[]    chars    =    RandomStringUtils.toBooleanArray(count);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
77	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(count,  chars);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(count,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toBooleanArray(count,  chars);	  char[]    chars    =    RandomStringUtils.toBooleanArray(count);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
78	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(count,  true);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(count,  true);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toBooleanArray(count,  true);	  char[]    chars    =    RandomStringUtils.toBooleanArray(count);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
79	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(count,  null);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(count,  null);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toBooleanArray(count,  null);	  char[]    chars    =    RandomStringUtils.toBooleanArray(count);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
80	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(random);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toBooleanArray(random);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toBooleanArray(random);	  char[]    chars    =    RandomStringUtils.toCharArray(random);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
81	[BUG]  [BUGGY]  char[]  chars  =  getRandom().toCharArray();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getRandom().toCharArray();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getRandom().toCharArray();	  char[]    chars    =    getRandom();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
82	[BUG]  [BUGGY]  char[]  chars  =  getRandom().chars;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getRandom().chars;  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getRandom().chars;	  char[]    chars    =    getRandom();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
83	[BUG]  [BUGGY]  String[]  chars  =  RandomStringUtils.convert(count,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  RandomStringUtils.convert(count,  chars,  RANDOM);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  RandomStringUtils.convert(count,  chars,  RANDOM);	  String[]    chars    =    RandomStringUtils.convert(count,    chars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  String[]  chars  =  RandomStringUtils.convert(count,  RANDOM);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  RandomStringUtils.convert(count,  RANDOM);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  RandomStringUtils.convert(count,  RANDOM);	  String[]    chars    =    RandomStringUtils.convert(count,    chars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
85	[BUG]  [BUGGY]  String[]  chars  =  RandomStringUtils.convert(count,  chars,  false);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  RandomStringUtils.convert(count,  chars,  false);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  RandomStringUtils.convert(count,  chars,  false);	  String[]    chars    =    RandomStringUtils.convert(count,    chars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
86	[BUG]  [BUGGY]  String[]  chars  =  RandomStringUtils.convert(random,  count);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  RandomStringUtils.convert(random,  count);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  RandomStringUtils.convert(random,  count);	  String[]    chars    =    RandomStringUtils.convert(count,    chars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
87	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(count,  chars,  0,  chars.length);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
88	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(count,  0,  chars.length);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
89	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  count,  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  count,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  count,  chars.length);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
90	[BUG]  [BUGGY]  String[]  chars  =  RandomStringUtils.convert(count,  chars,  chars.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  RandomStringUtils.convert(count,  chars,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  RandomStringUtils.convert(count,  chars,  chars.length);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
91	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  0,  count);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  0,  count);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  0,  count);	  char[]    chars    =    RandomStringUtils.convert(random,    count);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
92	[BUG]  [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||!Character.isLetter(chars.length))  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||!Character.isLetter(chars.length))  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars  ==  null  ||!Character.isLetter(chars.length))  {	  if(count    ==    0    ||    chars    ==    null    ||!Character.isUpperCase(chars.length))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
93	[BUG]  [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||!Character.isLetterOrDigit(chars.length))  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  chars  ==  null  ||!Character.isLetterOrDigit(chars.length))  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars  ==  null  ||!Character.isLetterOrDigit(chars.length))  {	  if(count    ==    0    ||    chars    ==    null    ||!Character.isUpperCase(chars.length))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
94	[BUG]  [BUGGY]  if(count  <  0  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  0  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {	  if(count    ==    0    ||    chars    ==    null    ||!Character.isUpperCase(chars.length))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
95	[BUG]  [BUGGY]  if(count  <  0  ||  chars!=  null)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  0  ||  chars!=  null)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  chars!=  null)  {	  if(count    <    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
96	[BUG]  [BUGGY]  if(count  <  =  0  ||  chars  ==  null)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  =  0  ||  chars  ==  null)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  =  0  ||  chars  ==  null)  {	  if(count    <    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
97	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.getChars(count,  chars);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.getChars(count,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.getChars(count,  chars);	  char[]    chars    =    RANDOM.getChars();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
98	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.getChars(count);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.getChars(count);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.getChars(count);	  char[]    chars    =    RANDOM.getChars();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
99	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  true);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  true);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  true);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    false);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
100	[BUG]  [BUGGY]  String[]  chars  =  RandomStringUtils.toCharArray(count,  false);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  RandomStringUtils.toCharArray(count,  false);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  RandomStringUtils.toCharArray(count,  false);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    false);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
101	[BUG]  [BUGGY]  if(count  ==  0  ||  count.length!=  0)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  count.length!=  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  count.length!=  0)  {	  if(count    ==    0    ||    chars.length!=    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
102	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length  <  1)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  chars.length  <  1)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  chars.length  <  1)  {	  if(chars    ==    null    ||    chars.length    <    1)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
103	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  =  chars.length);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  =  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  =  chars.length);	  RandomStringUtils.checkArgument(count    <    chars.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
104	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  chars.length,  chars.length);	  RandomStringUtils.checkArgument(count    <    chars.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
105	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length  +  1);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length  +  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  chars.length  +  1);	  RandomStringUtils.checkArgument(count    <    chars.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
106	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length  -  1);  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length  -  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  chars.length  -  1);	  RandomStringUtils.checkArgument(count    <    chars.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
107	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  0,  chars);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >  0,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >  0,  chars);	  RandomStringUtils.checkArgument(count    ==    0,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
108	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count!=  0,  chars.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count!=  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count!=  0,  chars.length);	  RandomStringUtils.checkArgument(count    ==    0,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
109	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >=  0,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >=  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >=  0,  chars.length);	  RandomStringUtils.checkArgument(count    ==    0,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
110	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  0,  chars);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  0,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  0,  chars);	  char[]    chars    =    random.getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
111	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars,  false);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  chars,  false);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  chars,  false);	  char[]    chars    =    random.getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
112	[BUG]  [BUGGY]  if(chars  ==  null  ||  count.length!=  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(chars  ==  null  ||  count.length!=  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(chars  ==  null  ||  count.length!=  0)  {	  if(count    ==    null    ||    chars.length!=    0)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
113	[BUG]  [BUGGY]  char[]  chars  =  getChars().toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getChars().toString();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars().toString();	  char[]    chars    =    getChars().toCharArray();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
114	[BUG]  [BUGGY]  char[]  chars  =  getChars().getChars();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getChars().getChars();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars().getChars();	  char[]    chars    =    getChars().toCharArray();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
115	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length,  chars.length  +  1);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length,  chars.length  +  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  chars.length,  chars.length  +  1);	  RandomStringUtils.checkArgument(count    ==    chars.length,    chars.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
116	[BUG]  [BUGGY]  if(count  <  chars.length  ||  count  ==  null)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  count  ==  null)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  count  ==  null)  {	  if(count    <    chars.length    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
117	[BUG]  [BUGGY]  if(count  <  chars.length  ||  chars!=  null)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  chars!=  null)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  chars!=  null)  {	  if(count    <    chars.length    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
118	[BUG]  [BUGGY]  if(count  >=  chars.length  ||  chars  ==  null)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  >=  chars.length  ||  chars  ==  null)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  >=  chars.length  ||  chars  ==  null)  {	  if(count    <    chars.length    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
119	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count  +  1,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count  +  1,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count  +  1,  chars.length);	  char[]    chars    =    random.getChars(count    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
120	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count  +  2);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count  +  2);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count  +  2);	  char[]    chars    =    random.getChars(count    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
121	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars  +  1);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  chars  +  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  chars  +  1);	  char[]    chars    =    random.getChars(count    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
122	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {	  if(count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
123	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {	  if(count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
124	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0  ||  count  ==  chars.length  ||  count  ==  0)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0  ||  count  ==  chars.length  ||  count  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0  ||  count  ==  chars.length  ||  count  ==  0)  {	  if(count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
125	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  RANDOM);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  RANDOM);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  RANDOM);	  char[]    chars    =    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
126	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  chars,  RANDOM);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  chars,  RANDOM);	  char[]    chars    =    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
127	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(random,  count);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(random,  count);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(random,  count);	  char[]    chars    =    RandomStringUtils.toCharArray(random);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
128	[BUG]  [BUGGY]  if(count!=  0  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count!=  0  ||  chars.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count!=  0  ||  chars.length  ==  0)  {	  if(count    ==    0    ||    chars.length!=    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
129	[BUG]  [BUGGY]  if(count  >=  0  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  >=  0  ||  chars.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  >=  0  ||  chars.length  ==  0)  {	  if(count    ==    0    ||    chars.length!=    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
130	[BUG]  [BUGGY]  char[]  chars  =  getChars().toCharArray(count);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getChars().toCharArray(count);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars().toCharArray(count);	  char[]    chars    =    getChars().toCharArray();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
131	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  chars.length,  chars.length);	  char[]    chars    =    random.getChars(count,    chars.length);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
132	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count  +  3);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count  +  3);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count  +  3);	  char[]    chars    =    random.getChars(count    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
133	[BUG]  [BUGGY]  if(count  >=  0  ||  chars  ==  null  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  >=  0  ||  chars  ==  null  ||  chars.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  >=  0  ||  chars  ==  null  ||  chars.length  ==  0)  {	  if(count    ==    0    ||    chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
134	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  <  =  0)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(chars  ==  null  ||  chars.length  <  =  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(chars  ==  null  ||  chars.length  <  =  0)  {	  if(chars    ==    null    ||    chars.length    <    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
135	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  chars.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  chars.length  ==  0)  {	  if(count    ==    chars    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
136	[BUG]  [BUGGY]  if(count  <  chars.length  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  chars.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  chars.length  ==  0)  {	  if(count    ==    chars    ||    chars.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
137	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  chars,  RANDOM);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  chars,  RANDOM);	  char[]    chars    =    random.getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
138	[BUG]  [BUGGY]  if(count  >=  chars.length  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  >=  chars.length  ||  count  ==  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  >=  chars.length  ||  count  ==  chars.length)  {	  if(count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
139	[BUG]  [BUGGY]  String[]  chars  =  getChars().toCharArray();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  getChars().toCharArray();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  getChars().toCharArray();	  String[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
140	[BUG]  [BUGGY]  String[]  chars  =  getArguments();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  getArguments();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  getArguments();	  String[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
141	[BUG]  [BUGGY]  if(count  <  chars.length  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  count  ==  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  count  ==  chars.length)  {	  if(count    ==    0    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
142	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  -1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  -1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  -1);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    0);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
143	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(ranDOM,  chars);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(ranDOM,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(ranDOM,  chars);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
144	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  =  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  =  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  =  1);	  RandomStringUtils.checkArgument(count    ==    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
145	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(chars  ==  0,  count);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(chars  ==  0,  count);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(chars  ==  0,  count);	  RandomStringUtils.checkArgument(count    ==    0,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
146	[BUG]  [BUGGY]  if(count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0)  {	  if(count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
147	[BUG]  [BUGGY]  if(count  <  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {	  if(count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
148	[BUG]  [BUGGY]  if(count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0  ||  count  ==  0)  {	  if(count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
149	[BUG]  [BUGGY]  if(count  <  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length)  {	  if(count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
150	[BUG]  [BUGGY]  char[]  chars  =  getClass().getChars(count,  chars);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getClass().getChars(count,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getClass().getChars(count,  chars);	  char[]    chars    =    getClass().getChars();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
151	[BUG]  [BUGGY]  if(count  <  chars.length  ||  count  >  chars.length  ||  count  >  chars.length)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  count  >  chars.length  ||  count  >  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  count  >  chars.length  ||  count  >  chars.length)  {	  if(count    <    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
152	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  0,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  0,  chars.length);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
153	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  0);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(count,  chars,  0);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(count,  chars,  0);	  char[]    chars    =    RandomStringUtils.convert(count,    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
154	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  0);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  0);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  0);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    chars);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
155	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  chars.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  chars,  chars.length);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    chars);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
156	[BUG]  [BUGGY]  char[]  chars  =  getArgument();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getArgument();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getArgument();	  char[]    chars    =    getRandom();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
157	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  false,  chars);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  false,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  false,  chars);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    false);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
158	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length  *  1);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length  *  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  chars.length  *  1);	  RandomStringUtils.checkArgument(count    ==    chars.length    +    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
159	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(ranDOM,  count);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(ranDOM,  count);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(ranDOM,  count);	  char[]    chars    =    RandomStringUtils.convert(count,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
160	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length!=  2  ||  chars.length  >  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(chars  ==  null  ||  chars.length!=  2  ||  chars.length  >  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(chars  ==  null  ||  chars.length!=  2  ||  chars.length  >  0)  {	  if(chars    ==    null    ||    chars.length    <    2    ||    chars.length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
161	[BUG]  [BUGGY]  if(count  >=  0  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  >=  0  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  >=  0  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {	  if(count    ==    0    ||    chars    ==    null    ||!Character.isUpperCase(chars.length))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
162	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  chars.length  +  1);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  chars.length  +  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  ==  chars,  chars.length  +  1);	  RandomStringUtils.checkArgument(count    ==    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
163	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars(count  +  1);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  this.random.getChars(count  +  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  this.random.getChars(count  +  1);	  char[]    chars    =    this.random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
164	[BUG]  [BUGGY]  char[]  chars  =  getChars(count,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getChars(count,  chars,  RANDOM);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars(count,  chars,  RANDOM);	  char[]    chars    =    getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
165	[BUG]  [BUGGY]  char[]  chars  =  getChars(count,  chars,  chars.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getChars(count,  chars,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getChars(count,  chars,  chars.length);	  char[]    chars    =    getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
166	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  <  1);	  RandomStringUtils.checkArgument(count    ==    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
167	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	RandomStringUtils.checkArgument(count  >  1);	  RandomStringUtils.checkArgument(count    ==    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
168	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  CHARS);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  CHARS);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  CHARS);	  char[]    chars    =    RandomStringUtils.convert(count,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
169	[BUG]  [BUGGY]  String[]  chars  =  getChars(count,  chars);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  String[]  chars  =  getChars(count,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	String[]  chars  =  getChars(count,  chars);	  String[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
170	[BUG]  [BUGGY]  char[]  chars  =  random().getChars();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random().getChars();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random().getChars();	  char[]    chars    =    getClass().getChars();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
171	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  -1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  -1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  -1);	  char[]    chars    =    RandomStringUtils.convert(random,    count);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
172	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  chars  ==  null  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  chars  ==  null  ||  chars.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  chars  ==  null  ||  chars.length  ==  0)  {	  if(count    ==    chars.length    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
173	[BUG]  [BUGGY]  if(count  <  chars.length  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  chars  ==  null  ||!Character.isUpperCase(chars.length))  {	  if(count    ==    0    ||    chars    ==    null    ||!Character.isUpperCase(chars.length))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
174	[BUG]  [BUGGY]  if(count!=  chars.length  ||  chars  ==  null)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count!=  chars.length  ||  chars  ==  null)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count!=  chars.length  ||  chars  ==  null)  {	  if(count!=    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
175	[BUG]  [BUGGY]  if(count!=  chars.length  ||  count  ==  chars.length)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count!=  chars.length  ||  count  ==  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count!=  chars.length  ||  count  ==  chars.length)  {	  if(count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
176	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  <  2  ||  chars.length  >  4)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(chars  ==  null  ||  chars.length  <  2  ||  chars.length  >  4)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(chars  ==  null  ||  chars.length  <  2  ||  chars.length  >  4)  {	  if(chars    ==    null    ||    chars.length    <    2    ||    chars.length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
177	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length  +  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length  +  1);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  chars.length  +  1);	  char[]    chars    =    random.getChars(count    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
178	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  3);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  3);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  3);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    0);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
179	[BUG]  [BUGGY]  char[]  chars  =  getArgumentBounds();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getArgumentBounds();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getArgumentBounds();	  char[]    chars    =    getRandom();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
180	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random.getChars());  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random.getChars());  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random.getChars());	  char[]    chars    =    RANDOM.getChars();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
181	[BUG]  [BUGGY]  if(count  <  0  ||  chars  ==  null  ||  chars.length!=  0)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  0  ||  chars  ==  null  ||  chars.length!=  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  0  ||  chars  ==  null  ||  chars.length!=  0)  {	  if(count    <    0    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
182	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  chars,  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  chars,  0);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  chars,  0);	  char[]    chars    =    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
183	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  chars,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.convert(random,  chars,  chars.length);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.convert(random,  chars,  chars.length);	  char[]    chars    =    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
184	[BUG]  [BUGGY]  if(count  <  chars.length  ||  chars  ==  null  ||  chars.length  ==  0)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  chars  ==  null  ||  chars.length  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  chars  ==  null  ||  chars.length  ==  0)  {	  if(count    <    chars.length    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
185	[BUG]  [BUGGY]  if(count  <  chars.length  ||  chars  ==  null  ||!Character.isDigit(count))  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  chars  ==  null  ||!Character.isDigit(count))  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  chars  ==  null  ||!Character.isDigit(count))  {	  if(count    <    chars.length    ||    chars    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
186	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars,  0);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  random.getChars(count,  chars,  0);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  random.getChars(count,  chars,  0);	  char[]    chars    =    random.getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
187	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {	  if(count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
188	[BUG]  [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  chars.length  ||  count  ==  0)  {	  if(count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length    ||    count    ==    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
189	[BUG]  [BUGGY]  char[]  chars  =  getBase().toCharArray();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  getBase().toCharArray();  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  getBase().toCharArray();	  char[]    chars    =    getChars().toCharArray();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
190	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length!=  1)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(chars  ==  null  ||  chars.length!=  1)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(chars  ==  null  ||  chars.length!=  1)  {	  if(chars    ==    null    ||    chars.length    <    1)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
191	[BUG]  [BUGGY]  if(count  <  chars.length  ||  count  >  chars.length  ||  count  >  chars.length  ||  count  >  chars.length)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  if(count  <  chars.length  ||  count  >  chars.length  ||  count  >  chars.length  ||  count  >  chars.length)  {  [BUGGY]      return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	if(count  <  chars.length  ||  count  >  chars.length  ||  count  >  chars.length  ||  count  >  chars.length)  {	  if(count    <    chars.length)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
192	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(random,  chars);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(random,  chars);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(random,  chars);	  char[]    chars    =    RandomStringUtils.toCharArray(random);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
193	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  false,  null);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {      [BUGGY]  char[]  chars  =  RandomStringUtils.toCharArray(count,  false,  null);  [BUGGY]      if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	char[]  chars  =  RandomStringUtils.toCharArray(count,  false,  null);	  char[]    chars    =    RandomStringUtils.toCharArray(count,    false);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
