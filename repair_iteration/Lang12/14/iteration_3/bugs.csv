bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  RandomStringUtils.convert(random,  count);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  RandomStringUtils.convert(random,  count);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  RandomStringUtils.convert(random,  count);	  return    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
2	[BUG]  [BUGGY]  return  RandomStringUtils.convert(random,  count,  chars);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  RandomStringUtils.convert(random,  count,  chars);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  RandomStringUtils.convert(random,  count,  chars);	  return    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
3	[BUG]  [BUGGY]  return  RandomStringUtils.convert(random,  chars,  count);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  RandomStringUtils.convert(random,  chars,  count);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  RandomStringUtils.convert(random,  chars,  count);	  return    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
4	[BUG]  [BUGGY]  return  RandomStringUtils.convert(random,  0,  chars);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  RandomStringUtils.convert(random,  0,  chars);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  RandomStringUtils.convert(random,  0,  chars);	  return    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
5	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars.length,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  0,  chars.length,  chars.length);	  RandomStringUtils.checkChars(chars,    0,    chars.length,    chars.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
6	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars.length,  0);	  RandomStringUtils.checkChars(chars,    0,    chars.length,    chars.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
7	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars.length,  false);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars.length,  false);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  0,  chars.length,  false);	  RandomStringUtils.checkChars(chars,    0,    chars.length,    false);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
8	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  false,  true);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  false,  true);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars.length,  false,  true);	  RandomStringUtils.checkChars(chars,    0,    chars.length,    false);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
9	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  ==  chars.length,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
10	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  >  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  >  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
11	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length  +  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length  +  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  ==  chars.length  +  1);	  RandomStringUtils.checkArgument(count    ==    chars.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
12	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length,  false);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length,  false);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  ==  chars.length,  false);	  RandomStringUtils.checkArgument(count    ==    chars.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
13	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  true,  false,  null,  RANDOM  +  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  true,  false,  null,  RANDOM  +  1);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  true,  false,  null,  RANDOM  +  1);	  return    random(count,    0,    chars.length,    false,    false,    null,    RANDOM    +    1);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
14	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  true,  null,  RANDOM  +  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  true,  null,  RANDOM  +  1);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  true,  null,  RANDOM  +  1);	  return    random(count,    0,    chars.length,    false,    false,    null,    RANDOM    +    1);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
15	[BUG]  [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  RANDOM  +  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  RANDOM  +  1);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  count.length,  false,  false,  null,  RANDOM  +  1);	  return    random(count,    0,    chars.length,    false,    false,    null,    RANDOM    +    1);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
16	[BUG]  [BUGGY]  random(count,  0,  chars.length,  true,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  true,  false,  null,  RANDOM);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  true,  false,  null,  RANDOM);	  random(count,    0,    chars.length,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
17	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  true,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  false,  true,  null,  RANDOM);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  true,  null,  RANDOM);	  random(count,    0,    chars.length,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
18	[BUG]  [BUGGY]  random(count,  0,  count.length,  false,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  count.length,  false,  false,  null,  RANDOM);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  count.length,  false,  false,  null,  RANDOM);	  random(count,    0,    chars.length,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
19	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  <  chars.length,  chars.length);	  RandomStringUtils.checkArgument(count    <    chars.length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
20	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  =  chars.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  <  =  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  <  =  chars.length);	  RandomStringUtils.checkArgument(count    <    chars.length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
21	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(chars.length  >  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(chars.length  >  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(chars.length  >  0);	  RandomStringUtils.checkArgument(chars.length    ==    chars);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
22	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(chars.length!=  0);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(chars.length!=  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(chars.length!=  0);	  RandomStringUtils.checkArgument(chars.length    ==    chars);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
23	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(chars.length  >=  0);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(chars.length  >=  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(chars.length  >=  0);	  RandomStringUtils.checkArgument(chars.length    ==    chars);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
24	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  0,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  ==  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  ==  0,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
25	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  ==  chars,  0,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
26	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  chars,  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  >  chars,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  >  chars,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
27	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  chars,  chars.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  <  chars,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  <  chars,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
28	[BUG]  [BUGGY]  return  random(count,  0,  chars);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars);	  return    random(count,    chars);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
29	[BUG]  [BUGGY]  return  random(count,  chars,  false);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  chars,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  chars,  false);	  return    random(count,    chars);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
30	[BUG]  [BUGGY]  return  random(count,  chars,  null);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  chars,  null);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  chars,  null);	  return    random(count,    chars);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
31	[BUG]  [BUGGY]  chars[count]  =  CHARS.substring(0,  count);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  CHARS.substring(0,  count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  CHARS.substring(0,  count);	  chars[count]    =    CHARS.toCharArray();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
32	[BUG]  [BUGGY]  random(count,  0,  chars.length,  true,  false);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  true,  false);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  true,  false);	  random(count,    0,    chars.length,    false,    false);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
33	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  true);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  false,  true);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  true);	  random(count,    0,    chars.length,    false,    false);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
34	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  false,  RANDOM);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  false,  false,  RANDOM);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  false,  RANDOM);	  random(count,    0,    chars.length,    false,    false);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
35	[BUG]  [BUGGY]  chars[count]  =  RANDOM.trim();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  RANDOM.trim();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  RANDOM.trim();	  chars[count]    =    chars.trim();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
36	[BUG]  [BUGGY]  chars[count]  =  CHARS.trim();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  CHARS.trim();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  CHARS.trim();	  chars[count]    =    chars.trim();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
37	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  count);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  0,  count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  count);	  RandomStringUtils.checkChars(chars,    count);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  RandomStringUtils.checkDeprecated(count,  chars);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkDeprecated(count,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkDeprecated(count,  chars);	  RandomStringUtils.checkChars(chars,    count);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  chars[count]  =  chars  ==  null?  null  :  chars.toString();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  chars  ==  null?  null  :  chars.toString();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  chars  ==  null?  null  :  chars.toString();	  chars[count]    =    chars    ==    null?    null    :    chars.toCharArray();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
40	[BUG]  [BUGGY]  chars[count]  =  chars!=  null?  null  :  chars.toCharArray();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  chars!=  null?  null  :  chars.toCharArray();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  chars!=  null?  null  :  chars.toCharArray();	  chars[count]    =    chars    ==    null?    null    :    chars.toCharArray();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
41	[BUG]  [BUGGY]  char[]  chars  =  getChars(count,  chars.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getChars(count,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getChars(count,  chars.length);	  char[]    chars    =    getChars(count);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
42	[BUG]  [BUGGY]  char[]  chars  =  getChars(count,  chars);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getChars(count,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getChars(count,  chars);	  char[]    chars    =    getChars(count);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
43	[BUG]  [BUGGY]  char[]  chars  =  getChars(count,  0);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getChars(count,  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getChars(count,  0);	  char[]    chars    =    getChars(count);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
44	[BUG]  [BUGGY]  char[]  chars  =  getChars().toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getChars().toString();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getChars().toString();	  char[]    chars    =    getChars().toCharArray();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
45	[BUG]  [BUGGY]  char[]  chars  =  getChars().getChars();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getChars().getChars();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getChars().getChars();	  char[]    chars    =    getChars().toCharArray();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
46	[BUG]  [BUGGY]  RandomStringUtils.remove(chars,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars,  0,  chars.length);	  RandomStringUtils.remove(chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
47	[BUG]  [BUGGY]  RandomStringUtils.remove(chars,  0);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars,  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars,  0);	  RandomStringUtils.remove(chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
48	[BUG]  [BUGGY]  RandomStringUtils.remove(chars.length,  RANDOM);  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars.length,  RANDOM);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars.length,  RANDOM);	  RandomStringUtils.remove(chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
49	[BUG]  [BUGGY]  chars[count]  =  RANDOM.toLowerCase();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  RANDOM.toLowerCase();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  RANDOM.toLowerCase();	  chars[count]    =    RANDOM.toCharArray();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
50	[BUG]  [BUGGY]  chars[count]  =  RANDOM.toCharArray(Character.class);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  RANDOM.toCharArray(Character.class);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  RANDOM.toCharArray(Character.class);	  chars[count]    =    RANDOM.toCharArray();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
51	[BUG]  [BUGGY]  RandomStringUtils.checkBoolean(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkBoolean(count,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkBoolean(count,  0,  chars.length);	  RandomStringUtils.checkChars(count,    0,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
52	[BUG]  [BUGGY]  RandomStringUtils.checkDelimiter(count,  0,  chars);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkDelimiter(count,  0,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkDelimiter(count,  0,  chars);	  RandomStringUtils.checkChars(count,    0,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
53	[BUG]  [BUGGY]  char[]  chars  =  this.random.toCharArray();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  this.random.toCharArray();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  this.random.toCharArray();	  char[]    chars    =    random.toCharArray();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
54	[BUG]  [BUGGY]  char[]  chars  =  RANDOM.toCharArray();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  RANDOM.toCharArray();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  RANDOM.toCharArray();	  char[]    chars    =    random.toCharArray();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
55	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  false,  null,  RANDOM);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  null,  RANDOM);	  random(count,    0,    chars.length,    false,    null,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
56	[BUG]  [BUGGY]  random(count,  0,  chars.length,  true,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  true,  null,  RANDOM);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  true,  null,  RANDOM);	  random(count,    0,    chars.length,    false,    null,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
57	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  null,  RANDOM,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  false,  null,  RANDOM,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  null,  RANDOM,  chars.length);	  random(count,    0,    chars.length,    false,    null,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
58	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  null,  0);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  false,  null,  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  null,  0);	  random(count,    0,    chars.length,    false,    null,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
59	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.getChars(count);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  RandomStringUtils.getChars(count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  RandomStringUtils.getChars(count);	  char[]    chars    =    RANDOM.getChars();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
60	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.getChars(count,  chars);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  RandomStringUtils.getChars(count,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  RandomStringUtils.getChars(count,  chars);	  char[]    chars    =    RANDOM.getChars();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
61	[BUG]  [BUGGY]  return  random(count,  0,  chars.length  +  1);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length  +  1);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length  +  1);	  return    random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
62	[BUG]  [BUGGY]  return  random(count,  0,  chars.length  -  1);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length  -  1);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length  -  1);	  return    random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
63	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  0);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  0);	  return    random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
64	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  chars.length);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  chars.length);	  return    random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
65	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(count,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count,  0,  chars.length);	  char[]    chars    =    random.getChars(count,    chars.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
66	[BUG]  [BUGGY]  String  chars  =  random.getChars(count,  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  String  chars  =  random.getChars(count,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	String  chars  =  random.getChars(count,  chars.length);	  char[]    chars    =    random.getChars(count,    chars.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
67	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  1);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(count,  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count,  1);	  char[]    chars    =    random.getChars(count,    chars.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
68	[BUG]  [BUGGY]  RandomStringUtils.setChars(chars,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setChars(chars,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(chars,  0,  chars.length);	  RandomStringUtils.setChars(chars);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
69	[BUG]  [BUGGY]  RandomStringUtils.setChars(count);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setChars(count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(count);	  RandomStringUtils.setChars(chars);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
70	[BUG]  [BUGGY]  RandomStringUtils.setBoolean(count,  chars);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setBoolean(count,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setBoolean(count,  chars);	  RandomStringUtils.setChars(chars);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
71	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  0);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  0);	  RandomStringUtils.checkChars(chars,    0);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
72	[BUG]  [BUGGY]  char[]  chars  =  random.random();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.random();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.random();	  char[]    chars    =    this.random();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
73	[BUG]  [BUGGY]  char[]  chars  =  random.next();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.next();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.next();	  char[]    chars    =    this.random();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
74	[BUG]  [BUGGY]  char[]  chars  =  null;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  null;  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  null;	  char[]    chars    =    this.random();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
75	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  true);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  true);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  true);	  RandomStringUtils.checkChars(chars,    false);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
76	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  false);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  false);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  false);	  RandomStringUtils.checkChars(chars,    false);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
77	[BUG]  [BUGGY]  RandomStringUtils.checkChars(ch,  true);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(ch,  true);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(ch,  true);	  RandomStringUtils.checkChars(chars,    false);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
78	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  true);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  true);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  true);	  RandomStringUtils.checkChars(chars,    false);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
79	[BUG]  [BUGGY]  RandomStringUtils.remove(chars.length  -  1);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars.length  -  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars.length  -  1);	  RandomStringUtils.remove(chars.length);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
80	[BUG]  [BUGGY]  RandomStringUtils.remove(chars.length,  count);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars.length,  count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars.length,  count);	  RandomStringUtils.remove(chars.length);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
81	[BUG]  [BUGGY]  RandomStringUtils.remove(chars.length  -  1,  chars.length);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars.length  -  1,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars.length  -  1,  chars.length);	  RandomStringUtils.remove(chars.length);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
82	[BUG]  [BUGGY]  RandomStringUtils.remove(chars.length  +  1);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars.length  +  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars.length  +  1);	  RandomStringUtils.remove(chars.length);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
83	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count.length  ==  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count.length  ==  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count.length  ==  0);	  RandomStringUtils.checkArgument(chars.length    ==    0);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
84	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars(count,  chars);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  this.random.getChars(count,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  this.random.getChars(count,  chars);	  char[]    chars    =    this.random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
85	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars(count,  0);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  this.random.getChars(count,  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  this.random.getChars(count,  0);	  char[]    chars    =    this.random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
86	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars(count,  chars.length);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  this.random.getChars(count,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  this.random.getChars(count,  chars.length);	  char[]    chars    =    this.random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
87	[BUG]  [BUGGY]  char[]  chars  =  getRandom().toCharArray();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getRandom().toCharArray();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getRandom().toCharArray();	  char[]    chars    =    getRandom();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
88	[BUG]  [BUGGY]  char[]  chars  =  getRandom().chars;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getRandom().chars;  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getRandom().chars;	  char[]    chars    =    getRandom();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
89	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count  +  1,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(count  +  1,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count  +  1,  chars.length);	  char[]    chars    =    random.getChars(count    +    1);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
90	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count  +  2);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(count  +  2);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count  +  2);	  char[]    chars    =    random.getChars(count    +    1);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
91	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count  *  1);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(count  *  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count  *  1);	  char[]    chars    =    random.getChars(count    +    1);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
92	[BUG]  [BUGGY]  chars[count]  =  RANDOM.toString()  +  1;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  RANDOM.toString()  +  1;  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  RANDOM.toString()  +  1;	  chars[count]    =    RANDOM.toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
93	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count!=  0);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count!=  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count!=  0);	  RandomStringUtils.checkArgument(count    ==    0);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
94	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  1);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  ==  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  ==  1);	  RandomStringUtils.checkArgument(count    ==    0);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
95	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  0,  false);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  0,  false);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  0,  false);	  RandomStringUtils.checkChars(count,    chars,    false);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
96	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  chars[0],  false);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  chars[0],  false);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  chars[0],  false);	  RandomStringUtils.checkChars(count,    chars,    false);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
97	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  0,  chars);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(count,  0,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count,  0,  chars);	  char[]    chars    =    random.getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
98	[BUG]  [BUGGY]  random(count,  0,  chars.length,  true);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  true);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  true);	  random(count,    0,    chars.length,    false);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
99	[BUG]  [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }	  random(count,    0,    chars.length,    false);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
100	[BUG]  [BUGGY]  RandomStringUtils.remove(chars,  0,  count);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars,  0,  count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars,  0,  count);	  RandomStringUtils.remove(chars,    count);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
101	[BUG]  [BUGGY]  RandomStringUtils.remove(count,  chars);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(count,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(count,  chars);	  RandomStringUtils.remove(chars,    count);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
102	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  null,  RANDOM,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  null,  RANDOM,  chars.length);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  null,  RANDOM,  chars.length);	  return    random(count,    0,    chars.length,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
103	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars.length,  true);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars.length,  true);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  0,  chars.length,  true);	  RandomStringUtils.checkChars(chars,    0,    chars.length,    true);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
104	[BUG]  [BUGGY]  RandomStringUtils.checkChars(random,  0,  chars.length,  true);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(random,  0,  chars.length,  true);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(random,  0,  chars.length,  true);	  RandomStringUtils.checkChars(chars,    0,    chars.length,    true);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
105	[BUG]  [BUGGY]  RandomStringUtils.setChars(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setChars(count,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(count,  0,  chars.length);	  RandomStringUtils.setChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
106	[BUG]  [BUGGY]  RandomStringUtils.setChars(count,  chars,  false);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setChars(count,  chars,  false);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(count,  chars,  false);	  RandomStringUtils.setChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
107	[BUG]  [BUGGY]  RandomStringUtils.setChars(count,  chars,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setChars(count,  chars,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(count,  chars,  0,  chars.length);	  RandomStringUtils.setChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
108	[BUG]  [BUGGY]  RandomStringUtils.setChars(count,  0,  chars);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setChars(count,  0,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(count,  0,  chars);	  RandomStringUtils.setChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
109	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  true,  false,  null,  0);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  true,  false,  null,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  true,  false,  null,  0);	  return    random(count,    0,    chars.length,    false,    false,    null,    0);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
110	[BUG]  [BUGGY]  return  random(count,  0,  count,  false,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  count,  false,  false,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  count,  false,  false,  null,  RANDOM);	  return    random(count,    0,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
111	[BUG]  [BUGGY]  return  random(count,  0,  0,  chars.length,  false,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  0,  chars.length,  false,  false,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  0,  chars.length,  false,  false,  null,  RANDOM);	  return    random(count,    0,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
112	[BUG]  [BUGGY]  return  random(count,  0,  false,  false,  null,  RANDOM,  chars);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  false,  false,  null,  RANDOM,  chars);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  false,  false,  null,  RANDOM,  chars);	  return    random(count,    0,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
113	[BUG]  [BUGGY]  char[]  chars  =  getClass().getChars(count);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getClass().getChars(count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getClass().getChars(count);	  char[]    chars    =    getClass().getChars();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
114	[BUG]  [BUGGY]  char[]  chars  =  getClass().getName();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getClass().getName();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getClass().getName();	  char[]    chars    =    getClass().getChars();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
115	[BUG]  [BUGGY]  char[]  chars  =  getClass().getSimpleName();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getClass().getSimpleName();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getClass().getSimpleName();	  char[]    chars    =    getClass().getChars();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
116	[BUG]  [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  count.length,  false,  false,  null,  RANDOM);	  return    random(count,    0,    count.length,    true,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
117	[BUG]  [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  RANDOM,  chars);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  RANDOM,  chars);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  count.length,  false,  false,  null,  RANDOM,  chars);	  return    random(count,    0,    count.length,    true,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
118	[BUG]  [BUGGY]  return  random(count,  0,  count.length,  true,  false,  null,  RANDOM,  chars);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  count.length,  true,  false,  null,  RANDOM,  chars);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  count.length,  true,  false,  null,  RANDOM,  chars);	  return    random(count,    0,    count.length,    true,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
119	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  RANDOM);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  false,  RANDOM);	  return    random(count,    0,    chars.length,    true,    false,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
120	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  true,  false,  RANDOM);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  true,  false,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  true,  false,  RANDOM);	  return    random(count,    0,    chars.length,    true,    false,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
121	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(0,  count);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(0,  count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(0,  count);	  char[]    chars    =    random.getChars(0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
122	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(0,  0,  chars.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(0,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(0,  0,  chars.length);	  char[]    chars    =    random.getChars(0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
123	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(1,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(1,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(1,  chars.length);	  char[]    chars    =    random.getChars(0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
124	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  true,  RANDOM);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  true,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  false,  true,  RANDOM);	  return    random(count,    0,    chars.length,    false,    true,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
125	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  0,  true);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  0,  true);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  0,  true);	  RandomStringUtils.checkChars(count,    chars,    true);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
126	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  0L);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(count,  0L);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count,  0L);	  char[]    chars    =    random.getChars(count,    0);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
127	[BUG]  [BUGGY]  char[]  chars  =  getRawChars();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getRawChars();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getRawChars();	  char[]    chars    =    getEmptyChars();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
128	[BUG]  [BUGGY]  char[]  chars  =  getNullChars();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getNullChars();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getNullChars();	  char[]    chars    =    getEmptyChars();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
129	[BUG]  [BUGGY]  RandomStringUtils.checkDeprecated(chars,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkDeprecated(chars,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkDeprecated(chars,  0,  chars.length);	  RandomStringUtils.checkChars(chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
130	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars.length  +  1);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars.length  +  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  0,  chars.length  +  1);	  RandomStringUtils.checkChars(chars,    0,    chars.length    +    1);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
131	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  count.length  +  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  0,  count.length  +  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  count.length  +  1);	  RandomStringUtils.checkChars(chars,    0,    chars.length    +    1);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
132	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  count.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  0,  count.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  count.length);	  RandomStringUtils.checkChars(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
133	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  true,  false,  null,  RANDOM,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  true,  false,  null,  RANDOM,  chars.length);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  true,  false,  null,  RANDOM,  chars.length);	  return    random(count,    0,    chars.length,    false,    false,    null,    RANDOM,    chars.length);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
134	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  true,  null,  RANDOM,  chars.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  true,  null,  RANDOM,  chars.length);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  true,  null,  RANDOM,  chars.length);	  return    random(count,    0,    chars.length,    false,    false,    null,    RANDOM,    chars.length);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
135	[BUG]  [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  RANDOM,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  RANDOM,  chars.length);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  count.length,  false,  false,  null,  RANDOM,  chars.length);	  return    random(count,    0,    chars.length,    false,    false,    null,    RANDOM,    chars.length);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
136	[BUG]  [BUGGY]  return  random(count,  0,  0,  false,  false,  null,  RANDOM,  chars);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  0,  false,  false,  null,  RANDOM,  chars);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  0,  false,  false,  null,  RANDOM,  chars);	  return    random(count,    0,    0,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
137	[BUG]  [BUGGY]  return  random(count,  0,  0,  true,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  0,  true,  false,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  0,  true,  false,  null,  RANDOM);	  return    random(count,    0,    0,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
138	[BUG]  [BUGGY]  return  random(count,  0,  0,  false,  true,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  0,  false,  true,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  0,  false,  true,  null,  RANDOM);	  return    random(count,    0,    0,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
139	[BUG]  [BUGGY]  return  random(count,  chars.length,  true,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  chars.length,  true,  false,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  chars.length,  true,  false,  null,  RANDOM);	  return    random(count,    chars.length,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
140	[BUG]  [BUGGY]  return  random(count,  chars.length,  false,  true,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  chars.length,  false,  true,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  chars.length,  false,  true,  null,  RANDOM);	  return    random(count,    chars.length,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
141	[BUG]  [BUGGY]  while(count  <  chars.length)  {  count  =  random(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  while(count  <  chars.length)  {  count  =  random(count,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	while(count  <  chars.length)  {  count  =  random(count,  0,  chars.length);	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
142	[BUG]  [BUGGY]  while(count  <  chars.length)  {  count[count]  =  random(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  while(count  <  chars.length)  {  count[count]  =  random(count,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	while(count  <  chars.length)  {  count[count]  =  random(count,  0,  chars.length);	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
143	[BUG]  [BUGGY]  while(count  <  chars.length)  {  count  =  random(count,  0,  chars.length);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  while(count  <  chars.length)  {  count  =  random(count,  0,  chars.length);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	while(count  <  chars.length)  {  count  =  random(count,  0,  chars.length);  }	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
144	[BUG]  [BUGGY]  mutableValues(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  mutableValues(count,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	mutableValues(count,  0,  chars.length);	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
145	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(0,  chars);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(0,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(0,  chars);	  char[]    chars    =    random.getChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
146	[BUG]  [BUGGY]  char[]  chars  =  getEmptyChars(true);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getEmptyChars(true);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getEmptyChars(true);	  char[]    chars    =    getEmptyChars();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
147	[BUG]  [BUGGY]  char[]  chars  =  getEmptyChars(count);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getEmptyChars(count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getEmptyChars(count);	  char[]    chars    =    getEmptyChars();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
148	[BUG]  [BUGGY]  return  random(count,  0,  count,  true,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  count,  true,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  count,  true,  null,  RANDOM);	  return    random(count,    0,    chars.length,    true,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
149	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  false,  null,  0);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  false,  false,  null,  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  false,  null,  0);	  random(count,    0,    chars.length,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
150	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length)+  1;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length)+  1;  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars.length)+  1;	  RandomStringUtils.checkChars(chars,    0,    chars.length    +    1);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
151	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(chars.length  ==  0  ||  chars.length  ==  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(chars.length  ==  0  ||  chars.length  ==  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(chars.length  ==  0  ||  chars.length  ==  0);	  RandomStringUtils.checkArgument(chars.length    ==    0);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
152	[BUG]  [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }	  random(count,    0,    chars.length,    false);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
153	[BUG]  [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  RANDOM);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  RANDOM);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  RANDOM);  }	  random(count,    0,    chars.length,    false);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
154	[BUG]  [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	if(count  <  chars.length)  {  random(count,  0,  chars.length,  false);  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  }	  random(count,    0,    chars.length,    false);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
155	[BUG]  [BUGGY]  return  random(count,  0,  true,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  true,  false,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  true,  false,  null,  RANDOM);	  return    random(count,    0,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
156	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  null,  0);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  null,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  null,  0);	  return    random(count,    0,    chars.length,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
157	[BUG]  [BUGGY]  RandomStringUtils.copyValue(random,  count);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.copyValue(random,  count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.copyValue(random,  count);	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    System.arraycopy(count,    0,    chars,    0,    chars.length);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
158	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >=  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  >=  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  >=  chars.length);	  RandomStringUtils.checkArgument(count    <    chars.length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
159	[BUG]  [BUGGY]  RandomStringUtils.remove(chars.length,  0);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars.length,  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars.length,  0);	  RandomStringUtils.remove(chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
160	[BUG]  [BUGGY]  RandomStringUtils.remove(chars.length,  chars);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars.length,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars.length,  chars);	  RandomStringUtils.remove(chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
161	[BUG]  [BUGGY]  chars[count]  =  random.toCharArray();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  random.toCharArray();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  random.toCharArray();	  chars[count]    =    CHARS.toCharArray();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
162	[BUG]  [BUGGY]  chars[count]  =  this.random.toCharArray();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  this.random.toCharArray();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  this.random.toCharArray();	  chars[count]    =    CHARS.toCharArray();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
163	[BUG]  [BUGGY]  char[]  chars  =  getChars(count  +  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getChars(count  +  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getChars(count  +  1);	  char[]    chars    =    getChars(count);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
164	[BUG]  [BUGGY]  mutableValues(count,  chars);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  mutableValues(count,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	mutableValues(count,  chars);	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
165	[BUG]  [BUGGY]  safeMultiply(count,  chars);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  safeMultiply(count,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	safeMultiply(count,  chars);	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
166	[BUG]  [BUGGY]  mutable(count,  chars);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  mutable(count,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	mutable(count,  chars);	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
167	[BUG]  [BUGGY]  mutableValues.add(count);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  mutableValues.add(count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	mutableValues.add(count);	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
168	[BUG]  [BUGGY]  chars[count]  =  RandomStringUtils.toCharArray(random);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  RandomStringUtils.toCharArray(random);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  RandomStringUtils.toCharArray(random);	  chars[count]    =    RANDOM.toCharArray();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
169	[BUG]  [BUGGY]  chars[count]  =  random.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  random.toString();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  random.toString();	  chars[count]    =    RANDOM.toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
170	[BUG]  [BUGGY]  safeMultiply(count,  chars.length)  {  random(count,  0,  chars.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  safeMultiply(count,  chars.length)  {  random(count,  0,  chars.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	safeMultiply(count,  chars.length)  {  random(count,  0,  chars.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
171	[BUG]  [BUGGY]  safeMultiply(count,  chars.length)  {  random(count,  0,  chars.length);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  safeMultiply(count,  chars.length)  {  random(count,  0,  chars.length);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	safeMultiply(count,  chars.length)  {  random(count,  0,  chars.length);  }	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
172	[BUG]  [BUGGY]  RandomStringUtils.setChars(chars,  count);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setChars(chars,  count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(chars,  count);	  RandomStringUtils.setChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
173	[BUG]  [BUGGY]  RandomStringUtils.setChars(count,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setChars(count,  chars,  RANDOM);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(count,  chars,  RANDOM);	  RandomStringUtils.setChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
174	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  0);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  false,  0);	  return    random(count,    0,    chars.length,    false,    true,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
175	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(chars.length  <  =  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(chars.length  <  =  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(chars.length  <  =  0);	  RandomStringUtils.checkArgument(chars.length    ==    chars);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
176	[BUG]  [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  false,  false);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  false,  false);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	if(count  <  chars.length)  {  random(count,  0,  chars.length,  false,  false);  }	  random(count,    0,    chars.length,    false,    false);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
177	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  RANDOM);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  RANDOM);	  return    random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
178	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count,  chars.length,  chars.length);	  char[]    chars    =    random.getChars(count,    chars.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
179	[BUG]  [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  true,  false,  chars);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  RANDOM);  }  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length,  true,  false,  chars);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  RANDOM);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	if(count  <  chars.length)  {  random(count,  0,  chars.length,  true,  false,  chars);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  RANDOM);  }	  random(count,    0,    chars.length,    true,    false,    chars);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
180	[BUG]  [BUGGY]  char[]  chars  =  random.toString();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.toString();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.toString();	  char[]    chars    =    random.toCharArray();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
181	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  chars.length  +  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  chars.length  +  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  ==  chars,  chars.length  +  1);	  RandomStringUtils.checkArgument(count    ==    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
182	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  1,  chars);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(count,  1,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  1,  chars);	  RandomStringUtils.checkChars(count,    0,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
183	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars);	  RandomStringUtils.checkChars(count,    0,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
184	[BUG]  [BUGGY]  return  random(count,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  chars,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  chars,  RANDOM);	  return    random(count,    chars);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
185	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars(count  +  1);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  this.random.getChars(count  +  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  this.random.getChars(count  +  1);	  char[]    chars    =    this.random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
186	[BUG]  [BUGGY]  char[]  chars  =  getClass().getChars(0,  chars.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getClass().getChars(0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getClass().getChars(0,  chars.length);	  char[]    chars    =    getClass().getChars();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
187	[BUG]  [BUGGY]  RandomStringUtils.checkChars(ch,  false);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(ch,  false);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(ch,  false);	  RandomStringUtils.checkChars(chars,    false);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
188	[BUG]  [BUGGY]  RandomStringUtils.setChars(chars,  RANDOM);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setChars(chars,  RANDOM);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(chars,  RANDOM);	  RandomStringUtils.setChars(chars);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
189	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  false,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  false,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars.length,  false,  chars.length);	  RandomStringUtils.checkChars(chars,    0,    chars.length,    false);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
190	[BUG]  [BUGGY]  random(count,  0,  chars.length,  true,  null,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  true,  null,  chars,  RANDOM);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  true,  null,  chars,  RANDOM);	  random(count,    0,    chars.length,    false,    null,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
191	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  null,  chars,  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  false,  null,  chars,  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  null,  chars,  0);	  random(count,    0,    chars.length,    false,    null,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
192	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(0,  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(0,  chars.length,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(0,  chars.length,  chars.length);	  char[]    chars    =    random.getChars(0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
193	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(0,  chars.length  +  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(0,  chars.length  +  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(0,  chars.length  +  1);	  char[]    chars    =    random.getChars(0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
194	[BUG]  [BUGGY]  chars[count]  =  chars  ==  null?  null  :  chars.trim();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  chars  ==  null?  null  :  chars.trim();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  chars  ==  null?  null  :  chars.trim();	  chars[count]    =    chars.trim();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
195	[BUG]  [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  0);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  count.length,  false,  false,  null,  0);	  return    random(count,    0,    count.length,    true,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
196	[BUG]  [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  chars);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  count.length,  false,  false,  null,  chars);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  count.length,  false,  false,  null,  chars);	  return    random(count,    0,    count.length,    true,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
197	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM  +  2);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM  +  2);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM  +  2);	  return    random(count,    0,    chars.length,    false,    false,    null,    RANDOM    +    1);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
198	[BUG]  [BUGGY]  chars[count]  =  chars!=  null?  chars.toCharArray()  :  chars.trim();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  chars!=  null?  chars.toCharArray()  :  chars.trim();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  chars!=  null?  chars.toCharArray()  :  chars.trim();	  chars[count]    =    chars.trim();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
199	[BUG]  [BUGGY]  RandomStringUtils.remove(chars,  1,  count);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars,  1,  count);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars,  1,  count);	  RandomStringUtils.remove(chars,    count);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
200	[BUG]  [BUGGY]  RandomStringUtils.remove(chars,  1);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.remove(chars,  1);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars,  1);	  RandomStringUtils.remove(chars,    count);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
201	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(0,  chars.length,  false);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(0,  chars.length,  false);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(0,  chars.length,  false);	  char[]    chars    =    random.getChars(0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
202	[BUG]  [BUGGY]  return  random(count,  0,  0,  chars.length,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  0,  chars.length,  false,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  0,  chars.length,  false,  null,  RANDOM);	  return    random(count,    0,    0,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
203	[BUG]  [BUGGY]  return  random(count,  0,  chars.length  -  1,  chars.length);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length  -  1,  chars.length);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length  -  1,  chars.length);	  return    random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
204	[BUG]  [BUGGY]  char[]  chars  =  getBase().toCharArray();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getBase().toCharArray();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getBase().toCharArray();	  char[]    chars    =    getChars().toCharArray();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
205	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  false,  chars);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  false,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars.length,  false,  chars);	  RandomStringUtils.checkChars(chars,    0,    chars.length,    false);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
206	[BUG]  [BUGGY]  char[]  chars  =  RandomStringUtils.random();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  RandomStringUtils.random();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  RandomStringUtils.random();	  char[]    chars    =    this.random();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
207	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  0);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(count  >  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  >  0);	  RandomStringUtils.checkArgument(count    ==    0);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
208	[BUG]  [BUGGY]  }  else  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  }  else  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	}  else  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
209	[BUG]  [BUGGY]  }  else  if(count  <  chars.length)  {  if(count  <  chars.length)  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  }  else  if(count  <  chars.length)  {  if(count  <  chars.length)  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	}  else  if(count  <  chars.length)  {  if(count  <  chars.length)  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
210	[BUG]  [BUGGY]  }  else  if(count  <  chars.length)  {  if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  }  else  if(count  <  chars.length)  {  if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	}  else  if(count  <  chars.length)  {  if(count  <  chars.length)  {  random(count,  0,  chars.length);  }	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
211	[BUG]  [BUGGY]  }  else  if(count  <  chars.length)  {  if(count  <  chars.length)  {  random(count,  0,  chars.length;  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  }  else  if(count  <  chars.length)  {  if(count  <  chars.length)  {  random(count,  0,  chars.length;  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	}  else  if(count  <  chars.length)  {  if(count  <  chars.length)  {  random(count,  0,  chars.length;  }	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    return    random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
212	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(0,  0);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  random.getChars(0,  0);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(0,  0);	  char[]    chars    =    random.getChars(count,    0);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
213	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(chars.length  ==  0,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkArgument(chars.length  ==  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(chars.length  ==  0,  chars.length);	  RandomStringUtils.checkArgument(count    ==    chars,    chars.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
214	[BUG]  [BUGGY]  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	}	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
215	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  [Delete]  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	[Delete]	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
216	[BUG]  [BUGGY]  mutable(count,  chars.length);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  mutable(count,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	mutable(count,  chars.length);	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
217	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  null,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  null,  false,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  null,  false,  null,  RANDOM);	  return    random(count,    0,    chars.length,    true,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
218	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  null,  chars);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  false,  null,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  null,  chars);	  random(count,    0,    chars.length,    false,    null,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
219	[BUG]  [BUGGY]  chars[count]  =  chars.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  chars.toString();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  chars.toString();	  chars[count]    =    RANDOM.toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
220	[BUG]  [BUGGY]  chars[count]  =  RANDOM.toUpperCase();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  chars[count]  =  RANDOM.toUpperCase();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  RANDOM.toUpperCase();	  chars[count]    =    RANDOM.toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
221	[BUG]  [BUGGY]  return  RandomStringUtils.convert(random,  chars,  0);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  RandomStringUtils.convert(random,  chars,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  RandomStringUtils.convert(random,  chars,  0);	  return    RandomStringUtils.convert(random,    chars);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
222	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  null,  RANDOM,  CHARS);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  null,  RANDOM,  CHARS);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  null,  RANDOM,  CHARS);	  return    random(count,    0,    chars.length,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
223	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM,  0);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM,  0);	  return    random(count,    0,    chars.length,    false,    false,    null,    RANDOM,    chars.length);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
224	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  null);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  random(count,  0,  chars.length,  false,  null);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  null);	  random(count,    0,    chars.length,    false);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
225	[BUG]  [BUGGY]  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	}  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    System.arraycopy(count,    0,    chars,    0,    chars.length);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
226	[BUG]  [BUGGY]  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	}  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    System.arraycopy(count,    0,    chars,    0,    chars.length);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
227	[BUG]  [BUGGY]  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  return  random(count,  0,  chars.length,  true,  false,  chars,  RANDOM);  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  return  random(count,  0,  chars.length,  true,  false,  chars,  RANDOM);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	}  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  return  random(count,  0,  chars.length,  true,  false,  chars,  RANDOM);  }	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    System.arraycopy(count,    0,    chars,    0,    chars.length);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
228	[BUG]  [BUGGY]  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  return  random(count,  0,  chars.length,  false,  true,  chars,  RANDOM);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  return  random(count,  0,  chars.length,  false,  true,  chars,  RANDOM);  }  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	}  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  return  random(count,  0,  chars.length,  false,  true,  chars,  RANDOM);  }	  if(count    <    chars.length)    {    random(count,    0,    chars.length);    }    else    {    System.arraycopy(count,    0,    chars,    0,    chars.length);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
229	[BUG]  [BUGGY]  char[]  chars  =  getArgumentBounds();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  char[]  chars  =  getArgumentBounds();  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getArgumentBounds();	  char[]    chars    =    getRandom();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
230	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  false,  chars);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  false,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  false,  chars);	  RandomStringUtils.checkChars(chars,    false);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
231	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length  +  1,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length  +  1,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars.length  +  1,  chars.length);	  RandomStringUtils.checkChars(chars,    0,    chars.length,    chars.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
232	[BUG]  [BUGGY]  RandomStringUtils.setIndex(count,  chars);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.setIndex(count,  chars);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setIndex(count,  chars);	  RandomStringUtils.remove(chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
233	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  1,  chars.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }      [BUGGY]  RandomStringUtils.checkChars(chars,  1,  chars.length);  [BUGGY]      return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  1,  chars.length);	  RandomStringUtils.checkChars(chars,    count);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
