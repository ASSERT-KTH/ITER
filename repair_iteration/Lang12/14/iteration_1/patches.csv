bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  0);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  random.getChars(count,  0);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count,  0);	      char[]    chars    =    random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  random.getChars(count,  chars.length);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count,  chars.length);	      char[]    chars    =    random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count,  chars);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  random.getChars(count,  chars);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count,  chars);	      char[]    chars    =    random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars(count);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  this.random.getChars(count);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  this.random.getChars(count);	      char[]    chars    =    random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars.length);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  0,  chars.length);	      RandomStringUtils.checkChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
6	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  count);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(chars,  count);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  count);	      RandomStringUtils.checkChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  chars,  false);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(count,  chars,  false);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  chars,  false);	      RandomStringUtils.checkChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
8	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(count,  0,  chars);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  0,  chars);	      RandomStringUtils.checkChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  true,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  chars.length,  true,  null,  RANDOM);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  true,  null,  RANDOM);	  return    random(count,    0,    chars.length,    false,    true,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  char[]  chars  =  this.random.getChars();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  this.random.getChars();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  this.random.getChars();	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
11	[BUG]  [BUGGY]  char[]  chars  =  getChars(count);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  getChars(count);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getChars(count);	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
12	[BUG]  [BUGGY]  char[]  chars  =  getRandom();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  getRandom();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getRandom();	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
13	[BUG]  [BUGGY]  return  random(count,  0,  count.length,  true,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  count.length,  true,  false,  null,  RANDOM);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  count.length,  true,  false,  null,  RANDOM);	  return    random(count,    0,    chars.length,    true,    false,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  RANDOM);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(chars,  RANDOM);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  RANDOM);	      RandomStringUtils.checkChars(chars);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
15	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  false);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(chars,  false);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  false);	      RandomStringUtils.checkChars(chars);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
16	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  random(count,  0,  chars.length,  false);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false);	      random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  }  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  }  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  else  {  System.arraycopy(count,  0,  chars,  0,  chars.length);  }	      random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  else  {  return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }	      random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
19	[BUG]  [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	if(count  <  chars.length)  {  random(count,  0,  chars.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  chars[count]  =  RANDOM.toCharArray();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  chars[count]  =  RANDOM.toCharArray();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  RANDOM.toCharArray();	      chars[count]    =    chars.toCharArray();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
21	[BUG]  [BUGGY]  chars[count]  =  RANDOM.toString();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  chars[count]  =  RANDOM.toString();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  RANDOM.toString();	      chars[count]    =    chars.toCharArray();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
22	[BUG]  [BUGGY]  chars[count]  =  CHARS.toCharArray();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  chars[count]  =  CHARS.toCharArray();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  CHARS.toCharArray();	      chars[count]    =    chars.toCharArray();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
23	[BUG]  [BUGGY]  RandomStringUtils.remove(chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.remove(chars.length);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars.length);	      RandomStringUtils.remove(chars);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  RandomStringUtils.setChars(count,  chars);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.setChars(count,  chars);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(count,  chars);	      RandomStringUtils.remove(chars);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  RandomStringUtils.remove(chars,  count);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.remove(chars,  count);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars,  count);	      RandomStringUtils.remove(chars);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  RandomStringUtils.remove(chars,  RANDOM);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.remove(chars,  RANDOM);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.remove(chars,  RANDOM);	      RandomStringUtils.remove(chars);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  random(count,  0,  chars.length,  true,  false,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  random(count,  0,  chars.length,  true,  false,  chars,  RANDOM);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  true,  false,  chars,  RANDOM);	      random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  true,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  random(count,  0,  chars.length,  false,  true,  chars,  RANDOM);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  true,  chars,  RANDOM);	      random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  random(count,  0,  chars.length,  false,  false,  null,  RANDOM);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  false,  null,  RANDOM);	      random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  char[]  chars  =  RANDOM.getChars();  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  RANDOM.getChars();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  RANDOM.getChars();	      char[]    chars    =    random.getChars();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
31	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  false);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  false);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars.length,  false);	      RandomStringUtils.checkChars(chars,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
32	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  true);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  true);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars.length,  true);	      RandomStringUtils.checkChars(chars,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
33	[BUG]  [BUGGY]  return  random(count,  chars);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  chars);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  chars);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  0,  false,  false,  null,  RANDOM);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  return  random(count,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  chars.length);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  random(count,  0,  chars.length,  true,  false,  chars);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  random(count,  0,  chars.length,  true,  false,  chars);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  true,  false,  chars);	      random(count,    0,    chars.length,    false,    false,    chars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars.length);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  ==  chars.length);	      RandomStringUtils.checkArgument(count    ==    chars);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
38	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkArgument(count  ==  chars,  chars.length);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  ==  chars,  chars.length);	      RandomStringUtils.checkArgument(count    ==    chars);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkArgument(count  ==  0);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  ==  0);	      RandomStringUtils.checkArgument(count    ==    chars);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkArgument(count  <  chars.length);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(count  <  chars.length);	      RandomStringUtils.checkArgument(count    ==    chars);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
41	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM,  chars.length);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM,  chars.length);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM,  chars.length);	  return    random(count,    0,    chars.length,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  RandomStringUtils.checkChars(count,  chars,  true);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(count,  chars,  true);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(count,  chars,  true);	      RandomStringUtils.checkChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  null,  0);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  null,  0);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  false,  null,  0);	  return    random(count,    0,    chars.length,    false,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  RandomStringUtils.setChars(chars);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.setChars(chars);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.setChars(chars);	      RandomStringUtils.remove(chars);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  char[]  chars  =  random.toCharArray();  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  random.toCharArray();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.toCharArray();	      char[]    chars    =    random.getChars();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
46	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  true,  false,  RANDOM);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  chars.length,  true,  false,  RANDOM);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  true,  false,  RANDOM);	  return    random(count,    0,    chars.length,    false,    true,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
47	[BUG]  [BUGGY]  char[]  chars  =  getChars().toCharArray();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  getChars().toCharArray();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getChars().toCharArray();	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
48	[BUG]  [BUGGY]  char[]  chars  =  this.random();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  this.random();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  this.random();	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(count  +  1);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  random.getChars(count  +  1);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(count  +  1);	      char[]    chars    =    random.getChars(count);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
50	[BUG]  [BUGGY]  return  random(count,  0,  false,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  false,  false,  null,  RANDOM);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  false,  false,  null,  RANDOM);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
51	[BUG]  [BUGGY]  return  random(count,  chars.length,  false,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  chars.length,  false,  false,  null,  RANDOM);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  chars.length,  false,  false,  null,  RANDOM);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
52	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(chars.length  ==  chars);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkArgument(chars.length  ==  chars);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(chars.length  ==  chars);	      RandomStringUtils.checkArgument(count    ==    chars);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length  +  1);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length  +  1);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars.length  +  1);	      RandomStringUtils.checkChars(chars,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
54	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  chars.length,  false,  null,  RANDOM);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  null,  RANDOM);	  return    random(count,    0,    chars.length,    true,    false,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
55	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  true,  chars);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  random(count,  0,  chars.length,  false,  true,  chars);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  true,  chars);	      random(count,    0,    chars.length,    false,    false,    chars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
56	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  null,  chars,  RANDOM);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  random(count,  0,  chars.length,  false,  null,  chars,  RANDOM);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  null,  chars,  RANDOM);	      random(count,    0,    chars.length,    false,    false,    chars,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  char[]  chars  =  random.getChars(0,  chars.length);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  random.getChars(0,  chars.length);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  random.getChars(0,  chars.length);	      char[]    chars    =    random.getChars();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
58	[BUG]  [BUGGY]  char[]  chars  =  getEmptyChars();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  getEmptyChars();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getEmptyChars();	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
59	[BUG]  [BUGGY]  char[]  chars  =  getClass().getChars();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  char[]  chars  =  getClass().getChars();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	char[]  chars  =  getClass().getChars();	      char[]    chars    =    getChars();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
60	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(chars.length  ==  0);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkArgument(chars.length  ==  0);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkArgument(chars.length  ==  0);	      RandomStringUtils.checkArgument(count    ==    chars);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
61	[BUG]  [BUGGY]  random(count,  0,  chars.length,  false,  false);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  random(count,  0,  chars.length,  false,  false);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	random(count,  0,  chars.length,  false,  false);	      random(count,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
62	[BUG]  [BUGGY]  return  RandomStringUtils.convert(random,  chars);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  RandomStringUtils.convert(random,  chars);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  RandomStringUtils.convert(random,  chars);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM  +  1);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM  +  1);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  false,  null,  RANDOM  +  1);	  return    random(count,    0,    chars.length,    true,    false,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  chars[count]  =  chars  ==  null?  null  :  chars.toCharArray();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  chars[count]  =  chars  ==  null?  null  :  chars.toCharArray();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  chars  ==  null?  null  :  chars.toCharArray();	      chars[count]    =    chars.toCharArray();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
65	[BUG]  [BUGGY]  chars[count]  =  chars.trim();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  chars[count]  =  chars.trim();  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	chars[count]  =  chars.trim();	      chars[count]    =    chars.toCharArray();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
66	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(chars,  0);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0);	      RandomStringUtils.checkChars(count,    chars);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
67	[BUG]  [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  chars.length);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  RandomStringUtils.checkChars(chars,  0,  chars.length,  chars.length);  [BUGGY]    return  random(count,  0,  chars.length,  false,  false,  chars,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	RandomStringUtils.checkChars(chars,  0,  chars.length,  chars.length);	      RandomStringUtils.checkChars(chars,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
68	[BUG]  [BUGGY]  return  random(count,  0,  chars.length,  false,  true,  0);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  random(int  count,  char...  chars)  {  if  (chars  ==  null)  {  return  random(count,  0,  0,  false,  false,  null,  RANDOM);  }    [BUGGY]  return  random(count,  0,  chars.length,  false,  true,  0);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  chars  [VARIABLES]  boolean  Random  RANDOM  random  int  count  char[]  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	return  random(count,  0,  chars.length,  false,  true,  0);	  return    random(count,    0,    chars.length,    false,    true,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
