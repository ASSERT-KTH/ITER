bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.length  :  0;  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.length  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.length  :  0;	  int    letters    =(numbers    &    Random.MAX_VALUE)!=    0?    random.numbers    :    0;    	non-compiled	[CE]  	69	None	replace
2	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)!=  0?  random.length  :  0;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)!=  0?  random.length  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MAX_VALUE)!=  0?  random.length  :  0;	  int    letters    =(numbers    &    Random.MAX_VALUE)!=    0?    random.numbers    :    0;    	non-compiled	[CE]  	69	None	replace
3	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random[ch].equals(chars))  {  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random[ch].equals(chars))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random[ch].equals(chars))  {	  if(!letters    &&!numbers    &&    chars[ch].equals(random))    {    	non-compiled	[CE]  	74	None	replace
4	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(chars[ch].equals(ch)))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(chars[ch].equals(ch)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(chars[ch].equals(ch)))  {	  if(!letters    &&!numbers    &&    chars[ch].equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
5	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  buffer[ch].equals(random))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  buffer[ch].equals(random))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  buffer[ch].equals(random))  {	  if(!letters    &&!numbers    &&    chars[ch].equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
6	[BUG]  [BUGGY]  if(!numbers  &&  chars[ch].equals(random))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!numbers  &&  chars[ch].equals(random))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!numbers  &&  chars[ch].equals(random))  {	  if(!letters    &&!numbers    &&    chars[ch].equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
7	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  2];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  2];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[buffer.length  +  2];	  char[]    buffer    =    new    char[buffer.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
8	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[buffer.length  *  1];	  char[]    buffer    =    new    char[buffer.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
9	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  3];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  3];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[buffer.length  +  3];	  char[]    buffer    =    new    char[buffer.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
10	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  *  2];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[count  *  2];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[count  *  2];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  /  1];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[count  /  1];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[count  /  1];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  -  1];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[count  -  1];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[count  -  1];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  *  4];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[count  *  4];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[count  *  4];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start,  end)!=  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start,  end)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(start,  end)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(start,    ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
15	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.getChars(start,  ch)!=  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.getChars(start,  ch)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.getChars(start,  ch)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(start,    ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
16	[BUG]  [BUGGY]  if(!numbers  &&  random.getChars(start,  end)!=  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!numbers  &&  random.getChars(start,  end)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!numbers  &&  random.getChars(start,  end)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(start,    ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
17	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  0,  end);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(0,  0,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  0,  end);	  char[]    buf    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
18	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  end,  start);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  end,  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  end,  start);	  char[]    buf    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
19	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  0,  start,  end);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(0,  0,  start,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  0,  start,  end);	  char[]    buf    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
20	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(random))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(random))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!ch.equals(random))  {	  if(!letters    ||!numbers    ||!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(apache.random.nextInt(start,  end)))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(apache.random.nextInt(start,  end)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!ch.equals(apache.random.nextInt(start,  end)))  {	  if(!letters    ||!numbers    ||!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
22	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(apache.random.nextLong()))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(apache.random.nextLong()))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!ch.equals(apache.random.nextLong()))  {	  if(!letters    ||!numbers    ||!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
23	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(ch))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  chars.equals(ch))  {	  if(!letters    &&!numbers    &&    chars.equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
24	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(random.getChars(ch)))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(random.getChars(ch)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  chars.equals(random.getChars(ch)))  {	  if(!letters    &&!numbers    &&    chars.equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
25	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(random.nextBoolean()))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(random.nextBoolean()))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  chars.equals(random.nextBoolean()))  {	  if(!letters    &&!numbers    &&    chars.equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
26	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!chars.contains(ch))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||!chars.contains(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!chars.contains(ch))  {	  if(!letters    &&!numbers    &&!chars.contains(ch))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
27	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.contains(ch))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.contains(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.contains(ch))  {	  if(!letters    &&!numbers    &&!chars.contains(ch))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
28	[BUG]  [BUGGY]  if(!numbers  &&!chars.contains(ch))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!numbers  &&!chars.contains(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!numbers  &&!chars.contains(ch))  {	  if(!letters    &&!numbers    &&!chars.contains(ch))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
29	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  end  +  1,  count);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  end  +  1,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  end  +  1,  count);	  char[]    buf    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
30	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  start  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start  +  1);	  char[]    buf    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
31	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(count,  start  +  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(count,  start  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(count,  start  +  1);	  char[]    buf    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
32	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  chars.length  :  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  chars.length  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  chars.length  :  0;	  int    letters    =(numbers    &    Random.MIN_VALUE)    ==    0?    random.numbers    :    0;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
33	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  :  0;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  :  0;	  int    letters    =(numbers    &    Random.MIN_VALUE)    ==    0?    random.numbers    :    0;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
34	[BUG]  [BUGGY]  int  letters  =(count  &  Random.MIN_VALUE)  ==  0?  random.numbers  :  0;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(count  &  Random.MIN_VALUE)  ==  0?  random.numbers  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(count  &  Random.MIN_VALUE)  ==  0?  random.numbers  :  0;	  int    letters    =(numbers    &    Random.MIN_VALUE)    ==    0?    random.numbers    :    0;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
35	[BUG]  [BUGGY]  int  letters  =  ch  -  start  +  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  ch  -  start  +  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  ch  -  start  +  1;	  int    letters    =    ch    -    start;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
36	[BUG]  [BUGGY]  int  letters  =  end  -  start;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  end  -  start;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  end  -  start;	  int    letters    =    ch    -    start;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
37	[BUG]  [BUGGY]  int  letters  =  start  -  ch;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  start  -  ch;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  start  -  ch;	  int    letters    =    ch    -    start;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
38	[BUG]  [BUGGY]  int  letters  =  count  -  start;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  count  -  start;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  count  -  start;	  int    letters    =    ch    -    start;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
39	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.equals(ch))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.equals(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.equals(ch))  {	  if(!letters    ||!numbers    ||    random.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
40	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||  random.equals(ch,  letters))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||  random.equals(ch,  letters))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||  random.equals(ch,  letters))  {	  if(!letters    ||!numbers    ||    random.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
41	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  end);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(0,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  end);	  char[]    buf    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
42	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  start  +  1);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(0,  start  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  start  +  1);	  char[]    buf    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
43	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  start  +  1,  end);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(0,  start  +  1,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  start  +  1,  end);	  char[]    buf    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
44	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  count);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(0,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  count);	  char[]    buf    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
45	[BUG]  [BUGGY]  int  letters  =(chars  ==  null)?  0  :  chars.numbers;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(chars  ==  null)?  0  :  chars.numbers;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(chars  ==  null)?  0  :  chars.numbers;	  int    letters    =    chars.numbers;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
46	[BUG]  [BUGGY]  int  letters  =(chars  ==  null?  0  :  chars.numbers);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(chars  ==  null?  0  :  chars.numbers);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(chars  ==  null?  0  :  chars.numbers);	  int    letters    =    chars.numbers;    	non-compiled	[CE]  	56	None	replace
47	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  start  +  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  start  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  start  +  1);	  char[]    buf    =    random.getChars(start,    start);    	non-compiled	[CE]  	63	None	replace
48	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  random.length  :  0;  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  random.length  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  random.length  :  0;	  int    letters    =(numbers    &    Random.MIN_VALUE)!=    0?    random.numbers    :    0;    	non-compiled	[CE]  	57	None	replace
49	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  chars.length  :  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  chars.length  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  chars.length  :  0;	  int    letters    =(numbers    &    Random.MIN_VALUE)!=    0?    random.numbers    :    0;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
50	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  end);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start  +  1,  end);	  char[]    buffer    =    random.getChars(ch,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  length);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start  +  1,  length);	  char[]    buffer    =    random.getChars(ch,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  0,  count);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  0,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start  +  1,  0,  count);	  char[]    buffer    =    random.getChars(ch,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  end,  count);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  end,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start  +  1,  end,  count);	  char[]    buffer    =    random.getChars(ch,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start,  end)!=  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start,  end)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch,  start,  end)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch,    start)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
55	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start  +  1)!=  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start  +  1)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch,  start  +  1)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch,    start)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
56	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  end)!=  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  end)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch,  end)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch,    start)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
57	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start,  0)!=  0)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start,  0)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch,  start,  0)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch,    start)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
58	[BUG]  [BUGGY]  int  letters  =  random.numbers  *  start;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.numbers  *  start;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  *  start;	  int    letters    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
59	[BUG]  [BUGGY]  int  letters  =  random.numbers  /  count;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.numbers  /  count;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  /  count;	  int    letters    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
60	[BUG]  [BUGGY]  int  letters  =  ch  /  random.numbers;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  ch  /  random.numbers;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  ch  /  random.numbers;	  int    letters    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
61	[BUG]  [BUGGY]  int  letters  =  chars.numbers  /  random.length;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  chars.numbers  /  random.length;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  chars.numbers  /  random.length;	  int    letters    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
62	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  start  +  1);	  char[]    buffer    =    random.getChars(start,    start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
63	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end  +  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  end  +  1);	  char[]    buffer    =    random.getChars(start,    start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
64	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(count,  start,  end  +  1);	  char[]    buffer    =    random.getChars(start,    start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
65	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!Character.isDigit(ch,  chars.length))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!Character.isDigit(ch,  chars.length))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!Character.isDigit(ch,  chars.length))  {	  if(!letters    &&!numbers    &&!Character.isDigit(ch))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
66	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&!Character.isDigit(ch))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&!Character.isDigit(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&!Character.isDigit(ch))  {	  if(!letters    &&!numbers    &&!Character.isDigit(ch))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
67	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!Character.isDigit(ch,''))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!Character.isDigit(ch,''))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!Character.isDigit(ch,''))  {	  if(!letters    &&!numbers    &&!Character.isDigit(ch))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
68	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  0))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  0))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,  0))  {	  if(!letters    &&!numbers    &&    random.equals(ch,    chars))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
69	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  new  char[]  {'',''  }  ))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  new  char[]  {'',''  }  ))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,  new  char[]  {'',''  }  ))  {	  if(!letters    &&!numbers    &&    random.equals(ch,    chars))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
70	[BUG]  [BUGGY]  int  letters  =  this.random.numbers  -  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  this.random.numbers  -  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  this.random.numbers  -  1;	  int    letters    =    this.random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
71	[BUG]  [BUGGY]  int  letters  =  this.random.numbers  -  start  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  this.random.numbers  -  start  +  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  this.random.numbers  -  start  +  1;	  int    letters    =    this.random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
72	[BUG]  [BUGGY]  int  letters  =  chars.numbers  -  start;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  chars.numbers  -  start;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  chars.numbers  -  start;	  int    letters    =    this.random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
73	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.chars.equals(ch))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.chars.equals(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.chars.equals(ch))  {	  if(!letters    &&!numbers    &&    random.chars.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
74	[BUG]  [BUGGY]  if(!numbers  &&  random.chars.equals(ch))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!numbers  &&  random.chars.equals(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!numbers  &&  random.chars.equals(ch))  {	  if(!letters    &&!numbers    &&    random.chars.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
75	[BUG]  [BUGGY]  if(!numbers  &&!letters  &&  random.chars.equals(ch))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!numbers  &&!letters  &&  random.chars.equals(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!numbers  &&!letters  &&  random.chars.equals(ch))  {	  if(!letters    &&!numbers    &&    random.chars.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
76	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.matches(ch,''))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.matches(ch,''))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.matches(ch,''))  {	  if(!letters    &&!numbers    &&    random.matches(ch,''))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
77	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,'_'))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,'_'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,'_'))  {	  if(!letters    &&!numbers    &&    random.matches(ch,''))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
78	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue());  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue());  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  new  Random(random.nullValue());	  Random    random    =    RANDOM.nullValue();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
79	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue(),  count);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue(),  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  new  Random(random.nullValue(),  count);	  Random    random    =    RANDOM.nullValue();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
80	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  ch);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  ch);	  char[]    buf    =    random.getChars(ch,    start);    	non-compiled	[CE]  	41	None	replace
81	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  0);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start,  0);	  char[]    buf    =    random.getChars(ch,    start);    	non-compiled	[CE]  	41	None	replace
82	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  0,  start);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  0,  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  0,  start);	  char[]    buf    =    random.getChars(ch,    start);    	non-compiled	[CE]  	41	None	replace
83	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  count);  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start,  count);	  char[]    buf    =    random.getChars(ch,    start);    	non-compiled	[CE]  	41	None	replace
84	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!ch.equals( "   "))  {  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||!ch.equals( "   "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!ch.equals( "   "))  {	  if(!letters    &&!numbers    &&!ch.equals(   "   "))    {    	non-compiled	[CE]  	16	None	replace
85	[BUG]  [BUGGY]  char[]  buffer  =  new  char[length  +  1];  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[length  +  1];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[length  +  1];	  char[]    buffer    =    new    char[start    +    1];    	non-compiled	[CE]  	59	None	replace
86	[BUG]  [BUGGY]  char[]  buffer  =  new  char[end  +  1];  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[end  +  1];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[end  +  1];	  char[]    buffer    =    new    char[start    +    1];    	non-compiled	[CE]  	59	None	replace
87	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(random.nextInt()))  {  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(random.nextInt()))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals(random.nextInt()))  {	  if(!letters    &&!numbers    &&!ch.equals(random))    {    	non-compiled	[CE]  	48	None	replace
88	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(random.nextBoolean()))  {  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(random.nextBoolean()))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals(random.nextBoolean()))  {	  if(!letters    &&!numbers    &&!ch.equals(random))    {    	non-compiled	[CE]  	48	None	replace
89	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  0,  chars.length))  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  0,  chars.length))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,  0,  chars.length))  {	  if(!letters    &&!numbers    &&    random.equals(ch,    chars.length))    {    	non-compiled	[CE]  	35	None	replace
90	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  start,  chars.length))  {  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  start,  chars.length))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,  start,  chars.length))  {	  if(!letters    &&!numbers    &&    random.equals(ch,    chars.length))    {    	non-compiled	[CE]  	35	None	replace
91	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.equals(ch,  chars.length))  {  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.equals(ch,  chars.length))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.equals(ch,  chars.length))  {	  if(!letters    &&!numbers    &&    random.equals(ch,    chars.length))    {    	non-compiled	[CE]  	35	None	replace
92	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  end))  {  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  end))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,  end))  {	  if(!letters    &&!numbers    &&    random.equals(ch,    chars.length))    {    	non-compiled	[CE]  	35	None	replace
93	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.chars.length  ==  0)  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.chars.length  ==  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.chars.length  ==  0)  {	  if(!letters    &&!numbers    &&    random.equals(chars))    {    	non-compiled	[CE]  	62	None	replace
94	[BUG]  [BUGGY]  int  letters  =  chars.length  -  1;  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  chars.length  -  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  chars.length  -  1;	  int    letters    =    chars.length;    	non-compiled	[CE]  	26	None	replace
95	[BUG]  [BUGGY]  int  letters  =(chars  ==  null)?  0  :  chars.length;  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(chars  ==  null)?  0  :  chars.length;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(chars  ==  null)?  0  :  chars.length;	  int    letters    =    chars.length;    	non-compiled	[CE]  	26	None	replace
96	[BUG]  [BUGGY]  chars  =  chars.length;  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  chars  =  chars.length;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	chars  =  chars.length;	  int    letters    =    chars.length;    	non-compiled	[CE]  	26	None	replace
97	[BUG]  [BUGGY]  int  letters  =  chars.length  +  1;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  chars.length  +  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  chars.length  +  1;	  int    letters    =    chars.length;    	non-compiled	[CE]  	26	None	replace
98	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.getChars(ch)  ==  0)  {  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.getChars(ch)  ==  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.getChars(ch)  ==  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch)    ==    0)    {    	non-compiled	[CE]  	36	None	replace
99	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  0)  ==  0)  {  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  0)  ==  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch,  0)  ==  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch)    ==    0)    {    	non-compiled	[CE]  	36	None	replace
100	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  count);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  count);	  char[]    buffer    =    random.getChars(ch,    start,    end,    letters);    	non-compiled	[CE]  	8	None	replace
101	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters,  numbers);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters,  numbers);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  letters,  numbers);	  char[]    buffer    =    random.getChars(ch,    start,    end,    letters);    	non-compiled	[CE]  	8	None	replace
102	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters,  count);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  letters,  count);	  char[]    buffer    =    random.getChars(ch,    start,    end,    letters);    	non-compiled	[CE]  	8	None	replace
103	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  numbers);  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  numbers);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  numbers);	  char[]    buffer    =    random.getChars(ch,    start,    end,    letters);    	non-compiled	[CE]  	8	None	replace
104	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  start);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1,  start);	  char[]    buffer    =    random.getChars(start,    start    +    1,    end);    	non-compiled	[CE]  	12	None	replace
105	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  end);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1,  end);	  char[]    buffer    =    random.getChars(start,    start    +    1,    end);    	non-compiled	[CE]  	12	None	replace
106	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start  +  1,  end);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start  +  1,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(count,  start  +  1,  end);	  char[]    buffer    =    random.getChars(start,    start    +    1,    end);    	non-compiled	[CE]  	12	None	replace
107	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  count  +  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  count  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1,  count  +  1);	  char[]    buffer    =    random.getChars(start,    end    +    1,    count);    	non-compiled	[CE]  	11	None	replace
108	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start,  end  +  1);	  char[]    buffer    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  	66	None	replace
109	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end  -  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end  -  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start,  end  -  1);	  char[]    buffer    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  	66	None	replace
110	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start,  1);	  char[]    buffer    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  	66	None	replace
111	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start  +  1);	  char[]    buffer    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  	43	None	replace
112	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start  +  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(count,  start  +  1);	  char[]    buffer    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  	43	None	replace
113	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  ch);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  ch);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  	49	None	replace
114	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  ch);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  0,  ch);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  	49	None	replace
115	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  0);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  	49	None	replace
116	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!chars.equals(ch))  {  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||!chars.equals(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!chars.equals(ch))  {	  if(!letters    &&!numbers    &&!chars.equals(ch))    {    	non-compiled	[CE]  	47	None	replace
117	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!chars.equals(ch,  chars.length))  {  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!chars.equals(ch,  chars.length))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!chars.equals(ch,  chars.length))  {	  if(!letters    &&!numbers    &&!chars.equals(ch))    {    	non-compiled	[CE]  	47	None	replace
118	[BUG]  [BUGGY]  Random  random  =  random.nullValue()  *  1;  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  Random  random  =  random.nullValue()  *  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  random.nullValue()  *  1;	  Random    random    =    random.nullValue()    -    1;    	non-compiled	[CE]  	5	None	replace
119	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  end,  letters);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  end,  letters);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start,  end,  letters);	  char[]    buf    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	39	None	replace
120	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  0,  start,  end);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  0,  start,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  0,  start,  end);	  char[]    buf    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	39	None	replace
121	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  0,  end);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  0,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  0,  end);	  char[]    buf    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	39	None	replace
122	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  end  +  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  end  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start,  end  +  1);	  char[]    buf    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	39	None	replace
123	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!ch.equals( "- "))  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||!ch.equals( "- "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!ch.equals( "- "))  {	  if(!letters    &&!numbers    &&!ch.equals(   "-   "))    {    	non-compiled	[CE]  	18	None	replace
124	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( ".0 "))  {  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( ".0 "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals( ".0 "))  {	  if(!letters    &&!numbers    &&!ch.equals(   "-   "))    {    	non-compiled	[CE]  	18	None	replace
125	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  length);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  length);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1,  length);	  char[]    buffer    =    random.getChars(start,    start    +    1,    length);    	non-compiled	[CE]  	53	None	replace
126	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  length);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  length);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1,  length);	  char[]    buffer    =    random.getChars(start,    start    +    1,    length);    	non-compiled	[CE]  	53	None	replace
127	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  count);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  count);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  	23	None	replace
128	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  	23	None	replace
129	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  ch);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  	23	None	replace
130	[BUG]  [BUGGY]  int  letters  =  ch  -  random.numbers;  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  ch  -  random.numbers;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  ch  -  random.numbers;	  int    letters    =    numbers    -    random.numbers;    	non-compiled	[CE]  	72	None	replace
131	[BUG]  [BUGGY]  int  letters  =  random.numbers  -  numbers;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.numbers  -  numbers;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  -  numbers;	  int    letters    =    numbers    -    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
132	[BUG]  [BUGGY]  int  letters  =  numbers  -  random.length;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  numbers  -  random.length;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  numbers  -  random.length;	  int    letters    =    numbers    -    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
133	[BUG]  [BUGGY]  int  letters  =  count  -  random.numbers;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  count  -  random.numbers;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  count  -  random.numbers;	  int    letters    =    numbers    -    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
134	[BUG]  [BUGGY]  if(!numbers  &&  random.getChars(start)!=  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!numbers  &&  random.getChars(start)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!numbers  &&  random.getChars(start)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(start)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
135	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.getChars(start)!=  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.getChars(start)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.getChars(start)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(start)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
136	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  end  +  1,  count);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  end  +  1,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  end  +  1,  count);	  char[]    buffer    =    random.getChars(0,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
137	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!ch.equals( "0 "))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||!ch.equals( "0 "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!ch.equals( "0 "))  {	  if(!letters    &&!numbers    &&!ch.equals(   "0   "))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
138	[BUG]  [BUGGY]  int  letters  =  chars.numbers  -  start  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  chars.numbers  -  start  +  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  chars.numbers  -  start  +  1;	  int    letters    =    random.numbers    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
139	[BUG]  [BUGGY]  int  letters  =  random.numbers  /  start  +  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.numbers  /  start  +  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  /  start  +  1;	  int    letters    =    random.numbers    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
140	[BUG]  [BUGGY]  int  letters  =  random.numbers  -  start  +  2;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.numbers  -  start  +  2;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  -  start  +  2;	  int    letters    =    random.numbers    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
141	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.equals(ch,''))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.equals(ch,''))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.equals(ch,''))  {	  if(!letters    &&!numbers    &&    random.equals(ch,''))    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
142	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,'_'))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,'_'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,'_'))  {	  if(!letters    &&!numbers    &&    random.equals(ch,''))    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
143	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,'0'))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,'0'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,'0'))  {	  if(!letters    &&!numbers    &&    random.equals(ch,''))    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
144	[BUG]  [BUGGY]  int  letters  =  random.length  -  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.length  -  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.length  -  1;	  int    letters    =    random.length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
145	[BUG]  [BUGGY]  chars  =  random.length;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  chars  =  random.length;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	chars  =  random.length;	  int    letters    =    random.length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
146	[BUG]  [BUGGY]  int  letters  =  ch.length;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  ch.length;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  ch.length;	  int    letters    =    random.length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
147	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  count  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  count  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  count  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
148	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  letters  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
149	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end  +  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  end  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
150	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  end  -  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  end  -  1);	  char[]    buf    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
151	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start  -  start);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  start  -  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start  -  start);	  char[]    buf    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
152	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  end  -  start);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(0,  end  -  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  end  -  start);	  char[]    buf    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
153	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  end  -  start  +  1);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  end  -  start  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  end  -  start  +  1);	  char[]    buf    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
154	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  0,  0))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  0,  0))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  0,  0))  {	  if(!letters    &&!numbers    &&    random.matches(ch,    '0'))    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
155	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  0,  '0'))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  0,  '0'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  0,  '0'))  {	  if(!letters    &&!numbers    &&    random.matches(ch,    '0'))    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
156	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.matches(ch,  '0'))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.matches(ch,  '0'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.matches(ch,  '0'))  {	  if(!letters    &&!numbers    &&    random.matches(ch,    '0'))    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
157	[BUG]  [BUGGY]  char  letters  =  ch;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char  letters  =  ch;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char  letters  =  ch;	  int    letters    =    ch;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
158	[BUG]  [BUGGY]  int  letters  =  0;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  0;	  int    letters    =    ch;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
159	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||  random.equals(Character.toLowerCase(ch)))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||  random.equals(Character.toLowerCase(ch)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||  random.equals(Character.toLowerCase(ch)))  {	  if(!letters    &&!numbers    &&    random.equals(Character.toLowerCase(ch)))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
160	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(Character.toUpperCase(ch)))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(Character.toUpperCase(ch)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(Character.toUpperCase(ch)))  {	  if(!letters    &&!numbers    &&    random.equals(Character.toLowerCase(ch)))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
161	[BUG]  [BUGGY]  if(!numbers  &&  random.equals(Character.toLowerCase(ch)))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!numbers  &&  random.equals(Character.toLowerCase(ch)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!numbers  &&  random.equals(Character.toLowerCase(ch)))  {	  if(!letters    &&!numbers    &&    random.equals(Character.toLowerCase(ch)))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
162	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  letters);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end,  letters);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
163	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end,  start);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end,  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  end,  start);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
164	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  count);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end,  count);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
165	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  buffer,  start,  end);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  buffer,  start,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  buffer,  start,  end);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
166	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end,  start);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end,  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  end,  start);	  char[]    buffer    =    random.getChars(0,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
167	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end,  count);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  start,  end,  count);	  char[]    buffer    =    random.getChars(0,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
168	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count,  end);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  count,  end);	  char[]    buffer    =    random.getChars(0,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
169	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end,  letters);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  start,  end,  letters);	  char[]    buffer    =    random.getChars(0,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
170	[BUG]  [BUGGY]  int  letters  =(chars  ==  null)?  0  :  chars;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(chars  ==  null)?  0  :  chars;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(chars  ==  null)?  0  :  chars;	  int    letters    =    chars;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
171	[BUG]  [BUGGY]  int  letters  =  random.chars;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.chars;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.chars;	  int    letters    =    chars;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
172	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  *  3];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[count  *  3];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[count  *  3];	  char[]    buffer    =    new    char[count    +    3];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
173	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.matches(ch,  0))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.matches(ch,  0))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.matches(ch,  0))  {	  if(!letters    &&!numbers    &&    random.matches(ch,    0))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
174	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  0,  count))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  0,  count))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  0,  count))  {	  if(!letters    &&!numbers    &&    random.matches(ch,    0))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
175	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  1))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  1))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  1))  {	  if(!letters    &&!numbers    &&    random.matches(ch,    0))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
176	[BUG]  [BUGGY]  if(!letters  &&  random.getChars(ch)!=  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&  random.getChars(ch)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&  random.getChars(ch)!=  0)  {	  if(!letters    ||!numbers    &&    random.getChars(ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
177	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  start);	  char[]    buffer    =    random.getChars(0,    0,    end);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
178	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  count);	  char[]    buffer    =    random.getChars(0,    0,    end);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
179	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  end);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  end);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
180	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
181	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  count);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  count);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
182	[BUG]  [BUGGY]  int  letters  =  chars.numbers  -  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  chars.numbers  -  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  chars.numbers  -  1;	  int    letters    =    random.numbers    -    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
183	[BUG]  [BUGGY]  int  letters  =  random.numbers  /  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.numbers  /  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  /  1;	  int    letters    =    random.numbers    -    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
184	[BUG]  [BUGGY]  Random  random  =  random.nullValue(ch);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  Random  random  =  random.nullValue(ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  random.nullValue(ch);	  Random    random    =    random.nullValue(0);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
185	[BUG]  [BUGGY]  Random  random  =  random.nullValue(1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  Random  random  =  random.nullValue(1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  random.nullValue(1);	  Random    random    =    random.nullValue(0);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
186	[BUG]  [BUGGY]  chars  =  random.chars;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  chars  =  random.chars;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	chars  =  random.chars;	  chars    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
187	[BUG]  [BUGGY]  chars  =  random.getChars(start,  end);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  chars  =  random.getChars(start,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	chars  =  random.getChars(start,  end);	  chars    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
188	[BUG]  [BUGGY]  chars  =  random.numbers  +  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  chars  =  random.numbers  +  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	chars  =  random.numbers  +  1;	  chars    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
189	[BUG]  [BUGGY]  chars  =  random.getChars(ch,  start,  end);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  chars  =  random.getChars(ch,  start,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	chars  =  random.getChars(ch,  start,  end);	  chars    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
190	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  count);	  char[]    buffer    =    random.getChars(start,    end,    start);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
191	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  end);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  0,  end);	  char[]    buffer    =    random.getChars(ch,    0,    end);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
192	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count);	  char[]    buffer    =    random.getChars(ch,    0,    end);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
193	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  start,  chars))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  start,  chars))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  start,  chars))  {	  if(!letters    &&!numbers    &&    random.matches(ch,    chars))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
194	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.matches(ch,  chars))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.matches(ch,  chars))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.matches(ch,  chars))  {	  if(!letters    &&!numbers    &&    random.matches(ch,    chars))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
195	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  start))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  start))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  start))  {	  if(!letters    &&!numbers    &&    random.matches(ch,    chars))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
196	[BUG]  [BUGGY]  Random  random  =  random.nullValue()  /  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  Random  random  =  random.nullValue()  /  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  random.nullValue()  /  1;	  Random    random    =    random.nullValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
197	[BUG]  [BUGGY]  Random  random  =  random.nullValue(),  count  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  Random  random  =  random.nullValue(),  count  +  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  random.nullValue(),  count  +  1;	  Random    random    =    random.nullValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
198	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  start);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  start);	  char[]    buffer    =    random.getChars(start,    start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
199	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  0,  ch);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  0,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  0,  ch);	  char[]    buffer    =    random.getChars(start,    start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
200	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end,  ch);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(count,  start,  end,  ch);	  char[]    buffer    =    random.getChars(start,    start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
201	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start,  ch);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  start,  ch);	  char[]    buffer    =    random.getChars(start,    start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
202	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  0);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
203	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end,  0);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  start,  end,  0);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
204	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end,  0);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  end,  0);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
205	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end,  0);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start,  end,  0);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
206	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  chars.length);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  chars.length);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1,  chars.length);	  char[]    buffer    =    random.getChars(ch,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
207	[BUG]  [BUGGY]  int  letters  =  random.length  -  start;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.length  -  start;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.length  -  start;	  int    letters    =    ch    -    start;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
208	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
209	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  -  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end  -  1);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
210	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  chars);	  char[]    buffer    =    random.getChars(start,    end,    start);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
211	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars.length);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars.length);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  chars.length);	  char[]    buffer    =    random.getChars(start,    end,    start);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
212	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.chars[ch].equals(chars))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.chars[ch].equals(chars))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.chars[ch].equals(chars))  {	  if(!letters    &&!numbers    &&    chars[ch].equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
213	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.chars.contains(ch))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.chars.contains(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.chars.contains(ch))  {	  if(!letters    &&!numbers    &&    random.chars.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
214	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.chars!=  null  &&  random.chars.equals(ch))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.chars!=  null  &&  random.chars.equals(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.chars!=  null  &&  random.chars.equals(ch))  {	  if(!letters    &&!numbers    &&    random.chars.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
215	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.chars  =='')  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.chars  =='')  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.chars  =='')  {	  if(!letters    &&!numbers    &&    random.chars.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
216	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  start  -  end);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  start  -  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  start  -  end);	  char[]    buf    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
217	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  end  -  start-1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  end  -  start-1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  end  -  start-1);	  char[]    buf    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
218	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  end,  ch);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  end,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  end,  ch);	  char[]    buf    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
219	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  start,  end,  0);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  start,  end,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  start,  end,  0);	  char[]    buf    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
220	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  end,  0);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  end,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start,  end,  0);	  char[]    buf    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
221	[BUG]  [BUGGY]  chars  =  random.getChars(start,  start);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  chars  =  random.getChars(start,  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	chars  =  random.getChars(start,  start);	  chars    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
222	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end  -  start);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end  -  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start,  end  -  start);	  char[]    buffer    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
223	[BUG]  [BUGGY]  Random  random  =  random.nullValue(start);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  Random  random  =  random.nullValue(start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  random.nullValue(start);	  Random    random    =    random.nullValue(0);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
224	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start)  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start)  ==  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch,  start)  ==  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch,    start)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
225	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start)>  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start)>  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch,  start)>  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch,    start)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
226	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start)  >=  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start)  >=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch,  start)  >=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch,    start)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
227	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)  ==  0?  chars.length  :  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)  ==  0?  chars.length  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MAX_VALUE)  ==  0?  chars.length  :  0;	  int    letters    =(numbers    &    Random.MAX_VALUE)!=    0?    random.numbers    :    0;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
228	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  ch);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1,  ch);	  char[]    buffer    =    random.getChars(start,    end    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
229	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  chars.length);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  chars.length);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1,  chars.length);	  char[]    buffer    =    random.getChars(start,    end    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
230	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  count  -  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  count  -  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1,  count  -  1);	  char[]    buffer    =    random.getChars(0,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
231	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(Long.MAX_VALUE))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(Long.MAX_VALUE))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals(Long.MAX_VALUE))  {	  if(!letters    &&!numbers    &&!ch.equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
232	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(apache.random))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(apache.random))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals(apache.random))  {	  if(!letters    &&!numbers    &&!ch.equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
233	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(PARAM_STRING))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(PARAM_STRING))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals(PARAM_STRING))  {	  if(!letters    &&!numbers    &&!ch.equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
234	[BUG]  [BUGGY]  char  letters  =  ch.numbers;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char  letters  =  ch.numbers;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char  letters  =  ch.numbers;	  int    letters    =    ch.numbers;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
235	[BUG]  [BUGGY]  int  letters  =(chars!=  null)?  0  :  chars.numbers;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(chars!=  null)?  0  :  chars.numbers;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(chars!=  null)?  0  :  chars.numbers;	  int    letters    =    chars.numbers;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
236	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,'+'))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,'+'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,'+'))  {	  if(!letters    &&!numbers    &&    random.equals(ch,''))    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
237	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,'-'))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,'-'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,'-'))  {	  if(!letters    &&!numbers    &&    random.equals(ch,''))    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
238	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!chars.containsKey(ch))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!chars.containsKey(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!chars.containsKey(ch))  {	  if(!letters    &&!numbers    &&!chars.contains(ch))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
239	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!chars.contains(ch,''))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!chars.contains(ch,''))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!chars.contains(ch,''))  {	  if(!letters    &&!numbers    &&!chars.contains(ch))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
240	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  start,  end  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  start,  end  +  1);	  char[]    buf    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
241	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  start,  end  -  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  start,  end  -  1);	  char[]    buf    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
242	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  start,  end,  ch);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(start,  start,  end,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  start,  end,  ch);	  char[]    buf    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
243	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(apache.random.nextInt(start)))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(apache.random.nextInt(start)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!ch.equals(apache.random.nextInt(start)))  {	  if(!letters    ||!numbers    ||!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
244	[BUG]  [BUGGY]  Random  random  =  randomUtils.nullValue();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  Random  random  =  randomUtils.nullValue();  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  randomUtils.nullValue();	  Random    random    =    RANDOM.nullValue();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
245	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!Character.isLetter(ch))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!Character.isLetter(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!Character.isLetter(ch))  {	  if(!letters    &&!numbers    &&!chars.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
246	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  start  -  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(0,  start  -  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  start  -  1);	  char[]    buf    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
247	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end,  ch);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  start,  end,  ch);	  char[]    buffer    =    random.getChars(0,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
248	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  start,  end  +  1);	  char[]    buffer    =    random.getChars(0,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
249	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end  -  start);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end  -  start);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  start,  end  -  start);	  char[]    buffer    =    random.getChars(0,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
250	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.indexOf(ch)  >=  -1)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.indexOf(ch)  >=  -1)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.indexOf(ch)  >=  -1)  {	  if(!letters    &&!numbers    &&    random.equals(chars))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
251	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.charAt(count  -  1)!='')  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.charAt(count  -  1)!='')  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.charAt(count  -  1)!='')  {	  if(!letters    &&!numbers    &&    random.equals(chars))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
252	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.indexOf(ch)  ==  -1)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.indexOf(ch)  ==  -1)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.indexOf(ch)  ==  -1)  {	  if(!letters    &&!numbers    &&    random.equals(chars))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
253	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  0);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch,  0);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
254	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  1);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
255	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  0,  count);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  0,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  0,  count);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
256	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start,  0);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  start,  0);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
257	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  end  -  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  end  -  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1,  end  -  1);	  char[]    buffer    =    random.getChars(start,    start    +    1,    end);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
258	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  end,  ch);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  end,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1,  end,  ch);	  char[]    buffer    =    random.getChars(start,    start    +    1,    end);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
259	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  -  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end  -  1);	  char[]    buffer    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
260	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start)  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start)  ==  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(start)  ==  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
261	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch)  >=  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch)  >=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch)  >=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
262	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer  +  1];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[buffer  +  1];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[buffer  +  1];	  char[]    buffer    =    new    char[start    +    1];    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
263	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  chars.equals(random))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  chars.equals(random))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  chars.equals(random))  {	  if(!letters    &&!numbers    &&    chars.equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
264	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch))  ||(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch)))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch))  ||(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch))  ||(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch)))  {	  if(!letters    &&!numbers    &&    random.equals(Character.toLowerCase(ch)))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
265	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch))  ||(!letters  &&!numbers  &&  random.equals(Character.toUpperCase(ch)))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch))  ||(!letters  &&!numbers  &&  random.equals(Character.toUpperCase(ch)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch))  ||(!letters  &&!numbers  &&  random.equals(Character.toUpperCase(ch)))  {	  if(!letters    &&!numbers    &&    random.equals(Character.toLowerCase(ch)))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
266	[BUG]  [BUGGY]  if(!letters  &&!numbers  ||  random.equals(ch))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  ||  random.equals(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  ||  random.equals(ch))  {	  if(!letters    ||!numbers    ||    random.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
267	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( ". "))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( ". "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals( ". "))  {	  if(!letters    &&!numbers    &&!ch.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
268	[BUG]  [BUGGY]  int  letters  =  this.random.numbers  /  start;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  this.random.numbers  /  start;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  this.random.numbers  /  start;	  int    letters    =    this.random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
269	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  0);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end,  0);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
270	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  buffer,  end);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  buffer,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  0,  buffer,  end);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
271	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  ch  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  ch  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  ch  +  1);	  char[]    buffer    =    random.getChars(start,    start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
272	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start,  end)  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start,  end)  ==  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(start,  end)  ==  0)  {	  if(!letters    &&!numbers    &&    random.getChars(start,    ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
273	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start,  end)  >=  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start,  end)  >=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(start,  end)  >=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(start,    ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
274	[BUG]  [BUGGY]  int  letters  =  random.numbers  /  end;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.numbers  /  end;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  /  end;	  int    letters    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
275	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!Character.isJavaIdentifierPart(ch))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!Character.isJavaIdentifierPart(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!Character.isJavaIdentifierPart(ch))  {	  if(!letters    &&!numbers    &&!Character.isDigit(ch))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
276	[BUG]  [BUGGY]  char[]  buffer  =  new  char[start  +  2];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[start  +  2];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[start  +  2];	  char[]    buffer    =    new    char[count    +    2];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
277	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( "0x "))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( "0x "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals( "0x "))  {	  if(!letters    &&!numbers    &&!ch.equals(   "0   "))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
278	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  1);	  char[]    buffer    =    random.getChars(ch,    start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
279	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  4);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  4);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  4);	  char[]    buffer    =    random.getChars(ch,    start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
280	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.equals(ch,  chars))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  &&  random.equals(ch,  chars))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.equals(ch,  chars))  {	  if(!letters    &&!numbers    &&    random.equals(ch,    chars))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
281	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  ch,  0);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  ch,  0);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  ch,  0);	  char[]    buffer    =    random.getChars(start,    start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
282	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  ch);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  ch);	  char[]    buffer    =    random.getChars(start,    start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
283	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer  *  1];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  new  char[buffer  *  1];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[buffer  *  1];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
284	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  -  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  -  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start  -  1);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
285	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  start))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  start))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,  start))  {	  if(!letters    &&!numbers    &&    random.equals(ch,    chars.length))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
286	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(chars,  0,  random.length))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(chars,  0,  random.length))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(chars,  0,  random.length))  {	  if(!letters    &&!numbers    &&    random.equals(ch,    chars.length))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
287	[BUG]  [BUGGY]  int  letters  =  new  char[count];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  new  char[count];  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  new  char[count];	  int    letters    =    chars;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
288	[BUG]  [BUGGY]  int  letters  =  random.numbers  -  1  +  start;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.numbers  -  1  +  start;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  -  1  +  start;	  int    letters    =    random.numbers    -    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
289	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  start  ==  -1)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  start  ==  -1)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  start  ==  -1)  {	  if(!letters    &&!numbers    &&    random.matches(ch,    '0'))    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
290	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  start  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  start  ==  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  start  ==  0)  {	  if(!letters    &&!numbers    &&    random.matches(ch,    '0'))    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
291	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,'+'))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,'+'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,'+'))  {	  if(!letters    &&!numbers    &&    random.matches(ch,''))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
292	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,'-'))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,'-'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,'-'))  {	  if(!letters    &&!numbers    &&    random.matches(ch,''))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
293	[BUG]  [BUGGY]  int  letters  =  numbers  -  start;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  numbers  -  start;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  numbers  -  start;	  int    letters    =    numbers    -    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
294	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  end,  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  end,  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start,  end,  1);	  char[]    buf    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
295	[BUG]  [BUGGY]  chars  =  random.getChars(ch);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  chars  =  random.getChars(ch);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	chars  =  random.getChars(ch);	  chars    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
296	[BUG]  [BUGGY]  int  letters  =  random.chars.length;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.chars.length;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.chars.length;	  int    letters    =    chars.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
297	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( "null "))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( "null "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals( "null "))  {	  if(!letters    &&!numbers    &&!ch.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
298	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  4);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  4);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  4);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
299	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( "-1 "))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( "-1 "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals( "-1 "))  {	  if(!letters    &&!numbers    &&!ch.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
300	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start  +  1,  end);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start  +  1,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start  +  1,  end);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
301	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end  +  1);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
302	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  letters  :  0;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  letters  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  letters  :  0;	  int    letters    =(numbers    &    Random.MIN_VALUE)!=    0?    random.numbers    :    0;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
303	[BUG]  [BUGGY]  int  letters  =(count  &  Random.MIN_VALUE)!=  0?  random.numbers  :  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(count  &  Random.MIN_VALUE)!=  0?  random.numbers  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(count  &  Random.MIN_VALUE)!=  0?  random.numbers  :  0;	  int    letters    =(numbers    &    Random.MIN_VALUE)!=    0?    random.numbers    :    0;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
304	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0  +  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  0  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
305	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start  +  1,  1);	  char[]    buffer    =    random.getChars(ch,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
306	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(random.nextDouble()))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(random.nextDouble()))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals(random.nextDouble()))  {	  if(!letters    &&!numbers    &&!ch.equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
307	[BUG]  [BUGGY]  if(!letters  &&!numbers  ||!ch.equals(ch))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  ||!ch.equals(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  ||!ch.equals(ch))  {	  if(!letters    ||!numbers    ||!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
308	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(alloc))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(alloc))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!ch.equals(alloc))  {	  if(!letters    ||!numbers    ||!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
309	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  new  String(buffer,  0,  chars.length)))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  new  String(buffer,  0,  chars.length)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,  new  String(buffer,  0,  chars.length)))  {	  if(!letters    &&!numbers    &&    random.equals(ch,    chars.length))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
310	[BUG]  [BUGGY]  int  letters  =(numbers  &&!numbers)?  ch  :  0;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &&!numbers)?  ch  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &&!numbers)?  ch  :  0;	  int    letters    =    ch;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
311	[BUG]  [BUGGY]  int  letters  =(numbers  &&!numbers)?  0  :  ch;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &&!numbers)?  0  :  ch;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &&!numbers)?  0  :  ch;	  int    letters    =    ch;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
312	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  chars,  letters);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  chars,  letters);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  chars,  letters);	  char[]    buffer    =    random.getChars(ch,    start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
313	[BUG]  [BUGGY]  int  letters  =  this.random.numbers  -  1,  end;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  this.random.numbers  -  1,  end;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  this.random.numbers  -  1,  end;	  int    letters    =    this.random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
314	[BUG]  [BUGGY]  int  letters  =  random.numbers  /  chars.length;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  random.numbers  /  chars.length;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  /  chars.length;	  int    letters    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
315	[BUG]  [BUGGY]  int  letters  =  numbers  /  random.numbers;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  numbers  /  random.numbers;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  numbers  /  random.numbers;	  int    letters    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
316	[BUG]  [BUGGY]  int  letters  =  numbers?  random.length  :  0;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  numbers?  random.length  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  numbers?  random.length  :  0;	  int    letters    =    random.length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
317	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.numbers  :  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.numbers  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.numbers  :  0;	  int    letters    =(numbers    &    Random.MAX_VALUE)!=    0?    random.numbers    :    0;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
318	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)!=  0?  Integer.MAX_VALUE  :  0;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)!=  0?  Integer.MAX_VALUE  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MAX_VALUE)!=  0?  Integer.MAX_VALUE  :  0;	  int    letters    =(numbers    &    Random.MAX_VALUE)!=    0?    random.numbers    :    0;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
319	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start  +  1)!=  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start  +  1)!=  0)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(start  +  1)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(start)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
320	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!random.equals(Character.toLowerCase(ch)))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!random.equals(Character.toLowerCase(ch)))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!random.equals(Character.toLowerCase(ch)))  {	  if(!letters    &&!numbers    &&    random.equals(Character.toLowerCase(ch)))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
321	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  letters  :  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  letters  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  letters  :  0;	  int    letters    =(numbers    &    Random.MIN_VALUE)    ==    0?    random.numbers    :    0;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
322	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  ch.equals(random))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  ch.equals(random))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  ch.equals(random))  {	  if(!letters    &&!numbers    &&    random.equals(chars))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
323	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.charAt(start)  <  charAt(end))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.charAt(start)  <  charAt(end))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.charAt(start)  <  charAt(end))  {	  if(!letters    &&!numbers    &&    random.equals(chars))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
324	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start,  1);	  char[]    buf    =    random.getChars(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
325	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  1);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  1);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
326	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  start  +  1,  count);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(0,  start  +  1,  count);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  start  +  1,  count);	  char[]    buf    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
327	[BUG]  [BUGGY]  int  letters  =  numbers  -  random.numbers  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  numbers  -  random.numbers  +  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  numbers  -  random.numbers  +  1;	  int    letters    =    random.numbers    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
328	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!Character.isDigit(ch,  '-'))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!Character.isDigit(ch,  '-'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!Character.isDigit(ch,  '-'))  {	  if(!letters    &&!numbers    &&!Character.isDigit(ch))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
329	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  end  <  =  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  end  <  =  Integer.MAX_VALUE)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  end  <  =  Integer.MAX_VALUE)  {	  if(!letters    &&!numbers    &&    random.matches(ch,    '0'))    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
330	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  start  <  =  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  start  <  =  Integer.MAX_VALUE)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  start  <  =  Integer.MAX_VALUE)  {	  if(!letters    &&!numbers    &&    random.matches(ch,    '0'))    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
331	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  end  <  =  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  end  <  =  Integer.MIN_VALUE)  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  '0')&&  end  <  =  Integer.MIN_VALUE)  {	  if(!letters    &&!numbers    &&    random.matches(ch,    '0'))    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
332	[BUG]  [BUGGY]  int  letters  =  letters  -  random.numbers;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  letters  -  random.numbers;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  letters  -  random.numbers;	  int    letters    =    numbers    -    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
333	[BUG]  [BUGGY]  int  letters  =  numbers  -  random.numbers  -  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =  numbers  -  random.numbers  -  1;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  numbers  -  random.numbers  -  1;	  int    letters    =    numbers    -    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
334	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,'z'))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,'z'))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,'z'))  {	  if(!letters    &&!numbers    &&    random.matches(ch,''))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
335	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  start,  end);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buf  =  random.getChars(0,  start,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  start,  end);	  char[]    buf    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
336	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  0,  chars.length))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  0,  chars.length))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  0,  chars.length))  {	  if(!letters    &&!numbers    &&    random.matches(ch,    chars))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
337	[BUG]  [BUGGY]  int  letters  =(numbers  &  RandomStringUtils.MIN_VALUE)!=  0?  ch.numbers  :  0;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  RandomStringUtils.MIN_VALUE)!=  0?  ch.numbers  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  RandomStringUtils.MIN_VALUE)!=  0?  ch.numbers  :  0;	  int    letters    =    ch.numbers;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
338	[BUG]  [BUGGY]  int  letters  =(numbers  &  RandomStringUtils.MAX_VALUE)!=  0?  ch.numbers  :  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  int  letters  =(numbers  &  RandomStringUtils.MAX_VALUE)!=  0?  ch.numbers  :  0;  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  RandomStringUtils.MAX_VALUE)!=  0?  ch.numbers  :  0;	  int    letters    =    ch.numbers;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
339	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  chars[ch].equals( "null "))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  chars[ch].equals( "null "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  chars[ch].equals( "null "))  {	  if(!letters    &&!numbers    &&    chars[ch].equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
340	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  chars[ch].equals( " "))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  chars[ch].equals( " "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  chars[ch].equals( " "))  {	  if(!letters    &&!numbers    &&    chars[ch].equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
341	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  chars[ch].equals(random.nextElement()))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  chars[ch].equals(random.nextElement()))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  chars[ch].equals(random.nextElement()))  {	  if(!letters    &&!numbers    &&    chars[ch].equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
342	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start  +  1,  end);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start  +  1,  end);  [BUGGY]      if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  start  +  1,  end);	  char[]    buffer    =    random.getChars(0,    0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
343	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( ",0 "))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( ",0 "))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals( ",0 "))  {	  if(!letters    &&!numbers    &&!ch.equals(   "0   "))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
344	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(random.nextDouble()))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(random.nextDouble()))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  chars.equals(random.nextDouble()))  {	  if(!letters    &&!numbers    &&    chars.equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
345	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(random.nextElement()))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(random.nextElement()))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  chars.equals(random.nextElement()))  {	  if(!letters    &&!numbers    &&    chars.equals(random))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
346	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!chars.contains(ch)||!Character.isUpperCase(ch))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {      [BUGGY]  if(!letters  &&!numbers  &&!chars.contains(ch)||!Character.isUpperCase(ch))  {  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!chars.contains(ch)||!Character.isUpperCase(ch))  {	  if(!letters    &&!numbers    &&!chars.contains(ch))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
