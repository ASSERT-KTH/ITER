bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  +  2];  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  new  char[count  +  2];  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[count  +  2];	      char[]    buffer    =    new    char[count    +    1];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  *  1];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  new  char[count  *  1];  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[count  *  1];	      char[]    buffer    =    new    char[count    +    1];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  +  3];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  new  char[count  +  3];  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[count  +  3];	      char[]    buffer    =    new    char[count    +    1];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  Random  random  =  random.nullValue()  +  1;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  Random  random  =  random.nullValue()  +  1;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  random.nullValue()  +  1;	      Random    random    =    random.nullValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  Random  random  =  random.nullValue()  -  1;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  Random  random  =  random.nullValue()  -  1;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  random.nullValue()  -  1;	      Random    random    =    random.nullValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  Random  random  =  RANDOM.nullValue();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  Random  random  =  RANDOM.nullValue();  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  RANDOM.nullValue();	      Random    random    =    random.nullValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end  +  1);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  letters);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  end);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  count);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  count);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1,  count);	      char[]    buffer    =    random.getChars(start,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
12	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  end);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  end);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1,  end);	      char[]    buffer    =    random.getChars(start,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
13	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  count);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  count);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start  +  1,  count);	      char[]    buffer    =    random.getChars(start,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
14	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  count);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  count);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1,  count);	      char[]    buffer    =    random.getChars(start,    start    +    1,    count);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(ch))  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  ||!numbers  ||!ch.equals(ch))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||!ch.equals(ch))  {	  if(!letters    &&!numbers    &&!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( " "))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( " "))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals( " "))  {	  if(!letters    &&!numbers    &&!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
17	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( "0 "))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( "0 "))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals( "0 "))  {	  if(!letters    &&!numbers    &&!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
18	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&!ch.equals( "- "))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals( "- "))  {	  if(!letters    &&!numbers    &&!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  int  letters  =  random.numbers  -  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  random.numbers  -  1;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  -  1;	      int    letters    =    random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  int  letters  =  random.numbers  -  start  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  random.numbers  -  start  +  1;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  -  start  +  1;	      int    letters    =    random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  int  letters  =  ch  -  start;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  ch  -  start;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  ch  -  start;	      int    letters    =    random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  int  letters  =  random.numbers  /  start;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  random.numbers  /  start;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.numbers  /  start;	      int    letters    =    random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(ch,  start);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(0,  start);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  int  letters  =  chars.length;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  chars.length;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  chars.length;	      int    letters    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  int  letters  =  chars;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  chars;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  chars;	      int    letters    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  chars  =  random.numbers;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  chars  =  random.numbers;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	chars  =  random.numbers;	      int    letters    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  int  letters  =  random.length;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  random.length;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  random.length;	      int    letters    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  0))  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  0))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  0))  {	  if(!letters    &&!numbers    &&    random.matches(ch))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  chars))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  chars))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  chars))  {	  if(!letters    &&!numbers    &&    random.matches(ch))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,''))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,''))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,''))  {	  if(!letters    &&!numbers    &&    random.matches(ch))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.chars.equals(ch))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.chars.equals(ch))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.chars.equals(ch))  {	  if(!letters    &&!numbers    &&    random.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  if(!letters  ||!numbers  ||  random.equals(ch))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  ||!numbers  ||  random.equals(ch))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  ||  random.equals(ch))  {	  if(!letters    &&!numbers    &&    random.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  chars.length))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  chars.length))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,  chars.length))  {	  if(!letters    &&!numbers    &&    random.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch)  ==  0)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch)  ==  0)  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch)  ==  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
37	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start)!=  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(ch,  start)!=  0)  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(ch,  start)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
38	[BUG]  [BUGGY]  if(!letters  ||!numbers  &&  random.getChars(ch)!=  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  ||!numbers  &&  random.getChars(ch)!=  0)  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  ||!numbers  &&  random.getChars(ch)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
39	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  end);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buf  =  random.getChars(ch,  start,  end);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start,  end);	      char[]    buf    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buf  =  random.getChars(start,  end  +  1);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  end  +  1);	      char[]    buf    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(ch,  start);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buf  =  random.getChars(ch,  start);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(ch,  start);	      char[]    buf    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(0,  start);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buf  =  random.getChars(0,  start);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(0,  start);	      char[]    buf    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1);	      char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  end);	      char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  start);	      char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  0,  start,  end);	      char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!chars.equals(ch))  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&!chars.equals(ch))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!chars.equals(ch))  {	  if(!letters    &&!numbers    &&!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(random))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&!ch.equals(random))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!ch.equals(random))  {	  if(!letters    &&!numbers    &&!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end  +  1);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start,  end  +  1);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  0);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  0);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  0);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start)!=  0)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start)!=  0)  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(start)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  length);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  length);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1,  length);	      char[]    buffer    =    random.getChars(start,    start    +    1,    count);    	non-compiled	[CE]  	13	None	replace
54	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  ch);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  ch);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  ch);	      char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  Random  random  =  random.nullValue(0);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  Random  random  =  random.nullValue(0);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	Random  random  =  random.nullValue(0);	      Random    random    =    random.nullValue();    	non-compiled	[CE]  	1	None	replace
56	[BUG]  [BUGGY]  int  letters  =  chars.numbers;  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  chars.numbers;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  chars.numbers;	      int    letters    =    random.numbers;    	non-compiled	[CE]  	9	None	replace
57	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  random.numbers  :  0;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  random.numbers  :  0;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MIN_VALUE)!=  0?  random.numbers  :  0;	      int    letters    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.numbers  :  0;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.numbers  :  0;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.numbers  :  0;	      int    letters    =    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]  char[]  buffer  =  new  char[start  +  1];  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  new  char[start  +  1];  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[start  +  1];	      char[]    buffer    =    new    char[count    +    1];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
60	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch)))  {  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch)))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(Character.toLowerCase(ch)))  {	  if(!letters    &&!numbers    &&    random.equals(ch))    {    	non-compiled	[CE]  	7	None	replace
61	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  chars))  {  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,  chars))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,  chars))  {	  if(!letters    &&!numbers    &&    random.equals(ch))    {    	non-compiled	[CE]  	7	None	replace
62	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(chars))  {  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.equals(chars))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(chars))  {	  if(!letters    &&!numbers    &&    random.equals(ch))    {    	non-compiled	[CE]  	7	None	replace
63	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  start);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buf  =  random.getChars(start,  start);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  start);	      char[]    buf    =    random.getChars(start,    end);    	non-compiled	[CE]  	4	None	replace
64	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  start,  end);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buf  =  random.getChars(start,  start,  end);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  start,  end);	      char[]    buf    =    random.getChars(start,    end);    	non-compiled	[CE]  	4	None	replace
65	[BUG]  [BUGGY]  char[]  buf  =  random.getChars(start,  end  -  start);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buf  =  random.getChars(start,  end  -  start);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buf  =  random.getChars(start,  end  -  start);	      char[]    buf    =    random.getChars(start,    end);    	non-compiled	[CE]  	4	None	replace
66	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end);  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  random.getChars(0,  start,  end);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	5	None	replace
67	[BUG]  [BUGGY]  int  letters  =  ch;  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  ch;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  ch;	      int    letters    =    random.numbers;    	non-compiled	[CE]  	9	None	replace
68	[BUG]  [BUGGY]  int  letters  =  ch.numbers;  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  ch.numbers;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  ch.numbers;	      int    letters    =    random.numbers;    	non-compiled	[CE]  	9	None	replace
69	[BUG]  [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)!=  0?  random.numbers  :  0;  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =(numbers  &  Random.MAX_VALUE)!=  0?  random.numbers  :  0;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =(numbers  &  Random.MAX_VALUE)!=  0?  random.numbers  :  0;	      int    letters    =    random.numbers;    	non-compiled	[CE]  	9	None	replace
70	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  1];  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  1];  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	char[]  buffer  =  new  char[buffer.length  +  1];	      char[]    buffer    =    new    char[count    +    1];    	non-compiled	[CE]  	2	None	replace
71	[BUG]  [BUGGY]  int  letters  =  this.random.numbers  -  start;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  this.random.numbers  -  start;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  this.random.numbers  -  start;	      int    letters    =    random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
72	[BUG]  [BUGGY]  int  letters  =  numbers  -  random.numbers;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  int  letters  =  numbers  -  random.numbers;  [BUGGY]    if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	int  letters  =  numbers  -  random.numbers;	      int    letters    =    random.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
73	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(random))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  chars.equals(random))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  chars.equals(random))  {	  if(!letters    &&!numbers    &&    random.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  chars[ch].equals(random))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  chars[ch].equals(random))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  chars[ch].equals(random))  {	  if(!letters    &&!numbers    &&    random.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,''))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.equals(ch,''))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.equals(ch,''))  {	  if(!letters    &&!numbers    &&    random.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start,  ch)!=  0)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.getChars(start,  ch)!=  0)  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.getChars(start,  ch)!=  0)  {	  if(!letters    &&!numbers    &&    random.getChars(ch)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
77	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!Character.isDigit(ch))  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&!Character.isDigit(ch))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!Character.isDigit(ch))  {	  if(!letters    &&!numbers    &&!ch.equals(ch))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&!chars.contains(ch))  {  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&!chars.contains(ch))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&!chars.contains(ch))  {	  if(!letters    &&!numbers    &&!ch.equals(ch))    {    	non-compiled	[CE]  	14	None	replace
79	[BUG]  [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0'))  {  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {    [BUGGY]  if(!letters  &&!numbers  &&  random.matches(ch,  '0'))  {  [BUGGY]    end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	if(!letters  &&!numbers  &&  random.matches(ch,  '0'))  {	  if(!letters    &&!numbers    &&    random.matches(ch))    {    	non-compiled	[CE]  	11	None	replace
