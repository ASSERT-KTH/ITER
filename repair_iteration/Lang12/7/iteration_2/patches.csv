bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  ch  =  random.getChars(start,  start,  end);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars(start,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars(start,  start,  end);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
2	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end,  start);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end,  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end,  start);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
3	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  0,  end);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(0,  0,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(0,  0,  end);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
4	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  start,  end,  letters);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
5	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  ch);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  ch);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  0);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  0);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  start,  0);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  count);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  start,  count);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  start,  end,  letters);	  char[]    buffer    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
10	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  start,  end  +  1);	  char[]    buffer    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
11	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  0,  end);	  char[]    buffer    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
12	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end,  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end,  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  start,  end,  1);	  char[]    buffer    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
13	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end-1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end-1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end-1);	  char    ch    =    random.getChars(start,    start-1);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
14	[BUG]  [BUGGY]  String  ch  =  random.getChars(start,  start-1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars(start,  start-1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars(start,  start-1);	  char    ch    =    random.getChars(start,    start-1);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
15	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start-1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(0,  start-1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(0,  start-1);	  char    ch    =    random.getChars(start,    start-1);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
16	[BUG]  [BUGGY]  End  =  'z'  +  2;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  End  =  'z'  +  2;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	End  =  'z'  +  2;	  End    =    'z'    +    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
17	[BUG]  [BUGGY]  End  =  'z'  +  4;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  End  =  'z'  +  4;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	End  =  'z'  +  4;	  End    =    'z'    +    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
18	[BUG]  [BUGGY]  End  =  'z'  +  3;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  End  =  'z'  +  3;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	End  =  'z'  +  3;	  End    =    'z'    +    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
19	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  *  3];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[count  *  3];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[count  *  3];	  char[]    buffer    =    new    char[count    +    3];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
20	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(0,  start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(0,  start,  end,  letters);	  Random    random    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
21	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  0,  end,  start);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(0,  0,  end,  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(0,  0,  end,  start);	  Random    random    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
22	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(0,  start,  end  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(0,  start,  end  +  1);	  Random    random    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
23	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  1,  end);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(0,  1,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(0,  1,  end);	  Random    random    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
24	[BUG]  [BUGGY]  End  =  Integer.MAX_VALUE  /  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  End  =  Integer.MAX_VALUE  /  1;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	End  =  Integer.MAX_VALUE  /  1;	  End    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
25	[BUG]  [BUGGY]  End  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  End  =  Integer.MAX_VALUE;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	End  =  Integer.MAX_VALUE;	  End    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
26	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  end  +  1,  letters);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(start,  end  +  1,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(start,  end  +  1,  letters);	  Random    random    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
27	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(ch,  start  +  1);	  Random    random    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
28	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffers.length  +  2];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[buffers.length  +  2];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[buffers.length  +  2];	  char[]    buffer    =    new    char[buffers.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
29	[BUG]  [BUGGY]  char[]  buffer  =  new  char[letters.length  +  1];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[letters.length  +  1];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[letters.length  +  1];	  char[]    buffer    =    new    char[buffers.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
30	[BUG]  [BUGGY]  End  =  '0'  +  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  End  =  '0'  +  1;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	End  =  '0'  +  1;	  End    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
31	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(ch,  start,  end,  letters);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
32	[BUG]  [BUGGY]  Random  random  =  random.nextInt(chars,  start,  end);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(chars,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(chars,  start,  end);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
33	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  0,  start,  end);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  0,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(ch,  0,  start,  end);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
34	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(ch,  start,  end  +  1);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
35	[BUG]  [BUGGY]  start  =  'z'  +  2;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  start  =  'z'  +  2;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	start  =  'z'  +  2;	  start    =    'z'    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
36	[BUG]  [BUGGY]  start  =  'z'  +  4;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  start  =  'z'  +  4;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	start  =  'z'  +  4;	  start    =    'z'    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
37	[BUG]  [BUGGY]  start  =  'z'  +  1L;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  start  =  'z'  +  1L;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	start  =  'z'  +  1L;	  start    =    'z'    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
38	[BUG]  [BUGGY]  String  ch  =  random.quoteChar(ch,  start);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.quoteChar(ch,  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.quoteChar(ch,  start);	  char    ch    =    random.quoteChar(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
39	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(ch,  start,  0);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteChar(ch,  start,  0);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteChar(ch,  start,  0);	  char    ch    =    random.quoteChar(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
40	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(ch,  start,  count);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteChar(ch,  start,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteChar(ch,  start,  count);	  char    ch    =    random.quoteChar(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
41	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(ch,  start,  letters);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteChar(ch,  start,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteChar(ch,  start,  letters);	  char    ch    =    random.quoteChar(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
42	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue(),  count);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue(),  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  new  Random(random.nullValue(),  count);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
43	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue()  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue()  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  new  Random(random.nullValue()  +  1);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
44	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue(),  start);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue(),  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  new  Random(random.nullValue(),  start);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
45	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue(),  letters);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue(),  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  new  Random(random.nullValue(),  letters);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
46	[BUG]  [BUGGY]  String  ch  =  random.quoteChar(ch,  0);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.quoteChar(ch,  0);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.quoteChar(ch,  0);	  char    ch    =    random.quoteChar(ch,    0);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
47	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(ch,  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteChar(ch,  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteChar(ch,  1);	  char    ch    =    random.quoteChar(ch,    0);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
48	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(ch,  0,  count);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteChar(ch,  0,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteChar(ch,  0,  count);	  char    ch    =    random.quoteChar(ch,    0);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
49	[BUG]  [BUGGY]  String  ch  =  random.quoteString(ch,  0);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.quoteString(ch,  0);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.quoteString(ch,  0);	  char    ch    =    random.quoteChar(ch,    0);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
50	[BUG]  [BUGGY]  String  ch  =  random.getChars0,  start,  end);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars0,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars0,  start,  end);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
51	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(0,  start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(0,  start,  end,  letters);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
52	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(0,  start,  end  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(0,  start,  end  +  1);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
53	[BUG]  [BUGGY]  String  ch  =  random.getChars(0,  start,  end);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars(0,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars(0,  start,  end);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
54	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  start  +  1);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
55	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
56	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start  +  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(count,  start  +  1);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
57	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  end);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(0,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(0,  end);	  char    ch    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
58	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(0,  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(0,  start  +  1);	  char    ch    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
59	[BUG]  [BUGGY]  String  ch  =  random.getChars0,  start);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars0,  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars0,  start);	  char    ch    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
60	[BUG]  [BUGGY]  String  ch  =  random.getChars(0,  start);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars(0,  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars(0,  start);	  char    ch    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
61	[BUG]  [BUGGY]  String  ch  =  random.nextInt(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.nextInt(start,  end  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.nextInt(start,  end  +  1);	  String    ch    =    random.nextInt(start,    end);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
62	[BUG]  [BUGGY]  String  ch  =  random.nextInt(0,  start,  end);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.nextInt(0,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.nextInt(0,  start,  end);	  String    ch    =    random.nextInt(start,    end);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
63	[BUG]  [BUGGY]  String  ch  =  random.nextInt(start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.nextInt(start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.nextInt(start,  end,  letters);	  String    ch    =    random.nextInt(start,    end);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
64	[BUG]  [BUGGY]  String  ch  =  random.quoteBoolean(ch);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.quoteBoolean(ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.quoteBoolean(ch);	  String    ch    =    random.quoteChar(ch);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
65	[BUG]  [BUGGY]  Character  ch  =  random.quoteChar(ch);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Character  ch  =  random.quoteChar(ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Character  ch  =  random.quoteChar(ch);	  String    ch    =    random.quoteChar(ch);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
66	[BUG]  [BUGGY]  char  ch  =  random.quoteString(ch);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteString(ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteString(ch);	  String    ch    =    random.quoteString(ch);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
67	[BUG]  [BUGGY]  String  ch  =  random.quoteString(chars);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.quoteString(chars);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.quoteString(chars);	  String    ch    =    random.quoteString(ch);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
68	[BUG]  [BUGGY]  String  ch  =  random.quoteString(Character.toLowerCase(ch));  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.quoteString(Character.toLowerCase(ch));  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.quoteString(Character.toLowerCase(ch));	  String    ch    =    random.quoteString(ch);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
69	[BUG]  [BUGGY]  String  ch  =  random.quoteString(Character.toLowerCase(chars));  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.quoteString(Character.toLowerCase(chars));  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.quoteString(Character.toLowerCase(chars));	  String    ch    =    random.quoteString(ch);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
70	[BUG]  [BUGGY]  String  ch  =  random.getChars(start,  end  -  start);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars(start,  end  -  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars(start,  end  -  start);	  char    ch    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
71	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end  -  start,  letters);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end  -  start,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end  -  start,  letters);	  char    ch    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
72	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end  -  start  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end  -  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end  -  start  +  1);	  char    ch    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
73	[BUG]  [BUGGY]  Char  ch  =  random.quoteChar(chars);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Char  ch  =  random.quoteChar(chars);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Char  ch  =  random.quoteChar(chars);	  Char    ch    =    random.quoteChar(ch);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
74	[BUG]  [BUGGY]  String  ch  =  random.getChars(start,  end,  letters);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars(start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars(start,  end,  letters);	  String    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
75	[BUG]  [BUGGY]  String  ch  =  random.getChars(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars(start,  end  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars(start,  end  +  1);	  String    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
76	[BUG]  [BUGGY]  char[]  buffer  =  new  char[length  *  2];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[length  *  2];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[length  *  2];	  char[]    buffer    =    new    char[length    *    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
77	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[buffer.length  *  1];	  char[]    buffer    =    new    char[length    *    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
78	[BUG]  [BUGGY]  char[]  buffer  =  new  char[length  *  4];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[length  *  4];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[length  *  4];	  char[]    buffer    =    new    char[length    *    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
79	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  count);	  char[]    buffer    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
80	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  letters);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  0,  letters);	  char[]    buffer    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
81	[BUG]  [BUGGY]  end  =  Integer.MIN_VALUE  /  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  end  =  Integer.MIN_VALUE  /  1;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	end  =  Integer.MIN_VALUE  /  1;	  end    =    Integer.MIN_VALUE    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  Random  random  =  RANDOM.nullValue()  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  RANDOM.nullValue()  +  1;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  RANDOM.nullValue()  +  1;	  Random    random    =    RANDOM.nullValue();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
83	[BUG]  [BUGGY]  Random  random  =  random.nullValue()  /  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nullValue()  /  1;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nullValue()  /  1;	  Random    random    =    random.nullValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
84	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  start);	  char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
85	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  0,  start,  end);	  char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
86	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  count);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1,  count);	  char[]    buffer    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
87	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  letters);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1,  letters);	  char[]    buffer    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
88	[BUG]  [BUGGY]  String  ch  =  random.getChars(start,  start  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars(start,  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars(start,  start  +  1);	  char    ch    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
89	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end,  count);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end,  count);	  char    ch    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
90	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end,  0);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end,  0);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end,  0);	  char    ch    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
91	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end,  letters,  count);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end,  letters,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end,  letters,  count);	  char    ch    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  end  -  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(1,  end  -  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(1,  end  -  1);	  Random    random    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
93	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end  -  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end  -  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(ch,  start,  end  -  1);	  Random    random    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
94	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  end  -  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(0,  end  -  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(0,  end  -  1);	  Random    random    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
95	[BUG]  [BUGGY]  Random  random  =  random.nextDouble()  -  start  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextDouble()  -  start  +  1;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextDouble()  -  start  +  1;	  Random    random    =    random.nextDouble()    -    start;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
96	[BUG]  [BUGGY]  Random  random  =  random.nextDouble()  /  start;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextDouble()  /  start;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextDouble()  /  start;	  Random    random    =    random.nextDouble()    -    start;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
97	[BUG]  [BUGGY]  Random  random  =  random.nextDouble()  *  start;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextDouble()  *  start;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextDouble()  *  start;	  Random    random    =    random.nextDouble()    -    start;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
98	[BUG]  [BUGGY]  Random  random  =  random.nullValue(),  count  +  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nullValue(),  count  +  1;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nullValue(),  count  +  1;	  Random    random    =    random.nullValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
99	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end  -  start);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end  -  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(ch,  start,  end  -  start);	  Random    random    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
100	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  end  -  start,  letters);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(start,  end  -  start,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(start,  end  -  start,  letters);	  Random    random    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
101	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(this.chars,  start);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteChar(this.chars,  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteChar(this.chars,  start);	  char    ch    =    random.quoteChar(this.chars);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
102	[BUG]  [BUGGY]  String  ch  =  random.quoteChar(this.chars);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.quoteChar(this.chars);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.quoteChar(this.chars);	  char    ch    =    random.quoteChar(this.chars);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
103	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(this.chars,  count);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteChar(this.chars,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteChar(this.chars,  count);	  char    ch    =    random.quoteChar(this.chars);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
104	[BUG]  [BUGGY]  end  =  MIN_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  end  =  MIN_VALUE  -  1;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	end  =  MIN_VALUE  -  1;	  end    =    Integer.MIN_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
105	[BUG]  [BUGGY]  End  =  Integer.MIN_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  End  =  Integer.MIN_VALUE  -  1;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	End  =  Integer.MIN_VALUE  -  1;	  end    =    Integer.MIN_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
106	[BUG]  [BUGGY]  String  ch  =  random.getChars(count);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars(count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars(count);	  char    ch    =    random.getChars(count);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
107	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  count);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  count);	  char    ch    =    random.getChars(count);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
108	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  count);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(0,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(0,  count);	  char    ch    =    random.getChars(count);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
109	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffers  *  1];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[buffers  *  1];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[buffers  *  1];	  char[]    buffer    =    new    char[buffers    +    1];    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
110	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  *  2];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[count  *  2];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[count  *  2];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
111	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  /  1];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[count  /  1];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[count  /  1];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
112	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  *  4];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[count  *  4];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[count  *  4];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
113	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  -  1];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[count  -  1];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[count  -  1];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
114	[BUG]  [BUGGY]  String  ch  =  random.nextInt(start,  end  -  start);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.nextInt(start,  end  -  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.nextInt(start,  end  -  start);	  char    ch    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
115	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  end  -  start  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(start,  end  -  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(start,  end  -  start  +  1);	  char    ch    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
116	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  end  -  start,  letters);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(start,  end  -  start,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(start,  end  -  start,  letters);	  char    ch    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
117	[BUG]  [BUGGY]  end  =  Integer.MAX_VALUE  /  2;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  end  =  Integer.MAX_VALUE  /  2;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	end  =  Integer.MAX_VALUE  /  2;	  end    =    Integer.MAX_VALUE    /    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
118	[BUG]  [BUGGY]  end  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE  /  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  end  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE  /  1;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	end  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE  /  1;	  end    =    Integer.MAX_VALUE    /    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
119	[BUG]  [BUGGY]  char[]  buffer  =  new  char[numbers  *  2];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[numbers  *  2];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[numbers  *  2];	  char[]    buffer    =    new    char[numbers    *    1];    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
120	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(0,  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(0,  1);	  Random    random    =    random.nextInt(1,    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
121	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  0);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(1,  0);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(1,  0);	  Random    random    =    random.nextInt(1,    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
122	[BUG]  [BUGGY]  Random  random  =  random.nextInt(2,  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(2,  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(2,  1);	  Random    random    =    random.nextInt(1,    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
123	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  2];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  2];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[buffer.length  +  2];	  char[]    buffer    =    new    char[buffer.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
124	[BUG]  [BUGGY]  String  ch  =  random.nextInt(start,  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.nextInt(start,  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.nextInt(start,  1);	  char    ch    =    random.nextInt(start,    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
125	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  2);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(start,  2);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(start,  2);	  char    ch    =    random.nextInt(start,    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
126	[BUG]  [BUGGY]  char  ch  =  random.nextInt(0,  1);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(0,  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(0,  1);	  char    ch    =    random.nextInt(start,    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
127	[BUG]  [BUGGY]  String  ch  =  random.getString( "numbers ");  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getString( "numbers ");  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getString( "numbers ");	  String    ch    =    random.getChars(start);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
128	[BUG]  [BUGGY]  String  ch  =  random.nextInt(start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.nextInt(start,  end  -  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.nextInt(start,  end  -  1);	  char    ch    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
129	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  end  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(start,  end  -  1  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(start,  end  -  1  +  1);	  char    ch    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
130	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  end  -  1,  letters);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(start,  end  -  1,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(start,  end  -  1,  letters);	  char    ch    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
131	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  end  +  1,  letters);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(start,  end  +  1,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(start,  end  +  1,  letters);	  char    ch    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
132	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  end  +  1,  count);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(start,  end  +  1,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(start,  end  +  1,  count);	  char    ch    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
133	[BUG]  [BUGGY]  Random  random  =  random.nextDouble()  /  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextDouble()  /  1;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextDouble()  /  1;	  Random    random    =    random.nextDouble()    +    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
134	[BUG]  [BUGGY]  char  ch  =  random.nextInt(0,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(0,  start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(0,  start,  end,  letters);	  char    ch    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
135	[BUG]  [BUGGY]  char  ch  =  random.nextInt(0,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(0,  start,  end  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(0,  start,  end  +  1);	  char    ch    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
136	[BUG]  [BUGGY]  Char  ch  =  random.nextInt(0,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Char  ch  =  random.nextInt(0,  start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Char  ch  =  random.nextInt(0,  start,  end,  letters);	  char    ch    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
137	[BUG]  [BUGGY]  Random  random  =  random.nextDouble()  *  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextDouble()  *  1;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextDouble()  *  1;	  Random    random    =    random.nextDouble()    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
138	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  letters);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
139	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
140	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
141	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  0,  end);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
142	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  1);	  char[]    buffer    =    random.getChars(start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
143	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  count);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  0,  count);	  char[]    buffer    =    random.getChars(start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
144	[BUG]  [BUGGY]  end  =  '0'  +  2;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  end  =  '0'  +  2;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	end  =  '0'  +  2;	  end    =    '0'    +    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
145	[BUG]  [BUGGY]  end  =  '0'  +  4;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  end  =  '0'  +  4;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	end  =  '0'  +  4;	  end    =    '0'    +    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
146	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end  +  1,  letters);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end  +  1,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end  +  1,  letters);	  char    ch    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
147	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end  +  1,  count);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end  +  1,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end  +  1,  count);	  char    ch    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
148	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end-1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end-1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end-1);	  char[]    buffer    =    random.getChars(start,    start-1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
149	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start-1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start-1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  start-1);	  char[]    buffer    =    random.getChars(start,    start-1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
150	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start-1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start-1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  start-1);	  char[]    buffer    =    random.getChars(start,    start-1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
151	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start-1,  count);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start-1,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  start-1,  count);	  char[]    buffer    =    random.getChars(start,    start-1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
152	[BUG]  [BUGGY]  Char  ch  =  random.getChars(start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Char  ch  =  random.getChars(start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Char  ch  =  random.getChars(start,  end,  letters);	  Char    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
153	[BUG]  [BUGGY]  char  ch  =  random.getChars(start  +  1,  count);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start  +  1,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start  +  1,  count);	  char    ch    =    random.getChars(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
154	[BUG]  [BUGGY]  String  ch  =  random.getChars(start  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.getChars(start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.getChars(start  +  1);	  char    ch    =    random.getChars(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
155	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  end);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  end);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
156	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  count);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1,  count);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
157	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  end);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1,  end);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
158	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  ch);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  0,  ch);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
159	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  ch);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  0,  ch);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
160	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue()  +  start);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue()  +  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  new  Random(random.nullValue()  +  start);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
161	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue(),  start  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue(),  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  new  Random(random.nullValue(),  start  +  1);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
162	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  start,  end  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  start,  end  +  1);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
163	[BUG]  [BUGGY]  Random  random  =  random.nextDouble()  -  1L;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextDouble()  -  1L;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextDouble()  -  1L;	  Random    random    =    random.nextDouble()    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
164	[BUG]  [BUGGY]  End  =  'z'  +  1L;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  End  =  'z'  +  1L;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	End  =  'z'  +  1L;	  End    =    'z'    +    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
165	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  letters);	  char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
166	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  ch);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  ch);	  char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
167	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end  -  start-1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end  -  start-1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end  -  start-1);	  char    ch    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
168	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start  -  end);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  start  -  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  start  -  end);	  char    ch    =    random.getChars(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
169	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start  +  1,  letters);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  start  +  1,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  start  +  1,  letters);	  char    ch    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
170	[BUG]  [BUGGY]  end  =  Integer.MAX_VALUE  /  4;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  end  =  Integer.MAX_VALUE  /  4;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	end  =  Integer.MAX_VALUE  /  4;	  end    =    Integer.MAX_VALUE    /    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
171	[BUG]  [BUGGY]  Char  ch  =  random.quoteChar(ch,  start);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Char  ch  =  random.quoteChar(ch,  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Char  ch  =  random.quoteChar(ch,  start);	  Char    ch    =    random.quoteChar(ch);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
172	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  end  -  start  +  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(start,  end  -  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(start,  end  -  start  +  1);	  Random    random    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
173	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  end  -  start-1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(start,  end  -  start-1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(start,  end  -  start-1);	  Random    random    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
174	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  0);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  0);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  start,  0);	  char[]    buffer    =    random.getChars(start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
175	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffers.length  *  1];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[buffers.length  *  1];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[buffers.length  *  1];	  char[]    buffer    =    new    char[buffers.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
176	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffered.length  +  1];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[buffered.length  +  1];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[buffered.length  +  1];	  char[]    buffer    =    new    char[buffers.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
177	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  start,  end  -  start);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(0,  start,  end  -  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(0,  start,  end  -  start);	  Random    random    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
178	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(0,  start,  end  -  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(0,  start,  end  -  1);	  Random    random    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
179	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer  *  1];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[buffer  *  1];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[buffer  *  1];	  char[]    buffer    =    new    char[numbers    *    1];    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
180	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer  +  1];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[buffer  +  1];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[buffer  +  1];	  char[]    buffer    =    new    char[count    +    2];    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
181	[BUG]  [BUGGY]  char[]  buffer  =  new  char[start  +  2];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[start  +  2];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[start  +  2];	  char[]    buffer    =    new    char[count    +    2];    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
182	[BUG]  [BUGGY]  Random  random  =  random.nullValue()  *  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nullValue()  *  1;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nullValue()  *  1;	  Random    random    =    random.nullValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
183	[BUG]  [BUGGY]  char  ch  =  this.chars.quoteChar(random);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  this.chars.quoteChar(random);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  this.chars.quoteChar(random);	  char    ch    =    random.quoteChar(this.chars);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
184	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  end  -  1  +  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(start,  end  -  1  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(start,  end  -  1  +  1);	  Random    random    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
185	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start  +  1,  count);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(0,  start  +  1,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(0,  start  +  1,  count);	  char    ch    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
186	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start  +  1,  end);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(0,  start  +  1,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(0,  start  +  1,  end);	  char    ch    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
187	[BUG]  [BUGGY]  char  ch  =  random.nextInt(0,  start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(0,  start,  end  -  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(0,  start,  end  -  1);	  char    ch    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
188	[BUG]  [BUGGY]  char  ch  =  random.nextInt(1,  start,  end);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(1,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(1,  start,  end);	  char    ch    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
189	[BUG]  [BUGGY]  char  ch  =  random.nextInt(0,  start,  end  -  start);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(0,  start,  end  -  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(0,  start,  end  -  start);	  char    ch    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
190	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  end  +  1,  count);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(start,  end  +  1,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(start,  end  +  1,  count);	  Random    random    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
191	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  letters);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch,  letters);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
192	[BUG]  [BUGGY]  Random  random  =  randomUtils.nullValue();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  randomUtils.nullValue();  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  randomUtils.nullValue();	  Random    random    =    RANDOM.nullValue();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
193	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start-1,  end);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  start-1,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  start-1,  end);	  char    ch    =    random.getChars(start,    start-1);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
194	[BUG]  [BUGGY]  start  =  '0'  +  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  start  =  '0'  +  1;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	start  =  '0'  +  1;	  end    =    '0'    +    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
195	[BUG]  [BUGGY]  end  =  ch  -  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  end  =  ch  -  1;  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	end  =  ch  -  1;	  end    =    Integer.MIN_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
196	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  1  -  start);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(1,  1  -  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(1,  1  -  start);	  Random    random    =    random.nextInt(1,    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
197	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  3];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  3];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[buffer.length  +  3];	  char[]    buffer    =    new    char[buffer.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
198	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end,  ch);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end,  ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  start,  end,  ch);	  char[]    buffer    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
199	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  1  +  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(start,  1  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(start,  1  +  1);	  char    ch    =    random.nextInt(start,    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
200	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  3);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(start,  3);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(start,  3);	  char    ch    =    random.nextInt(start,    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
201	[BUG]  [BUGGY]  Char  ch  =  random.getChars(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Char  ch  =  random.getChars(start,  end  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Char  ch  =  random.getChars(start,  end  +  1);	  Char    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
202	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end,  chars);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end,  chars);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end,  chars);	  char    ch    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
203	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end,  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end,  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end,  1);	  char    ch    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
204	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end,  chars,  letters);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end,  chars,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end,  chars,  letters);	  char    ch    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
205	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(0,  start,  end  -  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(0,  start,  end  -  1);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
206	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(ch,  start  +  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteChar(ch,  start  +  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteChar(ch,  start  +  1);	  char    ch    =    random.quoteChar(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
207	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(start,  ch);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteChar(start,  ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteChar(start,  ch);	  char    ch    =    random.quoteChar(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
208	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(ch,  start,  end);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteChar(ch,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteChar(ch,  start,  end);	  char    ch    =    random.quoteChar(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
209	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start-1,  end);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start-1,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  start-1,  end);	  char[]    buffer    =    random.getChars(start,    start-1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
210	[BUG]  [BUGGY]  char  ch  =  random.getChars(start  +  1,  end);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start  +  1,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start  +  1,  end);	  char    ch    =    random.getChars(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
211	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  count);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  count);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1,  count);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
212	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  letters);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1,  letters);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
213	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  end,  ch);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(start,  end,  ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(start,  end,  ch);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
214	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  ch);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1,  ch);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
215	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars,  letters);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars,  letters);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  chars,  letters);	  char[]    buffer    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
216	[BUG]  [BUGGY]  String  ch  =  random.quoteString(this.chars);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  String  ch  =  random.quoteString(this.chars);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	String  ch  =  random.quoteString(this.chars);	  char    ch    =    random.quoteChar(this.chars);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
217	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end,  chars,  numbers);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end,  chars,  numbers);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end,  chars,  numbers);	  char    ch    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
218	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  0);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
219	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  1);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
220	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(ch,  start,  1);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
221	[BUG]  [BUGGY]  char  ch  =  random.quoteAsString(ch);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteAsString(ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteAsString(ch);	  String    ch    =    random.quoteString(ch);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
222	[BUG]  [BUGGY]  char  ch  =  random.quoteBoolean(ch);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.quoteBoolean(ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.quoteBoolean(ch);	  String    ch    =    random.quoteString(ch);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
223	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start  -  start);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start  -  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(ch,  start  -  start);	  Random    random    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
224	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  end  -  start);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(0,  end  -  start);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(0,  end  -  start);	  Random    random    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
225	[BUG]  [BUGGY]  char[]  buffer  =  new  char[1];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[1];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[1];	  char[]    buffer    =    new    char[count    +    2];    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
226	[BUG]  [BUGGY]  Char  ch  =  random.nextInt(start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Char  ch  =  random.nextInt(start,  end  -  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Char  ch  =  random.nextInt(start,  end  -  1);	  char    ch    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
227	[BUG]  [BUGGY]  Random  random  =  random.nextDouble(start,  end  -  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextDouble(start,  end  -  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextDouble(start,  end  -  1);	  Random    random    =    random.nextDouble()    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
228	[BUG]  [BUGGY]  Char  ch  =  random.getChars(start,  end-1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Char  ch  =  random.getChars(start,  end-1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Char  ch  =  random.getChars(start,  end-1);	  char    ch    =    random.getChars(start,    start-1);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
229	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  4);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.nextInt(start,  4);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.nextInt(start,  4);	  char    ch    =    random.nextInt(start,    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
230	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(start,  end;  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(start,  end;	  String    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
231	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer  +  2];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  new  char[buffer  +  2];  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  new  char[buffer  +  2];	  char[]    buffer    =    new    char[length    +    2];    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
232	[BUG]  [BUGGY]  char  ch  =  random.getChars(end);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char  ch  =  random.getChars(end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char  ch  =  random.getChars(end);	  String    ch    =    random.getChars(start);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
233	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  0);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  0);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch,  0);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
234	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  4);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  4);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  4);	  char[]    buffer    =    random.getChars(start,    end,    0);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
235	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start  -  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start  -  1);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(ch,  start  -  1);	  Random    random    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
236	[BUG]  [BUGGY]  End  =  'z'  +  1,  start  ='';  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  End  =  'z'  +  1,  start  ='';  [BUGGY]      }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	End  =  'z'  +  1,  start  ='';	  End    =    'z'    +    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
237	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  start,  end);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  Random  random  =  random.nextInt(1,  start,  end);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	Random  random  =  random.nextInt(1,  start,  end);	  Random    random    =    random.nextInt(0,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
238	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars,  ch);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars,  ch);  [BUGGY]      end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	char[]  buffer  =  random.getChars(start,  end,  chars,  ch);	  char[]    buffer    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
