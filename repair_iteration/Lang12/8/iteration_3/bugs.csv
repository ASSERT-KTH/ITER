bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  count  =  RANDOM.numbers  -  start  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  RANDOM.numbers  -  start  +  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  RANDOM.numbers  -  start  +  1;	  int    count    =    RANDOM.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
2	[BUG]  [BUGGY]  int  count  =  RANDOM.numbers  /  start;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  RANDOM.numbers  /  start;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  RANDOM.numbers  /  start;	  int    count    =    RANDOM.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
3	[BUG]  [BUGGY]  int  count  =  RANDOM.numbers  -  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  RANDOM.numbers  -  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  RANDOM.numbers  -  1;	  int    count    =    RANDOM.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
4	[BUG]  [BUGGY]  int  count  =  random.nextInt(end  +  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(end  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(end  +  1);	  int    count    =    random.nextInt(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
5	[BUG]  [BUGGY]  int  count  =  random.nextInt(start  +  1,  end);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start  +  1,  end);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start  +  1,  end);	  int    count    =    random.nextInt(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
6	[BUG]  [BUGGY]  int  count  =  random.nextInt(end,  start  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(end,  start  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(end,  start  +  1);	  int    count    =    random.nextInt(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
7	[BUG]  [BUGGY]  int  count  =  chars.numbers  -  start  +  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.numbers  -  start  +  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.numbers  -  start  +  1;	  int    count    =    chars.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
8	[BUG]  [BUGGY]  int  count  =  chars.numbers  /  start;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.numbers  /  start;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.numbers  /  start;	  int    count    =    chars.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
9	[BUG]  [BUGGY]  int  count  =  chars.numbers  -  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.numbers  -  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.numbers  -  1;	  int    count    =    chars.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
10	[BUG]  [BUGGY]  String  count  =  random.nextInt(gap);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  String  count  =  random.nextInt(gap);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	String  count  =  random.nextInt(gap);	  char    count    =    random.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  char  count  =  random.nextInt(start);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  random.nextInt(start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  random.nextInt(start);	  char    count    =    random.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  char  count  =  random.nextInt(start,  end);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  random.nextInt(start,  end);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  random.nextInt(start,  end);	  char    count    =    random.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  char  count  =  random.nextInt(gap,  start);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  random.nextInt(gap,  start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  random.nextInt(gap,  start);	  char    count    =    random.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  /  2];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[count  /  2];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[count  /  2];	  char[]    buffer    =    new    char[count    -    2];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  *  2];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[count  *  2];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[count  *  2];	  char[]    buffer    =    new    char[count    -    2];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  -  1  +  1];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  -  1  +  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  -  1  +  1];	  char[]    buffer    =    new    char[buffer.length    -    1];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
17	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  -  2];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  -  2];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  -  2];	  char[]    buffer    =    new    char[buffer.length    -    1];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
18	[BUG]  [BUGGY]  char[]  buffer  =  new  char[random.nextInt(start,  end)];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[random.nextInt(start,  end)];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[random.nextInt(start,  end)];	  char[]    buffer    =    new    char[buffer.length];    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
19	[BUG]  [BUGGY]  char[]  buffer  =  new  char[256];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[256];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[256];	  char[]    buffer    =    new    char[2];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  char[]  buffer  =  new  char[4];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[4];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[4];	  char[]    buffer    =    new    char[2];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  char  count  =  random.nextInt(end);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  random.nextInt(end);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  random.nextInt(end);	  int    count    =    random.nextInt(end);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count  /  1];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[count  /  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[count  /  1];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
23	[BUG]  [BUGGY]  char[]  buffer  =  new  char[numbers  *  1];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[numbers  *  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[numbers  *  1];	  char[]    buffer    =    new    char[count    *    1];    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
24	[BUG]  [BUGGY]  char  count  =  random.nextInt(gap,  end);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  random.nextInt(gap,  end);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  random.nextInt(gap,  end);	  int    count    =    random.nextInt(gap,    end);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  int  count  =  random.nextInt(gap,  end  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(gap,  end  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(gap,  end  +  1);	  int    count    =    random.nextInt(gap,    end);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  int  count  =  random.numbers  -  start,  end  +  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numbers  -  start,  end  +  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numbers  -  start,  end  +  1;	  int    count    =    random.numbers    -    start,    end;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
27	[BUG]  [BUGGY]  int  count  =  random.numbers  -  start,  end  -  1;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numbers  -  start,  end  -  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numbers  -  start,  end  -  1;	  int    count    =    random.numbers    -    start,    end;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
28	[BUG]  [BUGGY]  int  count  =  random.numbers  -  start,  0,  end;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numbers  -  start,  0,  end;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numbers  -  start,  0,  end;	  int    count    =    random.numbers    -    start,    end;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
29	[BUG]  [BUGGY]  int  count  =  chars.numbers  -  start,  end;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.numbers  -  start,  end;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.numbers  -  start,  end;	  int    count    =    random.numbers    -    start,    end;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
30	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  end  -  start  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  end  -  start  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  end  -  start  +  1);	  int    count    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
31	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  end  -  start,  letters);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  end  -  start,  letters);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  end  -  start,  letters);	  int    count    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
32	[BUG]  [BUGGY]  int  count  =  random.nextInt(gap,  start,  end  -  start);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(gap,  start,  end  -  start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(gap,  start,  end  -  start);	  int    count    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
33	[BUG]  [BUGGY]  int  count  =  chars.length  /  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  /  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  /  1;	  int    count    =    chars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
34	[BUG]  [BUGGY]  int  count  =  chars.length  +  2;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  +  2;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  +  2;	  int    count    =    chars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
35	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  -  start  +  1];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  -  start  +  1];  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  -  start  +  1];	  char[]    buffer    =    new    char[buffer.length    -    start];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  -  end];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  -  end];  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  -  end];	  char[]    buffer    =    new    char[buffer.length    -    start];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
37	[BUG]  [BUGGY]  char  ch  =  random.nextInt(gap);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  ch  =  random.nextInt(gap);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  ch  =  random.nextInt(gap);	  char    ch    =    random.nextInt(start);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
38	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  ch  =  random.nextInt(start  +  1);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  ch  =  random.nextInt(start  +  1);	  char    ch    =    random.nextInt(start);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
39	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  count);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  ch  =  random.nextInt(start,  count);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  ch  =  random.nextInt(start,  count);	  char    ch    =    random.nextInt(start);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
40	[BUG]  [BUGGY]  char[]  buffer  =  new  char[16];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[16];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[16];	  char[]    buffer    =    new    char[10];    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
41	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  end,  start);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  end,  start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  end,  start);	  int    count    =    random.nextInt(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
42	[BUG]  [BUGGY]  char  count  =  random.nextInt(start,  end,  start);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  random.nextInt(start,  end,  start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  random.nextInt(start,  end,  start);	  int    count    =    random.nextInt(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
43	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  end,  0);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  end,  0);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  end,  0);	  int    count    =    random.nextInt(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
44	[BUG]  [BUGGY]  int  count  =  chars.nextInt(end);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.nextInt(end);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.nextInt(end);	  int    count    =    chars.nextInt(start);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
45	[BUG]  [BUGGY]  int  count  =  chars.get(random.nextInt(start));  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.get(random.nextInt(start));  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.get(random.nextInt(start));	  int    count    =    chars.nextInt(start);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
46	[BUG]  [BUGGY]  String  count  =  chars.length;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  String  count  =  chars.length;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	String  count  =  chars.length;	  char    count    =    chars.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
47	[BUG]  [BUGGY]  char  count  =  chars.length  -  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  chars.length  -  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  chars.length  -  1;	  char    count    =    chars.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
48	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffers  +  1];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffers  +  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffers  +  1];	  char[]    buffer    =    new    char[numbers    +    1];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  2];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  2];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  +  2];	  char[]    buffer    =    new    char[buffer.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
50	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  *  1];	  char[]    buffer    =    new    char[buffer.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
51	[BUG]  [BUGGY]  int  count  =  chars.length  -  start  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  -  start  +  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  -  start  +  1;	  int    count    =    chars.length    -    start;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
52	[BUG]  [BUGGY]  int  count  =  end  -  start;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  end  -  start;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  end  -  start;	  int    count    =    chars.length    -    start;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
53	[BUG]  [BUGGY]  int  count  =  chars.length  -  end;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  -  end;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  -  end;	  int    count    =    chars.length    -    start;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
54	[BUG]  [BUGGY]  int  count  =  end  -  random.numbers  +  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  end  -  random.numbers  +  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  end  -  random.numbers  +  1;	  int    count    =    random.numbers    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
55	[BUG]  [BUGGY]  int  count  =  random.numbers  /  start  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numbers  /  start  +  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numbers  /  start  +  1;	  int    count    =    random.numbers    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
56	[BUG]  [BUGGY]  char[]  buffer  =  new  char[228];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[228];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[228];	  char[]    buffer    =    new    char[128];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
57	[BUG]  [BUGGY]  int  count  =  random.numbers  /  end;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numbers  /  end;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numbers  /  end;	  int    count    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
58	[BUG]  [BUGGY]  int  count  =  random.numbers  *  start;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numbers  *  start;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numbers  *  start;	  int    count    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
59	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  ch  =  random.nextInt(start,  end  +  1);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  ch  =  random.nextInt(start,  end  +  1);	  char    ch    =    random.nextInt(start,    end);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
60	[BUG]  [BUGGY]  String  ch  =  random.nextInt(start,  end);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  String  ch  =  random.nextInt(start,  end);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	String  ch  =  random.nextInt(start,  end);	  char    ch    =    random.nextInt(start,    end);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
61	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  ch  =  random.nextInt(start,  end  -  1);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  ch  =  random.nextInt(start,  end  -  1);	  char    ch    =    random.nextInt(start,    end);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
62	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  1);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  ch  =  random.nextInt(start,  1);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  ch  =  random.nextInt(start,  1);	  char    ch    =    random.nextInt(start,    end);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
63	[BUG]  [BUGGY]  int  count  =  random.nextInt(gap,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(gap,  start,  end,  letters);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(gap,  start,  end,  letters);	  int    count    =    random.nextInt(gap,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
64	[BUG]  [BUGGY]  int  count  =  random.nextInt(gap,  start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(gap,  start,  end  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(gap,  start,  end  +  1);	  int    count    =    random.nextInt(gap,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
65	[BUG]  [BUGGY]  int  count  =  random.nextInt(gap,  end,  start);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(gap,  end,  start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(gap,  end,  start);	  int    count    =    random.nextInt(gap,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
66	[BUG]  [BUGGY]  int  count  =  random.nextInt(gap,  start,  end,  0);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(gap,  start,  end,  0);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(gap,  start,  end,  0);	  int    count    =    random.nextInt(gap,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
67	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1);	  char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
68	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getChars(start,  end,  count);	  char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
69	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getChars(start,  start,  end);	  char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  1);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  1);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getChars(start,  end,  1);	  char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
71	[BUG]  [BUGGY]  int  count  =  random.numbers  /  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numbers  /  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numbers  /  1;	  int    count    =    random.numbers    -    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
72	[BUG]  [BUGGY]  int  count  =  random.numbers  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numbers  -  1  +  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numbers  -  1  +  1;	  int    count    =    random.numbers    -    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
73	[BUG]  [BUGGY]  char[]  buffer  =  new  char[length  -  start  +  1];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[length  -  start  +  1];  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[length  -  start  +  1];	  char[]    buffer    =    new    char[length    -    start];    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
74	[BUG]  [BUGGY]  char[]  buffer  =  new  char[numbers  -  start];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[numbers  -  start];  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[numbers  -  start];	  char[]    buffer    =    new    char[end    -    start];    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
75	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  end  -  1,  letters);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  end  -  1,  letters);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  end  -  1,  letters);	  int    count    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
76	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  end  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  end  -  1  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  end  -  1  +  1);	  int    count    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
77	[BUG]  [BUGGY]  char[]  buffer  =  random.getBuffer(start,  end  +  1);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getBuffer(start,  end  +  1);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getBuffer(start,  end  +  1);	  char[]    buffer    =    random.getBuffer(start,    end);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  char[]  buffer  =  random.getBuffer(start,  0,  end);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getBuffer(start,  0,  end);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getBuffer(start,  0,  end);	  char[]    buffer    =    random.getBuffer(start,    end);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
79	[BUG]  [BUGGY]  char[]  buffer  =  random.getBuffer(start,  end,  count);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getBuffer(start,  end,  count);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getBuffer(start,  end,  count);	  char[]    buffer    =    random.getBuffer(start,    end);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
80	[BUG]  [BUGGY]  char[]  buffer  =  random.getBuffer(start,  start,  end);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getBuffer(start,  start,  end);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getBuffer(start,  start,  end);	  char[]    buffer    =    random.getBuffer(start,    end);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
81	[BUG]  [BUGGY]  int  count  =  chars.length  /  2;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  /  2;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  /  2;	  int    count    =    chars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
82	[BUG]  [BUGGY]  int  count  =  chars.length  -  4;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  -  4;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  -  4;	  int    count    =    chars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
83	[BUG]  [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(random,  start,  end);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(random,  start,  end);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  RandomStringUtils.getBufferedChars(random,  start,  end);	  char[]    buffer    =    RandomStringUtils.getBufferedChars(buffer,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
84	[BUG]  [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  0,  end);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  0,  end);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  0,  end);	  char[]    buffer    =    RandomStringUtils.getBufferedChars(buffer,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
85	[BUG]  [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(numbers,  start,  end);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(numbers,  start,  end);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  RandomStringUtils.getBufferedChars(numbers,  start,  end);	  char[]    buffer    =    RandomStringUtils.getBufferedChars(buffer,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
86	[BUG]  [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(count,  start,  end);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(count,  start,  end);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  RandomStringUtils.getBufferedChars(count,  start,  end);	  char[]    buffer    =    RandomStringUtils.getBufferedChars(buffer,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  gap);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  gap);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  gap);	  int    count    =    random.nextInt(gap,    start);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
88	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  start);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  start);	  int    count    =    random.nextInt(gap,    start);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
89	[BUG]  [BUGGY]  char[]  buffer  =  random.getBytes(start);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getBytes(start);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getBytes(start);	  char[]    buffer    =    random.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
90	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getChars();  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getChars();	  char[]    buffer    =    random.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
91	[BUG]  [BUGGY]  int  count  =  chars.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  -  1  +  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  -  1  +  1;	  int    count    =    chars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
92	[BUG]  [BUGGY]  int  count  =  chars.length  -  1  ||(numbers  &&  RandomStringUtils.isLetter(ch));  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  -  1  ||(numbers  &&  RandomStringUtils.isLetter(ch));  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  -  1  ||(numbers  &&  RandomStringUtils.isLetter(ch));	  int    count    =    chars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
93	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  end  +  1,  letters);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  end  +  1,  letters);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  end  +  1,  letters);	  int    count    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
94	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  end  +  1  -  start);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  end  +  1  -  start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  end  +  1  -  start);	  int    count    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
95	[BUG]  [BUGGY]  char[]  buffer  =  new  char[numbers  -  start  +  1];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[numbers  -  start  +  1];  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[numbers  -  start  +  1];	  char[]    buffer    =    new    char[count    -    start    +    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
96	[BUG]  [BUGGY]  char[]  buffer  =  new  char[end  -  start  +  1];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[end  -  start  +  1];  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[end  -  start  +  1];	  char[]    buffer    =    new    char[count    -    start    +    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
97	[BUG]  [BUGGY]  char  count  =  chars.nextInt(start);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  chars.nextInt(start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  chars.nextInt(start);	  int    count    =    chars.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
98	[BUG]  [BUGGY]  char  count  =  chars.nextInt(end);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  chars.nextInt(end);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  chars.nextInt(end);	  int    count    =    chars.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
99	[BUG]  [BUGGY]  char[]  buffer  =  new  char[1024  *  1024];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[1024  *  1024];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[1024  *  1024];	  char[]    buffer    =    new    char[1024];    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
100	[BUG]  [BUGGY]  char[]  buffer  =  new  char[1024  +  start];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[1024  +  start];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[1024  +  start];	  char[]    buffer    =    new    char[1024];    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
101	[BUG]  [BUGGY]  int  count  =  random.numbers  -  end;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numbers  -  end;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numbers  -  end;	  int    count    =    end    -    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
102	[BUG]  [BUGGY]  int  count  =  random.count  -  end;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.count  -  end;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.count  -  end;	  int    count    =    end    -    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
103	[BUG]  [BUGGY]  int  count  =  random.numberCount  -  end;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numberCount  -  end;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numberCount  -  end;	  int    count    =    end    -    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
104	[BUG]  [BUGGY]  char[]  buffer  =  new  char[size()  -  1];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[size()  -  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[size()  -  1];	  char[]    buffer    =    new    char[size()    ];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
105	[BUG]  [BUGGY]  char[]  buffer  =  new  char[size()  +  1];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[size()  +  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[size()  +  1];	  char[]    buffer    =    new    char[size()    ];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
106	[BUG]  [BUGGY]  char[]  buffer  =  new  char[size()  *  2];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[size()  *  2];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[size()  *  2];	  char[]    buffer    =    new    char[size()    ];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
107	[BUG]  [BUGGY]  char[]  buffer  =  new  char[count()  ];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[count()  ];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[count()  ];	  char[]    buffer    =    new    char[size()    ];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
108	[BUG]  [BUGGY]  char[]  buffer  =  new  char[end  -  1];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[end  -  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[end  -  1];	  char[]    buffer    =    new    char[length    -    1];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
109	[BUG]  [BUGGY]  char[]  buffer  =  new  char[length()  ];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[length()  ];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[length()  ];	  char[]    buffer    =    new    char[size()    ];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
110	[BUG]  [BUGGY]  char[]  buffer  =  random.getBuffer(start,  start);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getBuffer(start,  start);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getBuffer(start,  start);	  char[]    buffer    =    random.getBuffer(start,    end);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
111	[BUG]  [BUGGY]  int  count  =  chars.nextInt(start,  end);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.nextInt(start,  end);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.nextInt(start,  end);	  int    count    =    chars.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
112	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  start);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  ch  =  random.nextInt(start,  start);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  ch  =  random.nextInt(start,  start);	  char    ch    =    random.nextInt(start);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
113	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getChars(start,  start);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getChars(start,  start);	  char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
114	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getChars(start,  end,  0);	  char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
115	[BUG]  [BUGGY]  char[]  buffer  =  random.getBinaryBuffer();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getBinaryBuffer();  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getBinaryBuffer();	  char[]    buffer    =    random.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
116	[BUG]  [BUGGY]  char[]  buffer  =  new  char[5];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[5];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[5];	  char[]    buffer    =    new    char[2];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
117	[BUG]  [BUGGY]  int  count  =  start  -  random.numbers;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  start  -  random.numbers;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  start  -  random.numbers;	  int    count    =    end    -    random.numbers;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
118	[BUG]  [BUGGY]  char  count  =  random.nextInt(gap  +  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  random.nextInt(gap  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  random.nextInt(gap  +  1);	  char    count    =    random.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
119	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  start];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  start];  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  *  start];	  char[]    buffer    =    new    char[buffer.length    -    start];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
120	[BUG]  [BUGGY]  int  count  =  chars.length  -  2  +  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  -  2  +  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  -  2  +  1;	  int    count    =    chars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
121	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  -  1  +  start];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  -  1  +  start];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  -  1  +  start];	  char[]    buffer    =    new    char[buffer.length    -    1];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
122	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  *  2];	  char[]    buffer    =    new    char[buffer.length];    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
123	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  start];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  start];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  +  start];	  char[]    buffer    =    new    char[buffer.length];    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
124	[BUG]  [BUGGY]  char[]  buffer  =  new  char[4096];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[4096];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[4096];	  char[]    buffer    =    new    char[1024];    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
125	[BUG]  [BUGGY]  int  count  =  end  -  start,  random.numbers;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  end  -  start,  random.numbers;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  end  -  start,  random.numbers;	  int    count    =    random.numbers    -    start,    end;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
126	[BUG]  [BUGGY]  int  count  =  RANDOM.numbers  -  start,  end;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  RANDOM.numbers  -  start,  end;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  RANDOM.numbers  -  start,  end;	  int    count    =    random.numbers    -    start,    end;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
127	[BUG]  [BUGGY]  int  count  =  chars.nextInt(start  +  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.nextInt(start  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.nextInt(start  +  1);	  int    count    =    chars.nextInt(start);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
128	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffers.length  +  1];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffers.length  +  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffers.length  +  1];	  char[]    buffer    =    new    char[numbers    +    1];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
129	[BUG]  [BUGGY]  int  count  =  random.numbers  -  1  +  start;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.numbers  -  1  +  start;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.numbers  -  1  +  start;	  int    count    =    random.numbers    -    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
130	[BUG]  [BUGGY]  char[]  buffer  =  new  char[start  -  1];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[start  -  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[start  -  1];	  char[]    buffer    =    new    char[numbers    -    1];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
131	[BUG]  [BUGGY]  int  count  =  random.nextInt(start  +  1,  end  +  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start  +  1,  end  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start  +  1,  end  +  1);	  int    count    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
132	[BUG]  [BUGGY]  char  ch  =  random.nextInt(start,  end  -  start);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  ch  =  random.nextInt(start,  end  -  start);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  ch  =  random.nextInt(start,  end  -  start);	  char    ch    =    random.nextInt(start,    end);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
133	[BUG]  [BUGGY]  int  count  =  chars.length  -  1L;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  -  1L;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  -  1L;	  int    count    =    chars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
134	[BUG]  [BUGGY]  char[]  buffer  =  new  char[128  +  start];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[128  +  start];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[128  +  start];	  char[]    buffer    =    new    char[128];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
135	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  end  -  1  +  start);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  end  -  1  +  start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  end  -  1  +  start);	  int    count    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
136	[BUG]  [BUGGY]  int  count  =  random.nextInt(start,  start,  end  -  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(start,  start,  end  -  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(start,  start,  end  -  1);	  int    count    =    random.nextInt(start,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
137	[BUG]  [BUGGY]  char  count  =  chars.length  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  chars.length  +  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  chars.length  +  1;	  char    count    =    chars.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
138	[BUG]  [BUGGY]  char  count  =  chars[count.length];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char  count  =  chars[count.length];  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char  count  =  chars[count.length];	  char    count    =    chars.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
139	[BUG]  [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  0);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  0);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  0);	  char[]    buffer    =    RandomStringUtils.getBufferedChars(buffer,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
140	[BUG]  [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  count);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  count);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  count);	  char[]    buffer    =    RandomStringUtils.getBufferedChars(buffer,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
141	[BUG]  [BUGGY]  int  count  =  chars.numbers  -  end;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.numbers  -  end;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.numbers  -  end;	  int    count    =    chars.numbers    -    start;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
142	[BUG]  [BUGGY]  int  count  =  chars.length  -  1  ||(numbers  &&  Character.isLetter(ch));  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  -  1  ||(numbers  &&  Character.isLetter(ch));  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  -  1  ||(numbers  &&  Character.isLetter(ch));	  int    count    =    chars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
143	[BUG]  [BUGGY]  int  count  =  chars.get(random.nextInt(gap));  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.get(random.nextInt(gap));  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.get(random.nextInt(gap));	  int    count    =    chars.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
144	[BUG]  [BUGGY]  int  count  =  chars.nextInt(gap  +  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.nextInt(gap  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.nextInt(gap  +  1);	  int    count    =    chars.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
145	[BUG]  [BUGGY]  int  count  =  chars.indexOf(ch);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.indexOf(ch);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.indexOf(ch);	  int    count    =    chars.nextInt(gap);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
146	[BUG]  [BUGGY]  int  count  =  random.nextInt(ch,  start,  end);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(ch,  start,  end);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(ch,  start,  end);	  int    count    =    random.nextInt(gap,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
147	[BUG]  [BUGGY]  int  count  =  random.nextInt(gap,  start,  end  -  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(gap,  start,  end  -  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(gap,  start,  end  -  1);	  int    count    =    random.nextInt(gap,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
148	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffered.length  -  start];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffered.length  -  start];  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffered.length  -  start];	  char[]    buffer    =    new    char[buffer.length    -    start];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
149	[BUG]  [BUGGY]  int  count  =  chars.nextInt(gap,  end);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.nextInt(gap,  end);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.nextInt(gap,  end);	  int    count    =    random.nextInt(gap,    end);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
150	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  3];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  3];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffer.length  +  3];	  char[]    buffer    =    new    char[buffer.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
151	[BUG]  [BUGGY]  int  count  =  random.nextInt(gap,  start  +  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(gap,  start  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(gap,  start  +  1);	  int    count    =    random.nextInt(gap,    start);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
152	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffers.length  -  1];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  new  char[buffers.length  -  1];  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  new  char[buffers.length  -  1];	  char[]    buffer    =    new    char[numbers    -    1];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
153	[BUG]  [BUGGY]  char[]  buffer  =  random.getBuffer(start,  end,  0);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getBuffer(start,  end,  0);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getBuffer(start,  end,  0);	  char[]    buffer    =    random.getBuffer(start,    end);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
154	[BUG]  [BUGGY]  char[]  buffer  =  random.getBytes(start,  end);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  random.getBytes(start,  end);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  random.getBytes(start,  end);	  char[]    buffer    =    random.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
155	[BUG]  [BUGGY]  int  count  =  random.nextInt(gap  +  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(gap  +  1);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(gap  +  1);	  int    count    =    random.nextInt(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
156	[BUG]  [BUGGY]  String  ch  =  random.nextInt(start);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  String  ch  =  random.nextInt(start);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	String  ch  =  random.nextInt(start);	  char    ch    =    random.nextInt(start);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
157	[BUG]  [BUGGY]  int  count  =  random.nextInt(gap,  end  -  start);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  random.nextInt(gap,  end  -  start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  random.nextInt(gap,  end  -  start);	  int    count    =    random.nextInt(start,    end    -    start);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
158	[BUG]  [BUGGY]  int  count  =  this.random.numbers  -  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  this.random.numbers  -  1;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  this.random.numbers  -  1;	  int    count    =    random.numbers    -    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
159	[BUG]  [BUGGY]  Char  count  =  chars.length;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  Char  count  =  chars.length;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	Char  count  =  chars.length;	  char    count    =    chars.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
160	[BUG]  [BUGGY]  int  count  =  chars.numbers  /  random.nextInt(start);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.numbers  /  random.nextInt(start);  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.numbers  /  random.nextInt(start);	  int    count    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
161	[BUG]  [BUGGY]  int  count  =  end  /  random.numbers;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  end  /  random.numbers;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  end  /  random.numbers;	  int    count    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
162	[BUG]  [BUGGY]  int  count  =  chars.length  /  random.numbers;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  /  random.numbers;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  /  random.numbers;	  int    count    =    random.numbers    /    start;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
163	[BUG]  [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(chars,  start,  end);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(chars,  start,  end);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  RandomStringUtils.getBufferedChars(chars,  start,  end);	  char[]    buffer    =    RandomStringUtils.getBufferedChars(buffer,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
164	[BUG]  [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  chars.length);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  chars.length);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  chars.length);	  char[]    buffer    =    RandomStringUtils.getBufferedChars(buffer,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
165	[BUG]  [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  letters);  [BUGGY]      int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	char[]  buffer  =  RandomStringUtils.getBufferedChars(buffer,  start,  end,  letters);	  char[]    buffer    =    RandomStringUtils.getBufferedChars(buffer,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
166	[BUG]  [BUGGY]  int  count  =  chars.length  -  start,  end;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }      [BUGGY]  int  count  =  chars.length  -  start,  end;  [BUGGY]      char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	int  count  =  chars.length  -  start,  end;	  int    count    =    random.numbers    -    start,    end;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
