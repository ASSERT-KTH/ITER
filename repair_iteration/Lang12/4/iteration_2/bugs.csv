bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(0,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  start);	      char    ch    =    random.getChars(start,    start);    	non-compiled	[CE]  	17	None	replace
2	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  count);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(0,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  count);	      char    ch    =    random.getChars(start,    start);    	non-compiled	[CE]  	17	None	replace
3	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  0,  start);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(0,  0,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  0,  start);	      char    ch    =    random.getChars(start,    start);    	non-compiled	[CE]  	17	None	replace
4	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars();  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars();  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars();	      char[]    buffer    =    random.chars();    	non-compiled	[CE]  	3	None	replace
5	[BUG]  [BUGGY]  char[]  buffer  =  random.toCharArray();  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.toCharArray();  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.toCharArray();	      char[]    buffer    =    random.chars();    	non-compiled	[CE]  	3	None	replace
6	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(0,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  count);	      char[]    buffer    =    random.chars();    	non-compiled	[CE]  	3	None	replace
7	[BUG]  [BUGGY]  char  ch  =  random.getChars(count);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(count);	      char    ch    =    random.getChars(start);    	non-compiled	[CE]  	18	None	replace
8	[BUG]  [BUGGY]  char  ch  =  random.getChars(buffer,  start);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(buffer,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(buffer,  start);	      char    ch    =    random.getChars(start);    	non-compiled	[CE]  	18	None	replace
9	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  +  1);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	2	None	replace
10	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	2	None	replace
11	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  -  1);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	2	None	replace
12	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  0,  count);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	2	None	replace
13	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  count  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(start,  count  +  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  count  +  1);	      char    ch    =    random.getChars(start,    count);    	non-compiled	[CE]  	20	None	replace
14	[BUG]  [BUGGY]  char  ch  =  random.getChars(count,  start);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(count,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(count,  start);	      char    ch    =    random.getChars(start,    count);    	non-compiled	[CE]  	20	None	replace
15	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  1);	      char[]    buffer    =    random.getChars(ch,    start,    count);    	non-compiled	[CE]  	5	None	replace
16	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  count  +  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  count  +  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  count  +  1);	      char[]    buffer    =    random.getChars(ch,    start,    count);    	non-compiled	[CE]  	5	None	replace
17	[BUG]  [BUGGY]  char[]  buffer,  0,  chars);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer,  0,  chars);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  chars);	      char[]    buffer,    chars);    	non-compiled	[CE]  	12	None	replace
18	[BUG]  [BUGGY]  char[]  buffer,  new  char[count]);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer,  new  char[count]);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  new  char[count]);	      char[]    buffer,    chars);    	non-compiled	[CE]  	12	None	replace
19	[BUG]  [BUGGY]  char[]  buffer,  0,  chars.length);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer,  0,  chars.length);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  chars.length);	      char[]    buffer,    chars);    	non-compiled	[CE]  	12	None	replace
20	[BUG]  [BUGGY]  char[]  buffer,  chars,  random);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer,  chars,  random);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  chars,  random);	      char[]    buffer,    chars);    	non-compiled	[CE]  	12	None	replace
21	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  count  + "  is  less  than  0. ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  count  + "  is  less  than  0. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  count  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	7	None	replace
22	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  ch  + "  is  less  than  0.   ");  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  ch  + "  is  less  than  0.   ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  ch  + "  is  less  than  0.   ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	7	None	replace
23	[BUG]  [BUGGY]  Random  random  =  random.nullValue()  +  1;  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nullValue()  +  1;  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nullValue()  +  1;	      Random    random    =    random.nullValue();    	non-compiled	[CE]  	1	None	replace
24	[BUG]  [BUGGY]  Random  random  =  RANDOM.nullValue();  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  RANDOM.nullValue();  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  RANDOM.nullValue();	      Random    random    =    random.nullValue();    	non-compiled	[CE]  	1	None	replace
25	[BUG]  [BUGGY]  Random  random  =  random.nullValue()  -  1;  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nullValue()  -  1;  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nullValue()  -  1;	      Random    random    =    random.nullValue();    	non-compiled	[CE]  	1	None	replace
26	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  end);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end);	      char[]    buffer    =    random.getChars(start,    count);    	non-compiled	[CE]  	10	None	replace
27	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(count,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(count,  start);	      char[]    buffer    =    random.getChars(start,    count);    	non-compiled	[CE]  	10	None	replace
28	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  start,  end);	      Random    random    =    random.nextInt(start,    end);    	non-compiled	[CE]  	14	None	replace
29	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  count);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(0,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  count);	      Random    random    =    random.nextInt(start,    end);    	non-compiled	[CE]  	14	None	replace
30	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(1,  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  1);	      Random    random    =    random.nextInt(start,    end);    	non-compiled	[CE]  	14	None	replace
31	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(0,  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  1);	      Random    random    =    random.nextInt(start,    end);    	non-compiled	[CE]  	14	None	replace
32	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0. ");  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	6	None	replace
33	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  0. ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  0. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	6	None	replace
34	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1.0 ");  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1.0 ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	6	None	replace
35	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0. ");  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	15	None	replace
36	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0. ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	15	None	replace
37	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0. ");  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	15	None	replace
38	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0 ");  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0 ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	15	None	replace
39	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  	11	None	replace
40	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(0,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  start);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  	11	None	replace
41	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  	11	None	replace
42	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end  +  1);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(start,  end  +  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  end  +  1);	      char    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  	16	None	replace
43	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  1);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(0,  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  1);	      char    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  	16	None	replace
44	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start,  count);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(ch,  start,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  start,  count);	      Random    random    =    random.nextInt(start,    count);    	non-compiled	[CE]  	13	None	replace
45	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(1,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  count);	      Random    random    =    random.nextInt(start,    count);    	non-compiled	[CE]  	13	None	replace
46	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0. ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	9	None	replace
47	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  letters);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	4	None	replace
48	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end  +  1);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	4	None	replace
49	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	4	None	replace
50	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  1);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	4	None	replace
51	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.0. ");  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.0. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    count    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	8	None	replace
52	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.0 ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.0 ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    count    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	8	None	replace
53	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.0 ");  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.0 ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    count    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	8	None	replace
54	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(len));  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(len));  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toLowerCase(len));	      char    ch    =    random.quoteChar(ch);    	non-compiled	[CE]  	19	None	replace
55	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH));  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH));  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH));	      char    ch    =    random.quoteChar(ch);    	non-compiled	[CE]  	19	None	replace
56	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(count));  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(count));  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toLowerCase(count));	      char    ch    =    random.quoteChar(ch);    	non-compiled	[CE]  	19	None	replace
57	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.valueOf(count));  [CE]  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.quoteChar(Character.valueOf(count));  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.valueOf(count));	      char    ch    =    random.quoteChar(ch);    	non-compiled	[CE]  	19	None	replace
58	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start,  end);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(start,  start,  end);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  start,  end);	      char    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  	16	None	replace
59	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  1);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(start,  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  1);	      char    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  	16	None	replace
60	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0 ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0 ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	9	None	replace
61	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1. ");  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	9	None	replace
62	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.01 ");  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.01 ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.01 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	9	None	replace
63	[BUG]  [BUGGY]  Random  random  =  random.nextInt(4,  count);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(4,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(4,  count);	      Random    random    =    random.nextInt(start,    count);    	non-compiled	[CE]  	13	None	replace
64	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  0);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	4	None	replace
65	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	4	None	replace
66	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  0);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  0);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  0);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	4	None	replace
67	[BUG]  [BUGGY]  Random  random  =  random.nullValue(0);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nullValue(0);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nullValue(0);	      Random    random    =    random.nullValue();    	non-compiled	[CE]  	1	None	replace
68	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  length);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  length);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  length);	      char[]    buffer    =    random.getChars(ch,    start,    count);    	non-compiled	[CE]  	5	None	replace
69	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start  +  1);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(start,  start  +  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  start  +  1);	      char    ch    =    random.getChars(start,    start);    	non-compiled	[CE]  	17	None	replace
70	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0 ");  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0 ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	15	None	replace
71	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1. ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	15	None	replace
72	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0. ");  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	15	None	replace
73	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  0.   ");  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  0.   ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  0.   ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	15	None	replace
74	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.   ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.   ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.   ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	7	None	replace
75	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  0,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(start,  0,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  0,  count);	      char    ch    =    random.getChars(start,    count);    	non-compiled	[CE]  	20	None	replace
76	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  end  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(start,  end  +  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(start,  end  +  1);	      Random    random    =    random.nextInt(start,    end);    	non-compiled	[CE]  	14	None	replace
77	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  end  -  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(start,  end  -  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(start,  end  -  1);	      Random    random    =    random.nextInt(start,    end);    	non-compiled	[CE]  	14	None	replace
78	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  start);  [CE]  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(0,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  start);	      Random    random    =    random.nextInt(start,    end);    	non-compiled	[CE]  	14	None	replace
79	[BUG]  [BUGGY]  char  ch  =  random.getChars(start  +  1);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(start  +  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start  +  1);	      char    ch    =    random.getChars(start);    	non-compiled	[CE]  	18	None	replace
80	[BUG]  [BUGGY]  char[]  buffer,  new  char[count  +  1]);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer,  new  char[count  +  1]);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  new  char[count  +  1]);	      char[]    buffer,    chars);    	non-compiled	[CE]  	12	None	replace
81	[BUG]  [BUGGY]  char[]  buffer,  0,  0);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer,  0,  0);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  0);	      char[]    buffer,    chars);    	non-compiled	[CE]  	12	None	replace
82	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH));  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH));  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH));	      char    ch    =    random.quoteChar(ch);    	non-compiled	[CE]  	19	None	replace
83	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.  chars.length ");  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.  chars.length ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.  chars.length ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	6	None	replace
84	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1. ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	6	None	replace
85	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  count);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  0,  count);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	2	None	replace
86	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	2	None	replace
87	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  end);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(0,  end);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  end);	      char    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  	16	None	replace
88	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start,  end);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(0,  start,  end);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  start,  end);	      char    ch    =    random.getChars(start,    end);    	non-compiled	[CE]  	16	None	replace
89	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.'));  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.'));  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase('.'));	      char    ch    =    random.quoteChar(ch);    	non-compiled	[CE]  	19	None	replace
90	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end,  count);	      char[]    buffer    =    random.getChars(ch,    start,    count);    	non-compiled	[CE]  	5	None	replace
91	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  count);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  start,  count);	      char[]    buffer    =    random.getChars(ch,    start,    count);    	non-compiled	[CE]  	5	None	replace
92	[BUG]  [BUGGY]  Random  random  =  this.random.nullValue();  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  this.random.nullValue();  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  this.random.nullValue();	      Random    random    =    random.nullValue();    	non-compiled	[CE]  	1	None	replace
93	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue());  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  new  Random(random.nullValue());  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  new  Random(random.nullValue());	      Random    random    =    random.nullValue();    	non-compiled	[CE]  	1	None	replace
94	[BUG]  [BUGGY]  char[]  buffer  =  random.getBytes(ch);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getBytes(ch);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getBytes(ch);	      char[]    buffer    =    random.chars();    	non-compiled	[CE]  	3	None	replace
95	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  0.   ");  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  0.   ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  0.   ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	6	None	replace
96	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1: ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1: ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1: ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	6	None	replace
97	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  1);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  1);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	4	None	replace
98	[BUG]  [BUGGY]  char  ch  =  random.getChars(buffer,  start,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  char  ch  =  random.getChars(buffer,  start,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(buffer,  start,  count);	      char    ch    =    random.getChars(start,    count);    	non-compiled	[CE]  	20	None	replace
99	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1. ");  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	15	None	replace
100	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  Random  random  =  random.nextInt(ch,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  start);	      Random    random    =    random.nextInt(start,    count);    	non-compiled	[CE]  	13	None	replace
101	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0. ");  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0. ");  [BUGGY]    }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    count    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	8	None	replace
