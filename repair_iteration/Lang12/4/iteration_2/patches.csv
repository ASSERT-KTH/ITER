bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0 ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.length    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	38	None	replace
2	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0. ");  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.length    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	38	None	replace
3	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0.0 ");  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.length    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	38	None	replace
4	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0. ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0. ");	  Throwables.throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	72	None	replace
5	[BUG]  [BUGGY]  String  ch  =  random.getChars(count,  start);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  String  ch  =  random.getChars(count,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	String  ch  =  random.getChars(count,  start);	  char    ch    =    random.getChars(count,    start);    	non-compiled	[CE]  	14	None	replace
6	[BUG]  [BUGGY]  Random  random  =  random.nullValue()  /  1;  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nullValue()  /  1;  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nullValue()  /  1;	  Random    random    =    random.nullValue()    +    1;    	non-compiled	[CE]  	23	None	replace
7	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  count  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  count  +  1);	  char    ch    =    random.getChars(start,    count    +    1);    	non-compiled	[CE]  	13	None	replace
8	[BUG]  [BUGGY]  char  ch  =  random.getChars(count,  start  +  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(count,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(count,  start  +  1);	  char    ch    =    random.getChars(start,    count    +    1);    	non-compiled	[CE]  	13	None	replace
9	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  0. ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.getName()    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	95	None	replace
10	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.getName()  + "  is  less  than  0. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.getName()  + "  is  less  than  0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.getName()  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.getName()    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	95	None	replace
11	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  0);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  0);	  Random    random    =    random.nextInt(0,    1);    	non-compiled	[CE]  	31	None	replace
12	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  2);  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  2);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  2);	  Random    random    =    random.nextInt(0,    1);    	non-compiled	[CE]  	31	None	replace
13	[BUG]  [BUGGY]  char[]  buffer  =  random.getBytes(count);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getBytes(count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getBytes(count);	  char[]    buffer    =    random.getBytes(ch);    	non-compiled	[CE]  	94	None	replace
14	[BUG]  [BUGGY]  char[]  buffer  =  random.getBytes(ch,  count);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getBytes(ch,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getBytes(ch,  count);	  char[]    buffer    =    random.getBytes(ch);    	non-compiled	[CE]  	94	None	replace
15	[BUG]  [BUGGY]  char[]  buffer  =  random.getBytes(ch,  start);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getBytes(ch,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getBytes(ch,  start);	  char[]    buffer    =    random.getBytes(ch);    	non-compiled	[CE]  	94	None	replace
16	[BUG]  [BUGGY]  char[]  buffer  =  random.getBytes(ch,  0,  count);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getBytes(ch,  0,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getBytes(ch,  0,  count);	  char[]    buffer    =    random.getBytes(ch);    	non-compiled	[CE]  	94	None	replace
17	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  0,  end);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  0,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  0,  end);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  	58	None	replace
18	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  0,  start,  end);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  0,  start,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  0,  start,  end);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  	58	None	replace
19	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  0,  0,  0);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  0,  0,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  0,  0,  0);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  	58	None	replace
20	[BUG]  [BUGGY]  char  ch  =  random.getChars(count,  start,  end);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(count,  start,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(count,  start,  end);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  	58	None	replace
21	[BUG]  [BUGGY]  char[]  buffer  =  random.toString();  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.toString();  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.toString();	  char[]    buffer    =    random.toCharArray();    	non-compiled	[CE]  	5	None	replace
22	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  count  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  count  +  1);	  char[]    buffer    =    random.getChars(0,    count);    	non-compiled	[CE]  	6	None	replace
23	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  count  +  2);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  count  +  2);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  count  +  2);	  char[]    buffer    =    random.getChars(0,    count);    	non-compiled	[CE]  	6	None	replace
24	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  1);	  char[]    buffer    =    random.getChars(0,    count);    	non-compiled	[CE]  	6	None	replace
25	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  count  -  1);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  count  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  count  -  1);	  char[]    buffer    =    random.getChars(0,    count);    	non-compiled	[CE]  	6	None	replace
26	[BUG]  [BUGGY]  char  ch  =  random.getChars(count,  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(count,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(count,  1);	  char    ch    =    random.getChars(start,    1);    	non-compiled	[CE]  	59	None	replace
27	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  1L);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  1L);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  1L);	  char    ch    =    random.getChars(start,    1);    	non-compiled	[CE]  	59	None	replace
28	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch);	  char[]    buffer    =    random.getChars();    	non-compiled	[CE]  	4	None	replace
29	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0);	  char[]    buffer    =    random.getChars();    	non-compiled	[CE]  	4	None	replace
30	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  end  +  1);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  end  +  1);	  char    ch    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  	42	None	replace
31	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end  +  1,  count);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  end  +  1,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  end  +  1,  count);	  char    ch    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  	42	None	replace
32	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  ch);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  ch);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  0,  ch);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  	65	None	replace
33	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end,  1);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  	65	None	replace
34	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.01 ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.01 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.01 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.01   ");    	non-compiled	[CE]  	62	None	replace
35	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1 ");  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.01   ");    	non-compiled	[CE]  	62	None	replace
36	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  10000 ");  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  10000 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  10000 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.01   ");    	non-compiled	[CE]  	62	None	replace
37	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  0,  count);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  0,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  0,  count);	  char    ch    =    random.getChars(start,    0,    count);    	non-compiled	[CE]  	75	None	replace
38	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  0,  count  +  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  0,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  0,  count  +  1);	  char    ch    =    random.getChars(start,    0,    count);    	non-compiled	[CE]  	75	None	replace
39	[BUG]  [BUGGY]  char  ch  =  random.getChars(buffer,  0,  count);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(buffer,  0,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(buffer,  0,  count);	  char    ch    =    random.getChars(start,    0,    count);    	non-compiled	[CE]  	75	None	replace
40	[BUG]  [BUGGY]  char  ch  =  random.getChars(count,  0,  start);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(count,  0,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(count,  0,  start);	  char    ch    =    random.getChars(start,    0,    count);    	non-compiled	[CE]  	75	None	replace
41	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  0,  count  +  1);	  char[]    buffer    =    random.getChars(0,    0,    count);    	non-compiled	[CE]  	12	None	replace
42	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count  -  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  0,  count  -  1);	  char[]    buffer    =    random.getChars(0,    0,    count);    	non-compiled	[CE]  	12	None	replace
43	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  1,  count);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  1,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  1,  count);	  char[]    buffer    =    random.getChars(0,    0,    count);    	non-compiled	[CE]  	12	None	replace
44	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count  +  2);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count  +  2);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  0,  count  +  2);	  char[]    buffer    =    random.getChars(0,    0,    count);    	non-compiled	[CE]  	12	None	replace
45	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  2);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  2);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  2);	  char[]    buffer    =    random.getChars(ch,    start,    end,    1);    	non-compiled	[CE]  	97	None	replace
46	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  3);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  3);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  3);	  char[]    buffer    =    random.getChars(ch,    start,    end,    1);    	non-compiled	[CE]  	97	None	replace
47	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  4);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  4);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  4);	  char[]    buffer    =    random.getChars(ch,    start,    end,    1);    	non-compiled	[CE]  	97	None	replace
48	[BUG]  [BUGGY]  char  ch  =  random.getChars(count  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(count  +  1);	  char    ch    =    random.getChars(count);    	non-compiled	[CE]  	7	None	replace
49	[BUG]  [BUGGY]  char  ch  =  random.getChars(buffer,  count);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(buffer,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(buffer,  count);	  char    ch    =    random.getChars(count);    	non-compiled	[CE]  	7	None	replace
50	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  4);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  4);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end,  4);	  char[]    buffer    =    random.getChars(start,    end,    count);    	non-compiled	[CE]  	90	None	replace
51	[BUG]  [BUGGY]  Random  random  =(this.random!=  null)?  null  :  this.random.nullValue();  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =(this.random!=  null)?  null  :  this.random.nullValue();  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =(this.random!=  null)?  null  :  this.random.nullValue();	  Random    random    =    this.random.nullValue();    	non-compiled	[CE]  	92	None	replace
52	[BUG]  [BUGGY]  Random  random  =(Random)this.random.nullValue();  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =(Random)this.random.nullValue();  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =(Random)this.random.nullValue();	  Random    random    =    this.random.nullValue();    	non-compiled	[CE]  	92	None	replace
53	[BUG]  [BUGGY]  char[]  buffer,  new  char[count  -  1]);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  new  char[count  -  1]);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  new  char[count  -  1]);	  char[]    buffer,    new    char[count]);    	non-compiled	[CE]  	18	None	replace
54	[BUG]  [BUGGY]  char[]  buffer,  new  char[count  *  2]);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  new  char[count  *  2]);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  new  char[count  *  2]);	  char[]    buffer,    new    char[count]);    	non-compiled	[CE]  	18	None	replace
55	[BUG]  [BUGGY]  char[]  buffer,  new  char[count  +  2]);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  new  char[count  +  2]);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  new  char[count  +  2]);	  char[]    buffer,    new    char[count]);    	non-compiled	[CE]  	18	None	replace
56	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(chars));  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(chars));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toLowerCase(chars));	  char    ch    =    random.quoteChar(Character.toLowerCase(count));    	non-compiled	[CE]  	56	None	replace
57	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(count));  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(count));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(count));	  char    ch    =    random.quoteChar(Character.toLowerCase(count));    	non-compiled	[CE]  	56	None	replace
58	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(offset));  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(offset));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toLowerCase(offset));	  char    ch    =    random.quoteChar(Character.toLowerCase(count));    	non-compiled	[CE]  	56	None	replace
59	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  0);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end,  0);	  char[]    buffer    =    random.getChars(ch,    start,    end,    0);    	non-compiled	[CE]  	64	None	replace
60	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  0,  0);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  0,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  0,  0);	  char[]    buffer    =    random.getChars(ch,    start,    end,    0);    	non-compiled	[CE]  	64	None	replace
61	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0,  count);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  0,  count);	  char[]    buffer    =    random.getChars(ch,    start,    end,    0);    	non-compiled	[CE]  	64	None	replace
62	[BUG]  [BUGGY]  Random  random  =  random.nullValue(0,  count);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nullValue(0,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nullValue(0,  count);	  Random    random    =    random.nullValue(0);    	non-compiled	[CE]  	67	None	replace
63	[BUG]  [BUGGY]  Random  random  =  random.nullValue(1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nullValue(1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nullValue(1);	  Random    random    =    random.nullValue(0);    	non-compiled	[CE]  	67	None	replace
64	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.0. ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	53	None	replace
65	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.0 ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	53	None	replace
66	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  0.0 ");  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	53	None	replace
67	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  start);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(1,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  start);	  Random    random    =    random.nextInt(0,    start);    	non-compiled	[CE]  	78	None	replace
68	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  start  +  1);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  start  +  1);	  Random    random    =    random.nextInt(0,    start);    	non-compiled	[CE]  	78	None	replace
69	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  end);  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  end);	  Random    random    =    random.nextInt(0,    start);    	non-compiled	[CE]  	78	None	replace
70	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start,  end  +  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  start,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  start,  end  +  1);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  	88	None	replace
71	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  count,  end);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  count,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  count,  end);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  	88	None	replace
72	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start  +  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  start  +  1);	  char    ch    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  	69	None	replace
73	[BUG]  [BUGGY]  Random  random  =  RANDOM.nullValue()  +  1;  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  RANDOM.nullValue()  +  1;  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  RANDOM.nullValue()  +  1;	  Random    random    =    RANDOM.nullValue();    	non-compiled	[CE]  	24	None	replace
74	[BUG]  [BUGGY]  Random  random  =  RANDOM.nullValue(ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  RANDOM.nullValue(ch);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  RANDOM.nullValue(ch);	  Random    random    =    RANDOM.nullValue();    	non-compiled	[CE]  	24	None	replace
75	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  0,  start  +  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  0,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  0,  start  +  1);	  char    ch    =    random.getChars(0,    0,    start);    	non-compiled	[CE]  	3	None	replace
76	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  0,  count);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  0,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  0,  count);	  Random    random    =    random.nextInt(ch,    start,    count);    	non-compiled	[CE]  	44	None	replace
77	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  1,  count);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  1,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  1,  count);	  Random    random    =    random.nextInt(ch,    start,    count);    	non-compiled	[CE]  	44	None	replace
78	[BUG]  [BUGGY]  Random  random  =  random.nextInt(chars,  start,  count);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(chars,  start,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(chars,  start,  count);	  Random    random    =    random.nextInt(ch,    start,    count);    	non-compiled	[CE]  	44	None	replace
79	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  count);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  count);	  char[]    buffer    =    random.getChars(ch,    start,    end,    letters);    	non-compiled	[CE]  	47	None	replace
80	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  numbers);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  numbers);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  numbers);	  char[]    buffer    =    random.getChars(ch,    start,    end,    letters);    	non-compiled	[CE]  	47	None	replace
81	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters,  numbers);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters,  numbers);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  letters,  numbers);	  char[]    buffer    =    random.getChars(ch,    start,    end,    letters);    	non-compiled	[CE]  	47	None	replace
82	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  end  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(1,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  end  +  1);	  Random    random    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  	76	None	replace
83	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  end  +  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  end  +  1);	  Random    random    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  	76	None	replace
84	[BUG]  [BUGGY]  char[]  buffer,  0,  count);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  0,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  count);	  char[]    buffer,    0,    0);    	non-compiled	[CE]  	81	None	replace
85	[BUG]  [BUGGY]  char[]  buffer,  0,  count;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  0,  count;  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  count;	  char[]    buffer,    0,    0);    	non-compiled	[CE]  	81	None	replace
86	[BUG]  [BUGGY]  CharSequence[]  buffer,  0,  0);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  CharSequence[]  buffer,  0,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	CharSequence[]  buffer,  0,  0);	  char[]    buffer,    0,    0);    	non-compiled	[CE]  	81	None	replace
87	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.0. ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    count    +   "    is    less    than    0.0.   ");    	non-compiled	[CE]  	51	None	replace
88	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1.   ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1.   ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1.   ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    count    +   "    is    less    than    0.0.   ");    	non-compiled	[CE]  	51	None	replace
89	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  0. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    length:   "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	33	None	replace
90	[BUG]  [BUGGY]  char[]  buffer,  0,  buffer.length);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  0,  buffer.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  buffer.length);	  char[]    buffer,    0,    chars.length);    	non-compiled	[CE]  	19	None	replace
91	[BUG]  [BUGGY]  char[]  buffer,  0,  random.length);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  0,  random.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  random.length);	  char[]    buffer,    0,    chars.length);    	non-compiled	[CE]  	19	None	replace
92	[BUG]  [BUGGY]  char[]  buffer,  0,  chars.length  +  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  0,  chars.length  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  chars.length  +  1);	  char[]    buffer,    0,    chars.length);    	non-compiled	[CE]  	19	None	replace
93	[BUG]  [BUGGY]  char[]  buffer,  0,  chars.length  -  1);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  0,  chars.length  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  chars.length  -  1);	  char[]    buffer,    0,    chars.length);    	non-compiled	[CE]  	19	None	replace
94	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue(),  count);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue(),  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  new  Random(random.nullValue(),  count);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  	93	None	replace
95	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue()  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue()  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  new  Random(random.nullValue()  +  1);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  	93	None	replace
96	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue(),  number);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue(),  number);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  new  Random(random.nullValue(),  number);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  	93	None	replace
97	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1.0. ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1.0   ");    	non-compiled	[CE]  	34	None	replace
98	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1.0 ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1.0   ");    	non-compiled	[CE]  	34	None	replace
99	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.  chars.length ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.  chars.length ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.  chars.length ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.    chars.length   ");    	non-compiled	[CE]  	83	None	replace
100	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + ",  is  less  than  0.  chars.length ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + ",  is  less  than  0.  chars.length ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + ",  is  less  than  0.  chars.length ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.    chars.length   ");    	non-compiled	[CE]  	83	None	replace
101	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  1. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  1. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	71	None	replace
102	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1: ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1: ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1: ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	71	None	replace
103	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1.0 ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	71	None	replace
104	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end,  0);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  0,  end,  0);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  	66	None	replace
105	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end,  0);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start,  end,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  0,  start,  end,  0);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  	66	None	replace
106	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  0,  0);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  0,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  0,  0,  0);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  	66	None	replace
107	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  count  +  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  count  +  1);	  Random    random    =    random.nextInt(0,    count);    	non-compiled	[CE]  	29	None	replace
108	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  count  -  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  count  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  count  -  1);	  Random    random    =    random.nextInt(0,    count);    	non-compiled	[CE]  	29	None	replace
109	[BUG]  [BUGGY]  Random  random  =  random.nextInt(chars,  start,  end);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(chars,  start,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(chars,  start,  end);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  	28	None	replace
110	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  0,  start,  end);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  0,  start,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  0,  start,  end);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  	28	None	replace
111	[BUG]  [BUGGY]  Random  random  =  random.nextInt(chars,  0,  0);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(chars,  0,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(chars,  0,  0);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  	28	None	replace
112	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  1,  1);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  1,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  1,  1);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  	28	None	replace
113	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  ch);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  ch);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  ch);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  	39	None	replace
114	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start  +  1);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  	39	None	replace
115	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  buffer);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  buffer);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  buffer);	  char    ch    =    random.getChars(buffer,    start);    	non-compiled	[CE]  	8	None	replace
116	[BUG]  [BUGGY]  char  ch  =  random.getChars(buffer,  0,  start);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(buffer,  0,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(buffer,  0,  start);	  char    ch    =    random.getChars(buffer,    start);    	non-compiled	[CE]  	8	None	replace
117	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0. ",  chars);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0. ",  chars);  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0. ",  chars);	  Throwables.throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	32	None	replace
118	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.. ");	  Throwables.throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	32	None	replace
119	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  0,  1);	  char[]    buffer    =    random.getChars(ch,    0,    1);    	non-compiled	[CE]  	50	None	replace
120	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.valueOf(count  +  1));  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.valueOf(count  +  1));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.valueOf(count  +  1));	  char    ch    =    random.quoteChar(Character.valueOf(count));    	non-compiled	[CE]  	57	None	replace
121	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  *  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  *  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  *  1);	  char[]    buffer    =    random.getChars(ch,    0,    count    +    1);    	non-compiled	[CE]  	9	None	replace
122	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  count  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  count  +  1);	  char[]    buffer    =    random.getChars(ch,    0,    count    +    1);    	non-compiled	[CE]  	9	None	replace
123	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  2);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  2);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  2);	  char[]    buffer    =    random.getChars(ch,    start,    1);    	non-compiled	[CE]  	15	None	replace
124	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  3);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  3);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  3);	  char[]    buffer    =    random.getChars(ch,    start,    1);    	non-compiled	[CE]  	15	None	replace
125	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH),  count);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH),  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH),  count);	  char    ch    =    random.quoteChar(Character.toUpperCase(Locale.ENGLISH));    	non-compiled	[CE]  	82	None	replace
126	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH)+  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH)+  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH)+  1);	  char    ch    =    random.quoteChar(Character.toUpperCase(Locale.ENGLISH));    	non-compiled	[CE]  	82	None	replace
127	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH,  count));  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH,  count));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH,  count));	  char    ch    =    random.quoteChar(Character.toUpperCase(Locale.ENGLISH));    	non-compiled	[CE]  	82	None	replace
128	[BUG]  [BUGGY]  char  ch  =  random.getChars(1,  start);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(1,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(1,  start);	  char    ch    =    random.getChars(0,    start);    	non-compiled	[CE]  	1	None	replace
129	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  letters);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  letters);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end,  letters);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  	49	None	replace
130	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  count);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end,  count);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  	49	None	replace
131	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end  +  1);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end  +  1);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  	49	None	replace
132	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  numbers);  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  numbers);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end,  numbers);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  	49	None	replace
133	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(len  +  1));  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(len  +  1));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toLowerCase(len  +  1));	  char    ch    =    random.quoteChar(Character.toLowerCase(len));    	non-compiled	[CE]  	54	None	replace
134	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  length);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  length);	  char[]    buffer    =    random.getChars(ch,    start,    length);    	non-compiled	[CE]  	68	None	replace
135	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  count  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(1,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  count  +  1);	  Random    random    =    random.nextInt(1,    count);    	non-compiled	[CE]  	45	None	replace
136	[BUG]  [BUGGY]  Random  random  =  random.nextInt(2,  count);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(2,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(2,  count);	  Random    random    =    random.nextInt(1,    count);    	non-compiled	[CE]  	45	None	replace
137	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  0);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(1,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  0);	  Random    random    =    random.nextInt(1,    count);    	non-compiled	[CE]  	45	None	replace
138	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start  -  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  start  -  1);	  Random    random    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  	77	None	replace
139	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  end  -  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  end  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  end  -  1);	  Random    random    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  	77	None	replace
140	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0. ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.0.   ");    	non-compiled	[CE]  	101	None	replace
141	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0.0. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  0.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.0.   ");    	non-compiled	[CE]  	101	None	replace
142	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  count  + "  is  less  than  0. ",  chars);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  count  + "  is  less  than  0. ",  chars);  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  count  + "  is  less  than  0. ",  chars);	  Throwables.throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	21	None	replace
143	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  ch  + "  is  less  than  0. ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  ch  + "  is  less  than  0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  ch  + "  is  less  than  0. ");	  Throwables.throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	21	None	replace
144	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    random    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	74	None	replace
145	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  chars  + "  is  less  than  0. ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  chars  + "  is  less  than  0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  chars  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    random    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	74	None	replace
146	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  	40	None	replace
147	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  end);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  end);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  	40	None	replace
148	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  count);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start  +  1,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  start  +  1,  count);	  char[]    buffer    =    random.getChars(0,    start);    	non-compiled	[CE]  	40	None	replace
149	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  ch  + "  is  less  than  0. ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  ch  + "  is  less  than  0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  ch  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    ch    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	22	None	replace
150	[BUG]  [BUGGY]  char[]  buffer,  0,  random);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  0,  random);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  random);	  char[]    buffer,    chars,    random);    	non-compiled	[CE]  	20	None	replace
151	[BUG]  [BUGGY]  char[]  buffer,  ch,  random);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  ch,  random);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  ch,  random);	  char[]    buffer,    chars,    random);    	non-compiled	[CE]  	20	None	replace
152	[BUG]  [BUGGY]  char[]  buffer,  chars,  0,  random);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  chars,  0,  random);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  chars,  0,  random);	  char[]    buffer,    chars,    random);    	non-compiled	[CE]  	20	None	replace
153	[BUG]  [BUGGY]  char[]  buffer,  chars,  0,  random.length);  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  chars,  0,  random.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  chars,  0,  random.length);	  char[]    buffer,    chars,    random);    	non-compiled	[CE]  	20	None	replace
154	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  0);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  0);	  char    ch    =    random.getChars(0,    1);    	non-compiled	[CE]  	43	None	replace
155	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  2);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  2);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  2);	  char    ch    =    random.getChars(0,    1);    	non-compiled	[CE]  	43	None	replace
156	[BUG]  [BUGGY]  char  ch  =  random.getChars(0);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0);	  char    ch    =    random.getChars(0,    1);    	non-compiled	[CE]  	43	None	replace
157	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(count,  1);	  char[]    buffer    =    random.getChars(count,    start);    	non-compiled	[CE]  	27	None	replace
158	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  count  +  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  0,  count  +  1);	  char[]    buffer    =    random.getChars(start,    0,    count);    	non-compiled	[CE]  	85	None	replace
159	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  end);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  0,  end);	  char[]    buffer    =    random.getChars(start,    0,    count);    	non-compiled	[CE]  	85	None	replace
160	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  1.0 ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  1.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  1.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	61	None	replace
161	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1.0 ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	61	None	replace
162	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0 ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	60	None	replace
163	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  0.0 ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	60	None	replace
164	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  0. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  0. ");	  Throwables.throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	46	None	replace
165	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1. ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.length    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	99	None	replace
166	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  2);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(1,  2);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  2);	  Random    random    =    random.nextInt(1,    1);    	non-compiled	[CE]  	30	None	replace
167	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1: "  +  chars);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1: "  +  chars);  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1: "  +  chars);	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1:   ");    	non-compiled	[CE]  	96	None	replace
168	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  1: ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  1: ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  1: ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1:   ");    	non-compiled	[CE]  	96	None	replace
169	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1: ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1: ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1: ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1:   ");    	non-compiled	[CE]  	96	None	replace
170	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	84	None	replace
171	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  1. ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  1. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  count  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	84	None	replace
172	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  1);	  Random    random    =    random.nextInt(ch,    start);    	non-compiled	[CE]  	100	None	replace
173	[BUG]  [BUGGY]  Random  random  =  random.nextInt(chars,  start);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(chars,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(chars,  start);	  Random    random    =    random.nextInt(ch,    start);    	non-compiled	[CE]  	100	None	replace
174	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  1,  start);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  1,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  1,  start);	  Random    random    =    random.nextInt(ch,    start);    	non-compiled	[CE]  	100	None	replace
175	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.',  count));  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.',  count));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase('.',  count));	  char    ch    =    random.quoteChar(Character.toUpperCase('.'));    	non-compiled	[CE]  	89	None	replace
176	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.')+  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.')+  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase('.')+  1);	  char    ch    =    random.quoteChar(Character.toUpperCase('.'));    	non-compiled	[CE]  	89	None	replace
177	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase('.',  count));  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase('.',  count));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toLowerCase('.',  count));	  char    ch    =    random.quoteChar(Character.toUpperCase('.'));    	non-compiled	[CE]  	89	None	replace
178	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.'),  count);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.'),  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase('.'),  count);	  char    ch    =    random.quoteChar(Character.toUpperCase('.'));    	non-compiled	[CE]  	89	None	replace
179	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  count  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  count  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  	48	None	replace
180	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1,  count);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end  +  1,  count);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  	48	None	replace
181	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end  +  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  end  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  	48	None	replace
182	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  1);	  char[]    buffer    =    random.getChars(ch,    0,    count    -    1);    	non-compiled	[CE]  	11	None	replace
183	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  0);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  0);	  char[]    buffer    =    random.getChars(ch,    0,    count    -    1);    	non-compiled	[CE]  	11	None	replace
184	[BUG]  [BUGGY]  char  ch  =  random.getChars(buffer,  start,  end);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(buffer,  start,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(buffer,  start,  end);	  char    ch    =    random.getChars(buffer,    start,    count);    	non-compiled	[CE]  	98	None	replace
185	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start,  count);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  start,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  start,  count);	  char    ch    =    random.getChars(buffer,    start,    count);    	non-compiled	[CE]  	98	None	replace
186	[BUG]  [BUGGY]  char  ch  =  random.getChars(buffer,  start,  count  +  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(buffer,  start,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(buffer,  start,  count  +  1);	  char    ch    =    random.getChars(buffer,    start,    count);    	non-compiled	[CE]  	98	None	replace
187	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  ch);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  0,  ch);	  char[]    buffer    =    random.getChars(ch,    0,    start);    	non-compiled	[CE]  	86	None	replace
188	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  end);	  char[]    buffer    =    random.getChars(ch,    0,    start);    	non-compiled	[CE]  	86	None	replace
189	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  0,  count  +  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  0,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  0,  count  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    count    +    1);    	non-compiled	[CE]  	16	None	replace
190	[BUG]  [BUGGY]  char[]  buffer,  new  char[count  *  1]);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  new  char[count  *  1]);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  new  char[count  *  1]);	  char[]    buffer,    new    char[count    +    1]);    	non-compiled	[CE]  	80	None	replace
191	[BUG]  [BUGGY]  char[]  buffer,  new  char[count  +  1],  random);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  new  char[count  +  1],  random);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  new  char[count  +  1],  random);	  char[]    buffer,    new    char[count    +    1]);    	non-compiled	[CE]  	80	None	replace
192	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH)+  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH)+  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH)+  1);	  char    ch    =    random.quoteChar(Character.toLowerCase(Locale.ENGLISH));    	non-compiled	[CE]  	55	None	replace
193	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH),  count);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH),  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH),  count);	  char    ch    =    random.quoteChar(Character.toLowerCase(Locale.ENGLISH));    	non-compiled	[CE]  	55	None	replace
194	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  start,  end);	  char[]    buffer    =    random.getChars(0,    start,    count);    	non-compiled	[CE]  	91	None	replace
195	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  count  +  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  start,  count  +  1);	  char[]    buffer    =    random.getChars(0,    start,    count);    	non-compiled	[CE]  	91	None	replace
196	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  end,  count);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  end,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  end,  count);	  char[]    buffer    =    random.getChars(0,    start,    count);    	non-compiled	[CE]  	91	None	replace
197	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  length);  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  start,  length);	  char[]    buffer    =    random.getChars(0,    start,    count);    	non-compiled	[CE]  	91	None	replace
198	[BUG]  [BUGGY]  char  ch  =  random.getChars(start  +  1,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start  +  1,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start  +  1,  count);	  char    ch    =    random.getChars(start    +    1);    	non-compiled	[CE]  	79	None	replace
199	[BUG]  [BUGGY]  char  ch  =  random.getChars(end  +  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(end  +  1);	  char    ch    =    random.getChars(start    +    1);    	non-compiled	[CE]  	79	None	replace
200	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  0. ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    random.length    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	73	None	replace
201	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  	41	None	replace
202	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(count,  start  +  1);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  	41	None	replace
203	[BUG]  [BUGGY]  Random  random  =  random.nextInt(4,  count  +  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(4,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(4,  count  +  1);	  Random    random    =    random.nextInt(4,    count);    	non-compiled	[CE]  	63	None	replace
204	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  1,  count);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(1,  1,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  1,  count);	  Random    random    =    random.nextInt(4,    count);    	non-compiled	[CE]  	63	None	replace
205	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  count  +  2);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  count  +  2);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  count  +  2);	  char    ch    =    random.getChars(0,    count);    	non-compiled	[CE]  	2	None	replace
206	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  *  1,  random.length);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  *  1,  random.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  *  1,  random.length);	  char[]    buffer    =    random.getChars(ch,    0,    count    +    1,    random.length);    	non-compiled	[CE]  	10	None	replace
207	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length,  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length,  1);	  char[]    buffer    =    random.getChars(ch,    0,    count    +    1,    random.length);    	non-compiled	[CE]  	10	None	replace
208	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length  -  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length  -  1);	  char[]    buffer    =    random.getChars(ch,    0,    count    +    1,    random.length);    	non-compiled	[CE]  	10	None	replace
209	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0. ",  chars);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0. ",  chars);  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0. ",  chars);	  Throwables.throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	46	None	replace
210	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  buffer,  count);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  buffer,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  buffer,  count);	  char    ch    =    random.getChars(buffer,    start,    count);    	non-compiled	[CE]  	98	None	replace
211	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start,  count);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  start,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  start,  count);	  char    ch    =    random.getChars(buffer,    start,    count);    	non-compiled	[CE]  	98	None	replace
212	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  count  +  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start  +  1,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start  +  1,  count  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    count    +    1);    	non-compiled	[CE]  	16	None	replace
213	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count  +  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end,  count  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    count    +    1);    	non-compiled	[CE]  	16	None	replace
214	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length:  ' "  +  random.length  + "'  is  less  than  0.0 ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length:  ' "  +  random.length  + "'  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length:  ' "  +  random.length  + "'  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.length    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	38	None	replace
215	[BUG]  [BUGGY]  Random  random  =  random.nextInt(2,  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(2,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(2,  1);	  Random    random    =    random.nextInt(1,    1);    	non-compiled	[CE]  	30	None	replace
216	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  0.  chars.length ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  0.  chars.length ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  0.  chars.length ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.    chars.length   ");    	non-compiled	[CE]  	83	None	replace
217	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.  chars.length ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.  chars.length ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  0.  chars.length ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.    chars.length   ");    	non-compiled	[CE]  	83	None	replace
218	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  buffer,  end);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  buffer,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  0,  buffer,  end);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  	49	None	replace
219	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.0 ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    random    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	74	None	replace
220	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.01 ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.01 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.01 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    random    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	74	None	replace
221	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  start,  end  +  1);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  	28	None	replace
222	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end  -  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start,  end  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  start,  end  -  1);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  	28	None	replace
223	[BUG]  [BUGGY]  Random  random  =  random.nextInt(buffer,  start,  end);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(buffer,  start,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(buffer,  start,  end);	  Random    random    =    random.nextInt(ch,    start,    end);    	non-compiled	[CE]  	28	None	replace
224	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  start,  count);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  start,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  start,  count);	  Random    random    =    random.nextInt(ch,    start,    count);    	non-compiled	[CE]  	44	None	replace
225	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end,  0);	  char[]    buffer    =    random.getChars(start,    end,    count);    	non-compiled	[CE]  	90	None	replace
226	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars.length);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end,  chars.length);	  char[]    buffer    =    random.getChars(start,    end,    count);    	non-compiled	[CE]  	90	None	replace
227	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(-1);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(-1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(-1);	  char[]    buffer    =    random.getChars();    	non-compiled	[CE]  	4	None	replace
228	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  0,  buffer.length);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  0,  buffer.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  0,  buffer.length);	  char    ch    =    random.getChars(0,    0,    start);    	non-compiled	[CE]  	3	None	replace
229	[BUG]  [BUGGY]  Random  random  =(this.random!=  null)?  this.random.nullValue()  :  random;  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =(this.random!=  null)?  this.random.nullValue()  :  random;  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =(this.random!=  null)?  this.random.nullValue()  :  random;	  Random    random    =    this.random.nullValue();    	non-compiled	[CE]  	92	None	replace
230	[BUG]  [BUGGY]  Random  random  =  new  Random(this.random.nullValue());  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  new  Random(this.random.nullValue());  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  new  Random(this.random.nullValue());	  Random    random    =    this.random.nullValue();    	non-compiled	[CE]  	92	None	replace
231	[BUG]  [BUGGY]  char[]  buffer  =  random.getBytes(start);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getBytes(start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getBytes(start);	  char[]    buffer    =    random.getBytes(ch);    	non-compiled	[CE]  	94	None	replace
232	[BUG]  [BUGGY]  Char  ch  =  random.getChars(start,  count);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Char  ch  =  random.getChars(start,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Char  ch  =  random.getChars(start,  count);	  char    ch    =    random.getChars(count,    start);    	non-compiled	[CE]  	14	None	replace
233	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  random.length);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  random.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  random.length);	  char[]    buffer    =    random.getChars(ch,    0,    count    +    1,    random.length);    	non-compiled	[CE]  	10	None	replace
234	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start  +  1,  random.length);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start  +  1,  random.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start  +  1,  random.length);	  char[]    buffer    =    random.getChars(ch,    0,    count    +    1,    random.length);    	non-compiled	[CE]  	10	None	replace
235	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH),  0);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH),  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH),  0);	  char    ch    =    random.quoteChar(Character.toUpperCase(Locale.ENGLISH));    	non-compiled	[CE]  	82	None	replace
236	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	60	None	replace
237	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  0,  buffer.length);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  0,  buffer.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  0,  buffer.length);	  char    ch    =    random.getChars(start,    0,    count);    	non-compiled	[CE]  	75	None	replace
238	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  0,  end);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  0,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  0,  end);	  char    ch    =    random.getChars(start,    0,    count);    	non-compiled	[CE]  	75	None	replace
239	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  0,  start);	  char[]    buffer    =    random.getChars(0,    0,    count);    	non-compiled	[CE]  	12	None	replace
240	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1  +  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  -  1  +  1);	  char[]    buffer    =    random.getChars(ch,    0,    count    -    1);    	non-compiled	[CE]  	11	None	replace
241	[BUG]  [BUGGY]  char  ch  =  random.getChars(1,  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(1,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(1,  1);	  char    ch    =    random.getChars(0,    1);    	non-compiled	[CE]  	43	None	replace
242	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start  +  1,  end  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(start  +  1,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(start  +  1,  end  +  1);	  Random    random    =    random.nextInt(start,    end    +    1);    	non-compiled	[CE]  	76	None	replace
243	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1);	  Random    random    =    random.nextInt(0,    1);    	non-compiled	[CE]  	31	None	replace
244	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1. ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.getName()    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	95	None	replace
245	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  start  -  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  start  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  start  -  1);	  Random    random    =    random.nextInt(0,    start);    	non-compiled	[CE]  	78	None	replace
246	[BUG]  [BUGGY]  char[]  buffer,  start,  random);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  start,  random);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  start,  random);	  char[]    buffer,    chars,    random);    	non-compiled	[CE]  	20	None	replace
247	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.',  1));  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.',  1));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase('.',  1));	  char    ch    =    random.quoteChar(Character.toUpperCase('.'));    	non-compiled	[CE]  	89	None	replace
248	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.',  chars));  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase('.',  chars));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase('.',  chars));	  char    ch    =    random.quoteChar(Character.toUpperCase('.'));    	non-compiled	[CE]  	89	None	replace
249	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  0);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  0);	  char[]    buffer    =    random.getChars(ch,    0,    1);    	non-compiled	[CE]  	50	None	replace
250	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  1);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  	66	None	replace
251	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start,  0);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end,  start,  0);	  char[]    buffer    =    random.getChars(start,    start,    end,    0);    	non-compiled	[CE]  	66	None	replace
252	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  start,  1);	  char[]    buffer    =    random.getChars(0,    start,    count);    	non-compiled	[CE]  	91	None	replace
253	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0 ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	70	None	replace
254	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length:  ' "  +  random.length  + "'  is  less  than  0.0 ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length:  ' "  +  random.length  + "'  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length:  ' "  +  random.length  + "'  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	70	None	replace
255	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1, ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1, ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1, ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.length    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	99	None	replace
256	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  start,  end);	  char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  	26	None	replace
257	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  0);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  0);	  char    ch    =    random.getChars(start,    1);    	non-compiled	[CE]  	59	None	replace
258	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  count  -  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  count  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  count  -  1);	  char    ch    =    random.getChars(start,    count    +    1);    	non-compiled	[CE]  	13	None	replace
259	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  0.0 ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    random.length    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	73	None	replace
260	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  1. ");  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  1. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    random.length    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	73	None	replace
261	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  end  -  1  +  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(start,  end  -  1  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(start,  end  -  1  +  1);	  Random    random    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  	77	None	replace
262	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  end  -  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(1,  end  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  end  -  1);	  Random    random    =    random.nextInt(start,    end    -    1);    	non-compiled	[CE]  	77	None	replace
263	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(chars));  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(chars));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(chars));	  char    ch    =    random.quoteChar(Character.toLowerCase(len));    	non-compiled	[CE]  	54	None	replace
264	[BUG]  [BUGGY]  char[]  buffer,  new  char[0]);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  new  char[0]);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  new  char[0]);	  char[]    buffer,    new    char[count]);    	non-compiled	[CE]  	18	None	replace
265	[BUG]  [BUGGY]  char[]  buffer,  new  char[1]);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  new  char[1]);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  new  char[1]);	  char[]    buffer,    new    char[count]);    	non-compiled	[CE]  	18	None	replace
266	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH),  0);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH),  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toLowerCase(Locale.ENGLISH),  0);	  char    ch    =    random.quoteChar(Character.toLowerCase(Locale.ENGLISH));    	non-compiled	[CE]  	55	None	replace
267	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end  -  1);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  end  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  end  -  1);	  char    ch    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  	42	None	replace
268	[BUG]  [BUGGY]  char  ch  =  random.getChars(start  +  1,  end  +  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start  +  1,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start  +  1,  end  +  1);	  char    ch    =    random.getChars(start,    end    +    1);    	non-compiled	[CE]  	42	None	replace
269	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start  +  1);	  char[]    buffer    =    random.getChars(ch,    0,    start);    	non-compiled	[CE]  	86	None	replace
270	[BUG]  [BUGGY]  Random  random  =  random.nextInt(start,  ch);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(start,  ch);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(start,  ch);	  Random    random    =    random.nextInt(ch,    start);    	non-compiled	[CE]  	100	None	replace
271	[BUG]  [BUGGY]  Random  random  =  random.nextInt(ch,  start  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(ch,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(ch,  start  +  1);	  Random    random    =    random.nextInt(ch,    start);    	non-compiled	[CE]  	100	None	replace
272	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end,  start);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  end,  start);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  end,  start);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  	58	None	replace
273	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start,  end  +  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  start,  end  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  start,  end  +  1);	  char    ch    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  	58	None	replace
274	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue()  +  1,  count);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue()  +  1,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  new  Random(random.nullValue()  +  1,  count);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  	93	None	replace
275	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start  +  1,  count);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  start  +  1,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  start  +  1,  count);	  char    ch    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  	69	None	replace
276	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  0);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  0);	  char[]    buffer    =    random.getChars(ch,    start,    1);    	non-compiled	[CE]  	15	None	replace
277	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  0);	  char[]    buffer    =    random.getChars(ch,    start,    1);    	non-compiled	[CE]  	15	None	replace
278	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  -  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end  -  1);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  	48	None	replace
279	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch  +  1);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    end    +    1);    	non-compiled	[CE]  	48	None	replace
280	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1: ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1: ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1: ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	71	None	replace
281	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1. ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	71	None	replace
282	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1, ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1, ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1, ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	71	None	replace
283	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  1. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  1. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  1. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	84	None	replace
284	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1, ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1, ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  1, ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	84	None	replace
285	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  /  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  /  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  /  1);	  char[]    buffer    =    random.getChars(ch,    0,    count    +    1);    	non-compiled	[CE]  	9	None	replace
286	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start,  end  -  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  start,  end  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  start,  end  -  1);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  	88	None	replace
287	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start  +  1,  end);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  start  +  1,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  start  +  1,  end);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  	88	None	replace
288	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  1: ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  1: ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random  + "  is  less  than  1: ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1:   ");    	non-compiled	[CE]  	96	None	replace
289	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  ch  + "  is  less  than  0.   ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  ch  + "  is  less  than  0.   ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  length   "  +  ch  + "  is  less  than  0.   ");	  Throwables.throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	32	None	replace
290	[BUG]  [BUGGY]  char  ch  =  random.getChars(buffer,  start  +  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(buffer,  start  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(buffer,  start  +  1);	  char    ch    =    random.getChars(buffer,    start);    	non-compiled	[CE]  	8	None	replace
291	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.valueOf(0,  count));  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.valueOf(0,  count));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.valueOf(0,  count));	  char    ch    =    random.quoteChar(Character.valueOf(count));    	non-compiled	[CE]  	57	None	replace
292	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random  + "  is  less  than  0.   ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random  + "  is  less  than  0.   ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  random  + "  is  less  than  0.   ");	  throw    new    IllegalArgumentException(   "Requested    random    length:   "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	33	None	replace
293	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  count  -  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  count  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  count  -  1);	  char    ch    =    random.getChars(0,    count);    	non-compiled	[CE]  	2	None	replace
294	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0. ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  0.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.0.   ");    	non-compiled	[CE]  	101	None	replace
295	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1.0. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random.length  + "  is  less  than  1.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random.length    +   "    is    less    than    0.0.   ");    	non-compiled	[CE]  	101	None	replace
296	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1: ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1: ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1: ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	61	None	replace
297	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1, ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1, ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  1, ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    random    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	61	None	replace
298	[BUG]  [BUGGY]  char[]  buffer,  0,  this.chars.length);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  0,  this.chars.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  this.chars.length);	  char[]    buffer,    0,    chars.length);    	non-compiled	[CE]  	19	None	replace
299	[BUG]  [BUGGY]  char[]  buffer,  0,  random.arrayOffset());  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  0,  random.arrayOffset());  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  random.arrayOffset());	  char[]    buffer,    0,    chars.length);    	non-compiled	[CE]  	19	None	replace
300	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start  +  1,  count);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  start  +  1,  count);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  start  +  1,  count);	  char    ch    =    random.getChars(0,    start);    	non-compiled	[CE]  	1	None	replace
301	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1 ",  chars);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1 ",  chars);  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1 ",  chars);	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.length    +   "    is    less    than    1.   ");    	non-compiled	[CE]  	99	None	replace
302	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length,  chars.length);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length,  chars.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length,  chars.length);	  char[]    buffer    =    random.getChars(ch,    0,    count    +    1,    random.length);    	non-compiled	[CE]  	10	None	replace
303	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length,  0);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length,  0);	  char[]    buffer    =    random.getChars(ch,    0,    count    +    1,    random.length);    	non-compiled	[CE]  	10	None	replace
304	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1 ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	35	None	replace
305	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  0.0 ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  0.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	53	None	replace
306	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  0,  count  -  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(start,  0,  count  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(start,  0,  count  -  1);	  char    ch    =    random.getChars(start,    0,    count);    	non-compiled	[CE]  	75	None	replace
307	[BUG]  [BUGGY]  Random  random  =  random.nextInt(0,  start,  end);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(0,  start,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(0,  start,  end);	  Random    random    =    random.nextInt(ch,    start,    count);    	non-compiled	[CE]  	44	None	replace
308	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  start,  end);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(1,  start,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  start,  end);	  Random    random    =    random.nextInt(ch,    start,    count);    	non-compiled	[CE]  	44	None	replace
309	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  ch);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  ch);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  ch);	  char[]    buffer    =    random.getChars(0,    count);    	non-compiled	[CE]  	6	None	replace
310	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.toString()  + "  is  less  than  0.   ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.toString()  + "  is  less  than  0.   ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.toString()  + "  is  less  than  0.   ");	  throw    new    IllegalArgumentException(   "Requested    random    length:   "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	33	None	replace
311	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  4);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  4);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  4);	  char    ch    =    random.getChars(0,    count);    	non-compiled	[CE]  	2	None	replace
312	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.  chars. ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.  chars. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  count  + "  is  less  than  0.  chars. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    0.    chars.length   ");    	non-compiled	[CE]  	83	None	replace
313	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1.0 ");  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1.0 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1.0   ");    	non-compiled	[CE]  	34	None	replace
314	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1.0. ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.length  + "  is  less  than  1.0. ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1.0   ");    	non-compiled	[CE]  	34	None	replace
315	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(count  +  1));  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(count  +  1));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(count  +  1));	  char    ch    =    random.quoteChar(Character.toLowerCase(count));    	non-compiled	[CE]  	56	None	replace
316	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  3);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  3);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  3);	  char    ch    =    random.getChars(0,    1);    	non-compiled	[CE]  	43	None	replace
317	[BUG]  [BUGGY]  Random  random  =(this.random!=  null)?  this.random.nullValue()  :  random.nullValue();  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =(this.random!=  null)?  this.random.nullValue()  :  random.nullValue();  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =(this.random!=  null)?  this.random.nullValue()  :  random.nullValue();	  Random    random    =    this.random.nullValue();    	non-compiled	[CE]  	92	None	replace
318	[BUG]  [BUGGY]  Random  random  =(this.random  ==  null)?  this.random.nullValue()  :  random.nullValue();  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =(this.random  ==  null)?  this.random.nullValue()  :  random.nullValue();  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =(this.random  ==  null)?  this.random.nullValue()  :  random.nullValue();	  Random    random    =    this.random.nullValue();    	non-compiled	[CE]  	92	None	replace
319	[BUG]  [BUGGY]  Random  random  =  random.nullValue()?  null  :  random.nullValue();  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nullValue()?  null  :  random.nullValue();  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nullValue()?  null  :  random.nullValue();	  Random    random    =    RANDOM.nullValue();    	non-compiled	[CE]  	24	None	replace
320	[BUG]  [BUGGY]  Random  random  =  randomUtils.nullValue();  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  randomUtils.nullValue();  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  randomUtils.nullValue();	  Random    random    =    RANDOM.nullValue();    	non-compiled	[CE]  	24	None	replace
321	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  letters);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  letters);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  letters);	  char[]    buffer    =    random.getChars(ch,    0,    count    -    1);    	non-compiled	[CE]  	11	None	replace
322	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  chars.length);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  chars.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  -  1,  chars.length);	  char[]    buffer    =    random.getChars(ch,    0,    count    -    1);    	non-compiled	[CE]  	11	None	replace
323	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  0);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch,  0);	  char[]    buffer    =    random.getChars(start,    end,    ch);    	non-compiled	[CE]  	65	None	replace
324	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  4);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  4);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  start,  4);	  char[]    buffer    =    random.getChars(ch,    start,    length);    	non-compiled	[CE]  	68	None	replace
325	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  letters);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  chars,  random,  letters);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  chars,  random,  letters);	  char[]    buffer,    chars,    random);    	non-compiled	[CE]  	20	None	replace
326	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  1 ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  1 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length: "  +  random.length  + "  is  less  than  1 ");	  throw    new    IllegalArgumentException(   "Requested    random    length:   "    +    random.length    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	36	None	replace
327	[BUG]  [BUGGY]  Random  random  =  new  Random(random.nullValue(),  ch);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  new  Random(random.nullValue(),  ch);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  new  Random(random.nullValue(),  ch);	  Random    random    =    new    Random(random.nullValue());    	non-compiled	[CE]  	93	None	replace
328	[BUG]  [BUGGY]  char  ch  =  random.getChars(-1);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(-1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(-1);	  char    ch    =    random.getChars(count);    	non-compiled	[CE]  	7	None	replace
329	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start  +  1,  end);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start  +  1,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start  +  1,  end);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  	49	None	replace
330	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  1);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end,  1);	  char[]    buffer    =    random.getChars(ch,    0,    start,    end);    	non-compiled	[CE]  	49	None	replace
331	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(0,  count));  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(0,  count));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(0,  count));	  char    ch    =    random.quoteChar(Character.valueOf(count));    	non-compiled	[CE]  	57	None	replace
332	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(auth));  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(auth));  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(auth));	  char    ch    =    random.quoteChar(Character.valueOf(count));    	non-compiled	[CE]  	57	None	replace
333	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1: ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1: ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1: ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    count    +   "    is    less    than    1:   ");    	non-compiled	[CE]  	96	None	replace
334	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1 ");  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  length   "  +  random.getName()  + "  is  less  than  1 ");	  throw    new    IllegalArgumentException(   "Requested    random    length       "    +    random.getName()    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	95	None	replace
335	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer  =  random.getChars(0,  0,  1);	  char[]    buffer    =    random.getChars(0,    0,    count);    	non-compiled	[CE]  	12	None	replace
336	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0. ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  random  + "  is  less  than  0.0. ");	  Throwables.throw    new    IllegalArgumentException(   "Requested    random    string    length       "    +    count    +   "    is    less    than    0.0   ");    	non-compiled	[CE]  	52	None	replace
337	[BUG]  [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH),  chars);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH),  chars);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.quoteChar(Character.toUpperCase(Locale.ENGLISH),  chars);	  char    ch    =    random.quoteChar(Character.toUpperCase(Locale.ENGLISH));    	non-compiled	[CE]  	82	None	replace
338	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.0 ");  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.0 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Throwables.throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random  + "  is  less  than  0.0 ");	  Throwables.throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    count    +   "    is    less    than    0.   ");    	non-compiled	[CE]  	21	None	replace
339	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  1 ");  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  1 ");  [BUGGY]      }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	throw  new  IllegalArgumentException( "Requested  random  string  length: "  +  random.length  + "  is  less  than  1 ");	  throw    new    IllegalArgumentException(   "Requested    random    string    length:   "    +    random.length    +   "    is    less    than    0.       ");    	non-compiled	[CE]  	73	None	replace
340	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start,  end,  letters);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  start,  end,  letters);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  start,  end,  letters);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  	88	None	replace
341	[BUG]  [BUGGY]  char  ch  =  random.getChars(0,  start,  end,  chars.length);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char  ch  =  random.getChars(0,  start,  end,  chars.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char  ch  =  random.getChars(0,  start,  end,  chars.length);	  char    ch    =    random.getChars(0,    start,    end);    	non-compiled	[CE]  	88	None	replace
342	[BUG]  [BUGGY]  char[]  buffer,  0,  chars.length,  random.length);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  char[]  buffer,  0,  chars.length,  random.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	char[]  buffer,  0,  chars.length,  random.length);	  char[]    buffer,    0,    chars.length);    	non-compiled	[CE]  	19	None	replace
343	[BUG]  [BUGGY]  Random  random  =  random.nextInt(1,  end);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {      [BUGGY]  Random  random  =  random.nextInt(1,  end);  [BUGGY]      throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	Random  random  =  random.nextInt(1,  end);	  Random    random    =    random.nextInt(0,    start);    	non-compiled	[CE]  	78	None	replace
