bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(count  ==  0)  {  [CE]  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]  }  else  if(count  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count  ==  0)  {	}  else  if  (count  <  0)  {  	non-compiled	[CE]  	5	None	replace
2	[BUG]  [BUGGY]  }  else  if(count!=  0)  {  [CE]  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]  }  else  if(count!=  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count!=  0)  {	}  else  if  (count  <  0)  {  	non-compiled	[CE]  	5	None	replace
3	[BUG]  [BUGGY]  }  else  if(count  >=  0)  {  [CE]  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]  }  else  if(count  >=  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count  >=  0)  {	}  else  if  (count  <  0)  {  	non-compiled	[CE]  	5	None	replace
4	[BUG]  [BUGGY]  }  else  if(count  <  =  0)  {  [CE]  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]  }  else  if(count  <  =  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count  <  =  0)  {	}  else  if  (count  <  0)  {  	non-compiled	[CE]  	5	None	replace
5	[BUG]  [BUGGY]    [CE]  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	  	}  else  if  (count  <  0)  {  	non-compiled	[CE]  	5	None	replace
6	[BUG]  [BUGGY]    char[]  buffer,  chars);  [CE]  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    char[]  buffer,  chars);  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    char[]  buffer,  chars);		non-compiled	[CE]  	6	None	add
7	[BUG]  [BUGGY]    char[]  buffer  =  random.getChars(ch,  0,  count);  [CE]  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    char[]  buffer  =  random.getChars(ch,  0,  count);  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    char[]  buffer  =  random.getChars(ch,  0,  count);		non-compiled	[CE]  	6	None	add
8	[BUG]  [BUGGY]    char[]  buffer  =  random.chars();  [CE]  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    char[]  buffer  =  random.chars();  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    char[]  buffer  =  random.chars();		non-compiled	[CE]  	6	None	add
9	[BUG]  [BUGGY]    char[]  buffer  =  random.getChars(ch,  start,  end);  [CE]  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    char[]  buffer  =  random.getChars(ch,  start,  end);  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    char[]  buffer  =  random.getChars(ch,  start,  end);		non-compiled	[CE]  	6	None	add
10	[BUG]  [BUGGY]    char[]  buffer  =  random.getChars(ch,  start,  count);  [CE]  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    char[]  buffer  =  random.getChars(ch,  start,  count);  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    char[]  buffer  =  random.getChars(ch,  start,  count);		non-compiled	[CE]  	6	None	add
11	[BUG]  [BUGGY]    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }  [CE]  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }		non-compiled	[CE]  	6	None	add
12	[BUG]  [BUGGY]    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }  [CE]  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }		non-compiled	[CE]  	6	None	add
13	[BUG]  [BUGGY]    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0. ");  }  [CE]  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0. ");  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0. ");  }		non-compiled	[CE]  	6	None	add
14	[BUG]  [BUGGY]    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  1. ");  }  [CE]  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  1. ");  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  1. ");  }		non-compiled	[CE]  	6	None	add
15	[BUG]  [BUGGY]    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.0 ");  }  [CE]  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.0 ");  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.0 ");  }		non-compiled	[CE]  	6	None	add
16	[BUG]  [BUGGY]    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.5 ");  }  [CE]  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.5 ");  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	    if(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.5 ");  }		non-compiled	[CE]  	6	None	add
17	[BUG]  [BUGGY]  }  else  if(count  <  1)  {  [CE]  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]  }  else  if(count  <  1)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count  <  1)  {	}  else  if  (count  <  0)  {  	non-compiled	[CE]  	5	None	replace
